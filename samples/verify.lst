AS65 Assembler for R6502 [1.42].                                     Page    1
--------------------------------- verify.asm ---------------------------------

5309 lines read, no errors in pass 1.
                        ;
                        ; 6 5 0 2   F U N C T I O N A L   T E S T S
                        ;
                        ; Copyright (C) 2012  Klaus Dormann
                        ;
                        ; This program is free software: you can redistribute 
                        ; it under the terms of the GNU General Public License
                        ; the Free Software Foundation, either version 3 of th
                        ; (at your option) any later version.
                        ;
                        ; This program is distributed in the hope that it will
                        ; but WITHOUT ANY WARRANTY; without even the implied w
                        ; MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.
                        ; GNU General Public License for more details.
                        ;
                        ; You should have received a copy of the GNU General P
                        ; along with this program.  If not, see <http://www.gn
                        
                        
                        ; This program is designed to test all opcodes of a 65
                        ; addressing modes with focus on proper setting of the
                        ; register bits.
                        ;
                        ; version 30-jul-2012
                        ; contact info at http://2m5.de or email K@2m5.de
                        ;
                        ; assembled with AS65 from http://www.kingswood-consul
                        ; command line switches: -l -m -s2 -w -h0
                        ;                         |  |  |   |  no page headers
                        ;                         |  |  |   wide listing (133 
                        ;                         |  |  write intel hex file i
                        ;                         |  expand macros in listing
                        ;                         generate pass2 listing
                        ;
                        ; No IO - should be run from a monitor with access to 
                        ; To run load intel hex image with a load command, tha
                        ; enter a go command.
                        ; Loop on program counter determines error or successf
                        ; Check listing for relevant traps (jump/branch *).
                        ; Please note that in early tests some instructions wi
                        ; they are actually tested!
                        ;
                        ; RESET, NMI or IRQ should not occur and will be trapp
                        ; Tests documented behavior of the original NMOS 6502 
                        ; opcodes. Additional opcodes of newer versions of the
                        ; not be tested. Decimal ops will only be tested with 
                        ; N V Z flags will be ignored.
                        ;
                        ; Debugging hints:
                        ;     Most of the code is written sequentially. if you
                        ;   immediately preceeding code for the instruction to
                        ;   tested first, flags are checked second by pushing 
                        ;   pulling them to the accumulator after the result w
                        ;   flags are no longer valid for the tested instructi
                        ;     If the tested instruction was indexed, the relev
                        ;   also be checked. Opposed to the flags, X and Y reg
                        ;
                        ; versions:
                        ;   28-jul-2012  1st version distributed for testing
                        ;   29-jul-2012  fixed references to location 0, now #
                        ;                added license - GPLv3
AS65 Assembler for R6502 [1.42].                                     Page    2
--------------------------------- verify.asm ---------------------------------

                        ;   30-jul-2012  added configuration options
                        
                        
                        ; C O N F I G U R A T I O N
                        ;
                        ;ROM_vectors writable (0=no, 1=yes)
                        ;if ROM vectors can not be used interrupts will not be
                        ;as a consequence BRK can not be tested but will be em
0001 =                  ROM_vectors = 1
                        ;load_data_direct (0=move from code segment, 1=load di
                        ;loading directly is preferred but may not be supporte
                        ;0 produces only consecutive object code, 1 is not sui
0001 =                  load_data_direct = 1
                        ;I_flag behavior (0=force enabled, 1=force disabled, 2
                        ;change) 2 requires extra code and is not recommended.
                        ;tested if you allow changing the interrupt status (I_
0001 =                  I_flag = 1
                        ;configure memory - try to stay away from memory used 
                        ;zero_page memory start address, $55 (85) consecutive 
                        ;                                add 2 if I_flag = 2
000a =                  zero_page = $a
                        ;data_segment memory start address, $5A (90) consecuti
0200 =                  data_segment = $200
                        ;code_segment memory start address, 12kB of consecutiv
                        ;                                   add 2.5 kB if I_fl
                        ;parts of the code are self modifying and must reside 
1000 =                  code_segment = $1000
                        
                        
                                if I_flag = 0
                        load_flag   macro       ;force enable interrupts
                                    lda #\1&$fb ;mask I-flag
                                    endm
                                endif
                                if I_flag = 1
                        load_flag   macro       ;force disable interrupts
                                    lda #\1|4
                                    endm
                                endif
                                if I_flag = 2
                        load_flag   macro       ;never change I-flag
                                    lda #\1
                                    ora flag_I_on
                                    and flag_I_off
                                    endm
                                endif
                                if I_flag = 3
                        load_flag   macro       ;allow test to change I-flag
                                    lda #\1
                                    endm
                                endif
                        
                        set_stat    macro       ;setting flags in the processo
                                    load_flag \1
                                    pha         ;use stack to load status
                                    plp
                                    endm
                        
                        set_a       macro       ;precharging accu & status
                                    load_flag \2
                                    pha         ;use stack to load status
                                    lda #\1     ;precharge accu
AS65 Assembler for R6502 [1.42].                                     Page    3
--------------------------------- verify.asm ---------------------------------

                                    plp
                                    endm
                        
                        set_x       macro       ;precharging index & status
                                    load_flag \2
                                    pha         ;use stack to load status
                                    ldx #\1     ;precharge accu
                                    plp
                                    endm
                        
                        set_y       macro       ;precharging index & status
                                    load_flag \2
                                    pha         ;use stack to load status
                                    ldy #\1     ;precharge accu
                                    plp
                                    endm
                        
                        set_ax      macro       ;precharging indexed accu & im
                                    load_flag \2
                                    pha         ;use stack to load status
                                    lda \1,x    ;precharge accu
                                    plp
                                    endm
                        
                        set_ay      macro       ;precharging indexed accu & im
                                    load_flag \2
                                    pha         ;use stack to load status
                                    lda \1,y    ;precharge accu
                                    plp
                                    endm
                        
                        set_z       macro       ;precharging indexed zp & imme
                                    load_flag \2
                                    pha         ;use stack to load status
                                    lda \1,x    ;load to zeropage
                                    sta zpt
                                    plp
                                    endm
                        
                        set_zx      macro       ;precharging zp,x & immediate 
                                    load_flag \2
                                    pha         ;use stack to load status
                                    lda \1,x    ;load to zeropage
                                    sta zpt,x
                                    plp
                                    endm
                        
                        set_abs     macro       ;precharging indexed memory & 
                                    load_flag \2
                                    pha         ;use stack to load status
                                    lda \1,x    ;load to memory
                                    sta abst
                                    plp
                                    endm
                        
                        set_absx    macro       ;precharging abs,x & immediate
                                    load_flag \2
                                    pha         ;use stack to load status
                                    lda \1,x    ;load to memory
                                    sta abst,x
                                    plp
                                    endm
AS65 Assembler for R6502 [1.42].                                     Page    4
--------------------------------- verify.asm ---------------------------------

                        
                                if I_flag = 0
                        cmp_flag    macro       ;I_flag is always enabled
                                    cmp #(\1|$30)&$fb
                                    endm
                        eor_flag    macro       ;invert expected on flags, mas
                                    eor #(\1&$fb|$30)
                                    endm
                                endif
                                if I_flag = 1
                        cmp_flag    macro       ;I_flag is always disabled
                                    cmp #(\1|$34)&$ff
                                    endm
                        eor_flag    macro       ;invert expected on flags
                                    eor #(\1|$34)
                                    endm
                                endif
                                if I_flag = 2
                        cmp_flag    macro       ;I_flag is never changed
                                    eor flag_I_on
                                    cmp #(\1|$30)&$fb
                                    endm
                        eor_flag    macro       ;invert expected on flags
                                    eor flag_I_on
                                    eor #(\1&$fb|$30)
                                    endm
                                endif
                                if I_flag = 3
                        cmp_flag    macro       ;I_flag is always enabled
                                    cmp #(\1|$30)&$ff
                                    endm
                        eor_flag    macro       ;invert expected on flags
                                    eor #(\1|$30)
                                    endm
                                endif
                        
                        tst_stat    macro       ;testing flags in the processo
                                    php         ;save status
                                    php         ;use stack to retrieve status
                                    pla
                                    cmp_flag \1
                                    bne *       ;trap
                                    plp         ;restore status
                                    endm
                        
                        tst_a       macro       ;testing result in accu & flag
                                    php         ;save flags
                                    php
                                    cmp #\1     ;test result
                                    bne *       ;trap
                                    pla         ;load status
                                    cmp_flag \2
                                    bne *       ;trap
                                    plp         ;restore status
                                    endm
                        
                        tst_x       macro       ;testing result in x index & f
                                    php         ;save flags
                                    php
                                    cpx #\1     ;test result
                                    bne *       ;trap
                                    pla         ;load status
AS65 Assembler for R6502 [1.42].                                     Page    5
--------------------------------- verify.asm ---------------------------------

                                    cmp_flag \2
                                    bne *       ;trap
                                    plp         ;restore status
                                    endm
                        
                        tst_y       macro       ;testing result in y index & f
                                    php         ;save flags
                                    php
                                    cpy #\1     ;test result
                                    bne *       ;trap
                                    pla         ;load status
                                    cmp_flag \2
                                    bne *       ;trap
                                    plp         ;restore status
                                    endm
                        
                        tst_ax      macro       ;indexed testing result in acc
                                    php         ;save flags
                                    cmp \1,x    ;test result
                                    bne *       ;trap
                                    pla         ;load status
                                    eor_flag \3
                                    cmp \2,x    ;test flags
                                    bne *       ;trap
                                    endm
                        
                        tst_ay      macro       ;indexed testing result in acc
                                    php         ;save flags
                                    cmp \1,y    ;test result
                                    bne *       ;trap
                                    pla         ;load status
                                    eor_flag \3
                                    cmp \2,y    ;test flags
                                    bne *       ;trap
                                    endm
                        
                        tst_z       macro       ;indexed testing result in zp 
                                    php         ;save flags
                                    lda zpt
                                    cmp \1,x    ;test result
                                    bne *       ;trap
                                    pla         ;load status
                                    eor_flag \3
                                    cmp \2,x    ;test flags
                                    bne *       ;trap
                                    endm
                        
                        tst_zx      macro       ;testing result in zp,x & flag
                                    php         ;save flags
                                    lda zpt,x
                                    cmp \1,x    ;test result
                                    bne *       ;trap
                                    pla         ;load status
                                    eor_flag \3
                                    cmp \2,x    ;test flags
                                    bne *       ;trap
                                    endm
                        
                        tst_abs     macro       ;indexed testing result in mem
                                    php         ;save flags
                                    lda abst
                                    cmp \1,x    ;test result
AS65 Assembler for R6502 [1.42].                                     Page    6
--------------------------------- verify.asm ---------------------------------

                                    bne *       ;trap
                                    pla         ;load status
                                    eor_flag \3
                                    cmp \2,x    ;test flags
                                    bne *       ;trap
                                    endm
                        
                        tst_absx    macro       ;testing result in abs,x & fla
                                    php         ;save flags
                                    lda abst,x
                                    cmp \1,x    ;test result
                                    bne *       ;trap
                                    pla         ;load status
                                    eor_flag \3
                                    cmp \2,x    ;test flags
                                    bne *       ;trap
                                    endm
                        
0001 =                  carry   equ %00000001   ;flag bits in status
0002 =                  zero    equ %00000010
0004 =                  intdis  equ %00000100
0008 =                  decmode equ %00001000
0010 =                  break   equ %00010000
0020 =                  reserv  equ %00100000
0040 =                  overfl  equ %01000000
0080 =                  minus   equ %10000000
                        
0001 =                  fc      equ carry
0002 =                  fz      equ zero
0003 =                  fzc     equ carry+zero
0040 =                  fv      equ overfl
0042 =                  fvz     equ overfl+zero
0080 =                  fn      equ minus
0081 =                  fnc     equ minus+carry
0082 =                  fnz     equ minus+zero
0083 =                  fnzc    equ minus+zero+carry
00c0 =                  fnv     equ minus+overfl
                        
                        
                            if load_data_direct = 1
                                data
                            else
                                bss                 ;uninitialized segment, co
                            endif
000a =                          org zero_page
000a :                  zp_bss
000a : c3824100         zp1     db  $c3,$82,$41,0   ;test patterns for LDx BIT
000e : 7f               zp7f    db  $7f             ;test pattern for compare
000f : 0000000000       zpt     ds  5               ;store/modify test area
                        ;logical zeropage operands
0014 : 001f7180         zpOR    db  0,$1f,$71,$80   ;test pattern for OR
0018 : 0fff7f80         zpAN    db  $0f,$ff,$7f,$80 ;test pattern for AND
001c : ff0f8f8f         zpEO    db  $ff,$0f,$8f,$8f ;test pattern for EOR
                        ;indirect addressing pointers
0020 : 0002             ind1    dw  abs1            ;indirect pointer to patte
0022 : 0102                     dw  abs1+1
0024 : 0202                     dw  abs1+2
0026 : 0302                     dw  abs1+3
0028 : 0402                     dw  abs7f
002a : 0801             inw1    dw  abs1-$f8        ;indirect pointer for wrap
002c : 3302             indt    dw  abst            ;indirect pointer to store
002e : 3402                     dw  abst+1
AS65 Assembler for R6502 [1.42].                                     Page    7
--------------------------------- verify.asm ---------------------------------

0030 : 3502                     dw  abst+2
0032 : 3602                     dw  abst+3
0034 : 3b01             inwt    dw  abst-$f8        ;indirect pointer for wrap
0036 : 3c02             indAN   dw  absAN           ;indirect pointer to AND p
0038 : 3d02                     dw  absAN+1
003a : 3e02                     dw  absAN+2
003c : 3f02                     dw  absAN+3
003e : 4002             indEO   dw  absEO           ;indirect pointer to EOR p
0040 : 4102                     dw  absEO+1
0042 : 4202                     dw  absEO+2
0044 : 4302                     dw  absEO+3
0046 : 3802             indOR   dw  absOR           ;indirect pointer to OR pa
0048 : 3902                     dw  absOR+1
004a : 3a02                     dw  absOR+2
004c : 3b02                     dw  absOR+3
                        ;add/subtract operand generation and result/flag predi
004e : 5802             adi2    dw  ada2            ;indirect pointer to opera
0050 : 5902             sbi2    dw  sba2            ;indirect pointer to compl
0052 : 5901             adiy2   dw  ada2-$ff        ;with offset for indirect 
0054 : 5a01             sbiy2   dw  sba2-$ff
0056 :                  zp_bss_end
0056 : 00               adfc    ds  1               ;carry flag before op
0057 : 00               ad1     ds  1               ;operand 1 - accumulator
0058 : 00               ad2     ds  1               ;operand 2 - memory / imme
0059 : 00               adrl    ds  1               ;expected result bits 0-7
005a : 00               adrh    ds  1               ;expected result bit 8 (ca
005b : 00               adrf    ds  1               ;expected flags NV0000ZC (
005c : 00               sb2     ds  1               ;operand 2 complemented fo
                        ;break test interrupt save
005d : 00               irq_a   ds  1               ;a register
005e : 00               irq_x   ds  1               ;x register
                            if I_flag = 2
                        ;masking for I bit in status
                        flag_I_on   ds  1           ;or mask to load flags
                        flag_I_off  ds  1           ;and mask to load flags
                            endif
                        
0200 =                          org data_segment
0200 :                  data_bss
0200 : c3824100         abs1    db  $c3,$82,$41,0   ;test patterns for LDx BIT
0204 : 7f               abs7f   db  $7f             ;test pattern for compare
                        ;loads
0205 : 80800002         fLDx    db  fn,fn,0,fz      ;expected flags for load
                        ;shifts
0209 :                  rASL                        ;expected result ASL & ROL
0209 : 86048200         rROL    db  $86,$04,$82,0   ; "
020d : 87058301         rROLc   db  $87,$05,$83,1   ;expected result ROL +carr
0211 :                  rLSR                        ;expected result LSR & ROR
0211 : 61412000         rROR    db  $61,$41,$20,0   ; "
0215 : e1c1a080         rRORc   db  $e1,$c1,$a0,$80 ;expected result ROR +carr
0219 :                  fASL                        ;expected flags for shifts
0219 : 81018002         fROL    db  fnc,fc,fn,fz    ;no carry in
021d : 81018000         fROLc   db  fnc,fc,fn,0     ;carry in
0221 :                  fLSR
0221 : 01000102         fROR    db  fc,0,fc,fz      ;no carry in
0225 : 81808180         fRORc   db  fnc,fn,fnc,fn   ;carry in
                        ;increments (decrements)
0229 : 7f80ff0001       rINC    db  $7f,$80,$ff,0,1 ;expected result for INC/D
022e : 0080800200       fINC    db  0,fn,fn,fz,0    ;expected flags for INC/DE
0233 : 0000000000       abst    ds  5               ;store/modify test area
                        ;logical memory operand
0238 : 001f7180         absOR   db  0,$1f,$71,$80   ;test pattern for OR
AS65 Assembler for R6502 [1.42].                                     Page    8
--------------------------------- verify.asm ---------------------------------

023c : 0fff7f80         absAN   db  $0f,$ff,$7f,$80 ;test pattern for AND
0240 : ff0f8f8f         absEO   db  $ff,$0f,$8f,$8f ;test pattern for EOR
                        ;logical accu operand
0244 : 00f11f00         absORa  db  0,$f1,$1f,0     ;test pattern for OR
0248 : f0ffffff         absANa  db  $f0,$ff,$ff,$ff ;test pattern for AND
024c : fff0f00f         absEOa  db  $ff,$f0,$f0,$0f ;test pattern for EOR
                        ;logical results
0250 : 00ff7f80         absrlo  db  0,$ff,$7f,$80
0254 : 02800080         absflo  db  fz,fn,0,fn
0258 :                  data_bss_end
                        ;add/subtract operand copy
0258 : 00               ada2    ds  1               ;operand 2
0259 : 00               sba2    ds  1               ;operand 2 complemented fo
                        
                                code
1000 =                          org code_segment
1000 : 78                       sei
1001 : a91d                     lda #29
1003 : 8501                     sta $01
1005 : d8                       cld
                        
                        ;stop interrupts before initializing BSS
                            if I_flag = 1
1006 : 78                       sei
                            endif
                        
                        ;initialize BSS segment
                            if load_data_direct != 1
                                ldx #zp_end-zp_init-1
                        ld_zp   lda zp_init,x
                                sta zp_bss,x
                                dex
                                bpl ld_zp
                                ldx #data_end-data_init-1
                        ld_data lda data_init,x
                                sta data_bss,x
                                dex
                                bpl ld_data
                            endif
                        
                        ;retain status of interrupt flag
                            if I_flag = 2
                                php
                                pla
                                and #4          ;isolate flag
                                sta flag_I_on   ;or mask
                                eor #lo(~4)     ;reverse
                                sta flag_I_off  ;and mask
                            endif
                        
                        ;testing relative addressing with BEQ
                        ;uses untested JMP DEX DEY LDA#0 LDY#$FE TYA TAX STA B
1007 : a0fe                     ldy #$fe        ;testing maximum range, not -1
1009 :                  range_loop
1009 : 88                       dey             ;next relative address
100a : 98                       tya
100b : aa                       tax             ;precharge count to end of loo
100c : 1003                     bpl range_fw    ;calculate relative address
100e : 18                       clc             ;avoid branch self or to relat
100f : 6902                     adc #2
1011 :                  range_fw
1011 : 497f                     eor #$7f        ;complement except sign
AS65 Assembler for R6502 [1.42].                                     Page    9
--------------------------------- verify.asm ---------------------------------

1013 : 8d9a10                   sta range_adr   ;load into test target
1016 : a900                     lda #0          ;should set zero flag in statu
1018 : 4c9910                   jmp range_op
                        
                                ;relative address target field with branch und
101b : ca                       dex             ;-128 - max backward
101c : ca                       dex
101d : ca                       dex
101e : ca                       dex
101f : ca                       dex
1020 : ca                       dex
1021 : ca                       dex
1022 : ca                       dex
1023 : ca                       dex             ;-120
1024 : ca                       dex
1025 : ca                       dex
1026 : ca                       dex
1027 : ca                       dex
1028 : ca                       dex
1029 : ca                       dex
102a : ca                       dex
102b : ca                       dex
102c : ca                       dex
102d : ca                       dex             ;-110
102e : ca                       dex
102f : ca                       dex
1030 : ca                       dex
1031 : ca                       dex
1032 : ca                       dex
1033 : ca                       dex
1034 : ca                       dex
1035 : ca                       dex
1036 : ca                       dex
1037 : ca                       dex             ;-100
1038 : ca                       dex
1039 : ca                       dex
103a : ca                       dex
103b : ca                       dex
103c : ca                       dex
103d : ca                       dex
103e : ca                       dex
103f : ca                       dex
1040 : ca                       dex
1041 : ca                       dex             ;-90
1042 : ca                       dex
1043 : ca                       dex
1044 : ca                       dex
1045 : ca                       dex
1046 : ca                       dex
1047 : ca                       dex
1048 : ca                       dex
1049 : ca                       dex
104a : ca                       dex
104b : ca                       dex             ;-80
104c : ca                       dex
104d : ca                       dex
104e : ca                       dex
104f : ca                       dex
1050 : ca                       dex
1051 : ca                       dex
1052 : ca                       dex
1053 : ca                       dex
AS65 Assembler for R6502 [1.42].                                     Page   10
--------------------------------- verify.asm ---------------------------------

1054 : ca                       dex
1055 : ca                       dex             ;-70
1056 : ca                       dex
1057 : ca                       dex
1058 : ca                       dex
1059 : ca                       dex
105a : ca                       dex
105b : ca                       dex
105c : ca                       dex
105d : ca                       dex
105e : ca                       dex
105f : ca                       dex             ;-60
1060 : ca                       dex
1061 : ca                       dex
1062 : ca                       dex
1063 : ca                       dex
1064 : ca                       dex
1065 : ca                       dex
1066 : ca                       dex
1067 : ca                       dex
1068 : ca                       dex
1069 : ca                       dex             ;-50
106a : ca                       dex
106b : ca                       dex
106c : ca                       dex
106d : ca                       dex
106e : ca                       dex
106f : ca                       dex
1070 : ca                       dex
1071 : ca                       dex
1072 : ca                       dex
1073 : ca                       dex             ;-40
1074 : ca                       dex
1075 : ca                       dex
1076 : ca                       dex
1077 : ca                       dex
1078 : ca                       dex
1079 : ca                       dex
107a : ca                       dex
107b : ca                       dex
107c : ca                       dex
107d : ca                       dex             ;-30
107e : ca                       dex
107f : ca                       dex
1080 : ca                       dex
1081 : ca                       dex
1082 : ca                       dex
1083 : ca                       dex
1084 : ca                       dex
1085 : ca                       dex
1086 : ca                       dex
1087 : ca                       dex             ;-20
1088 : ca                       dex
1089 : ca                       dex
108a : ca                       dex
108b : ca                       dex
108c : ca                       dex
108d : ca                       dex
108e : ca                       dex
108f : ca                       dex
1090 : ca                       dex
1091 : ca                       dex             ;-10
AS65 Assembler for R6502 [1.42].                                     Page   11
--------------------------------- verify.asm ---------------------------------

1092 : ca                       dex
1093 : ca                       dex
1094 : ca                       dex
1095 : ca                       dex
1096 : ca                       dex
1097 : ca                       dex
1098 : ca                       dex             ;-3
1099 :                  range_op                ;test target with zero flag=0,
109a =                  range_adr   = *+1       ;modifiable relative address
1099 : f0fe                     beq *           ;trap, if called without modif
109b : ca                       dex             ;+0
109c : ca                       dex
109d : ca                       dex
109e : ca                       dex
109f : ca                       dex
10a0 : ca                       dex
10a1 : ca                       dex
10a2 : ca                       dex
10a3 : ca                       dex
10a4 : ca                       dex
10a5 : ca                       dex             ;+10
10a6 : ca                       dex
10a7 : ca                       dex
10a8 : ca                       dex
10a9 : ca                       dex
10aa : ca                       dex
10ab : ca                       dex
10ac : ca                       dex
10ad : ca                       dex
10ae : ca                       dex
10af : ca                       dex             ;+20
10b0 : ca                       dex
10b1 : ca                       dex
10b2 : ca                       dex
10b3 : ca                       dex
10b4 : ca                       dex
10b5 : ca                       dex
10b6 : ca                       dex
10b7 : ca                       dex
10b8 : ca                       dex
10b9 : ca                       dex             ;+30
10ba : ca                       dex
10bb : ca                       dex
10bc : ca                       dex
10bd : ca                       dex
10be : ca                       dex
10bf : ca                       dex
10c0 : ca                       dex
10c1 : ca                       dex
10c2 : ca                       dex
10c3 : ca                       dex             ;+40
10c4 : ca                       dex
10c5 : ca                       dex
10c6 : ca                       dex
10c7 : ca                       dex
10c8 : ca                       dex
10c9 : ca                       dex
10ca : ca                       dex
10cb : ca                       dex
10cc : ca                       dex
10cd : ca                       dex             ;+50
10ce : ca                       dex
AS65 Assembler for R6502 [1.42].                                     Page   12
--------------------------------- verify.asm ---------------------------------

10cf : ca                       dex
10d0 : ca                       dex
10d1 : ca                       dex
10d2 : ca                       dex
10d3 : ca                       dex
10d4 : ca                       dex
10d5 : ca                       dex
10d6 : ca                       dex
10d7 : ca                       dex             ;+60
10d8 : ca                       dex
10d9 : ca                       dex
10da : ca                       dex
10db : ca                       dex
10dc : ca                       dex
10dd : ca                       dex
10de : ca                       dex
10df : ca                       dex
10e0 : ca                       dex
10e1 : ca                       dex             ;+70
10e2 : ca                       dex
10e3 : ca                       dex
10e4 : ca                       dex
10e5 : ca                       dex
10e6 : ca                       dex
10e7 : ca                       dex
10e8 : ca                       dex
10e9 : ca                       dex
10ea : ca                       dex
10eb : ca                       dex             ;+80
10ec : ca                       dex
10ed : ca                       dex
10ee : ca                       dex
10ef : ca                       dex
10f0 : ca                       dex
10f1 : ca                       dex
10f2 : ca                       dex
10f3 : ca                       dex
10f4 : ca                       dex
10f5 : ca                       dex             ;+90
10f6 : ca                       dex
10f7 : ca                       dex
10f8 : ca                       dex
10f9 : ca                       dex
10fa : ca                       dex
10fb : ca                       dex
10fc : ca                       dex
10fd : ca                       dex
10fe : ca                       dex
10ff : ca                       dex             ;+100
1100 : ca                       dex
1101 : ca                       dex
1102 : ca                       dex
1103 : ca                       dex
1104 : ca                       dex
1105 : ca                       dex
1106 : ca                       dex
1107 : ca                       dex
1108 : ca                       dex
1109 : ca                       dex             ;+110
110a : ca                       dex
110b : ca                       dex
110c : ca                       dex
AS65 Assembler for R6502 [1.42].                                     Page   13
--------------------------------- verify.asm ---------------------------------

110d : ca                       dex
110e : ca                       dex
110f : ca                       dex
1110 : ca                       dex
1111 : ca                       dex
1112 : ca                       dex
1113 : ca                       dex             ;+120
1114 : ca                       dex
1115 : ca                       dex
1116 : ca                       dex
1117 : ca                       dex
1118 : ca                       dex
1119 : ca                       dex
111a : f003                     beq range_ok    ;+127 - max forward
111c : 4c1c11                   jmp *           ;trap bad range
111f :                  range_ok
111f : c000                     cpy #0
1121 : f003                     beq range_end
1123 : 4c0910                   jmp range_loop
1126 :                  range_end               ;range test successful
                        
                        ;partial test BNE & CMP, CPX, CPY immediate
1126 : c001                     cpy #1          ;testing BNE true
1128 : d003                     bne test_bne
112a : 4c2a11                   jmp *
112d :                  test_bne
112d : a900                     lda #0
112f : c900                     cmp #0          ;test compare immediate
1131 : d0fe                     bne *
1133 : 90fe                     bcc *
1135 : 30fe                     bmi *
1137 : c901                     cmp #1
1139 : f0fe                     beq *
113b : b0fe                     bcs *
113d : 10fe                     bpl *
113f : aa                       tax
1140 : e000                     cpx #0          ;test compare x immediate
1142 : d0fe                     bne *
1144 : 90fe                     bcc *
1146 : 30fe                     bmi *
1148 : e001                     cpx #1
114a : f0fe                     beq *
114c : b0fe                     bcs *
114e : 10fe                     bpl *
1150 : a8                       tay
1151 : c000                     cpy #0          ;test compare y immediate
1153 : d0fe                     bne *
1155 : 90fe                     bcc *
1157 : 30fe                     bmi *
1159 : c001                     cpy #1
115b : f0fe                     beq *
115d : b0fe                     bcs *
115f : 10fe                     bpl *
                        ;testing stack operations PHA PHP PLA PLP
                        ;testing branch decisions BPL BMI BVC BVS BCC BCS BNE 
                        
1161 : a2ff                     ldx #$ff        ;initialize stack
1163 : 9a                       txs
1164 : a955                     lda #$55
1166 : 48                       pha
1167 : a9aa                     lda #$aa
1169 : 48                       pha
AS65 Assembler for R6502 [1.42].                                     Page   14
--------------------------------- verify.asm ---------------------------------

116a : cdfe01                   cmp $1fe        ;on stack ?
116d : d0fe                     bne *
116f : ba                       tsx
1170 : 8a                       txa             ;overwrite accu
1171 : c9fd                     cmp #$fd        ;sp decremented?
1173 : d0fe                     bne *
1175 : 68                       pla
1176 : c9aa                     cmp #$aa        ;successful retreived from sta
1178 : d0fe                     bne *
117a : 68                       pla
117b : c955                     cmp #$55
117d : d0fe                     bne *
117f : cdff01                   cmp $1ff        ;remains on stack?
1182 : d0fe                     bne *
1184 : ba                       tsx
1185 : e0ff                     cpx #$ff        ;sp incremented?
1187 : d0fe                     bne *
                                set_stat $ff    ;all on
                       >            load_flag $ff    
1189 : a9ff            >            lda #$ff    |4
                       >
118b : 48              >            pha         ;use stack to load status
118c : 28              >            plp
                        
118d : 10fe                     bpl *           ;branches should not be taken
118f : 50fe                     bvc *
1191 : 90fe                     bcc *
1193 : d0fe                     bne *
1195 : 3003                     bmi br1          ;branches should be taken
1197 : 4c9711                   jmp *
119a : 7003             br1     bvs br2
119c : 4c9c11                   jmp *
119f : b003             br2     bcs br3
11a1 : 4ca111                   jmp *
11a4 : f003             br3     beq br4
11a6 : 4ca611                   jmp *
11a9 : 08               br4     php
11aa : ba                       tsx
11ab : e0fe                     cpx #$fe        ;sp after php?
11ad : d0fe                     bne *
11af : 68                       pla
                                cmp_flag $ff        ;returned all flags on?
11b0 : c9ff            >            cmp #($ff        |$34)&$ff
                        
11b2 : d0fe                     bne *
11b4 : ba                       tsx
11b5 : e0ff                     cpx #$ff        ;sp after php?
11b7 : d0fe                     bne *
                                set_stat 0      ;all off
                       >            load_flag 0      
11b9 : a904            >            lda #0      |4
                       >
11bb : 48              >            pha         ;use stack to load status
11bc : 28              >            plp
                        
11bd : 30fe                     bmi *           ;branches should not be taken
11bf : 70fe                     bvs *
11c1 : b0fe                     bcs *
11c3 : f0fe                     beq *
11c5 : 1003                     bpl br11        ;branches should be taken
11c7 : 4cc711                   jmp *
11ca : 5003             br11    bvc br12
AS65 Assembler for R6502 [1.42].                                     Page   15
--------------------------------- verify.asm ---------------------------------

11cc : 4ccc11                   jmp *
11cf : 9003             br12    bcc br13
11d1 : 4cd111                   jmp *
11d4 : d003             br13    bne br14
11d6 : 4cd611                   jmp *
11d9 : 08               br14    php
11da : 68                       pla
                                cmp_flag 0      ;flags off except break (pushe
11db : c934            >            cmp #(0      |$34)&$ff
                        
11dd : d0fe                     bne *
                                ;crosscheck flags
                                set_stat carry
                       >            load_flag carry
11df : a905            >            lda #carry|4
                       >
11e1 : 48              >            pha         ;use stack to load status
11e2 : 28              >            plp
                        
11e3 : 90fe                     bcc *
                                set_stat zero
                       >            load_flag zero
11e5 : a906            >            lda #zero|4
                       >
11e7 : 48              >            pha         ;use stack to load status
11e8 : 28              >            plp
                        
11e9 : d0fe                     bne *
                                set_stat overfl
                       >            load_flag overfl
11eb : a944            >            lda #overfl|4
                       >
11ed : 48              >            pha         ;use stack to load status
11ee : 28              >            plp
                        
11ef : 50fe                     bvc *
                                set_stat minus
                       >            load_flag minus
11f1 : a984            >            lda #minus|4
                       >
11f3 : 48              >            pha         ;use stack to load status
11f4 : 28              >            plp
                        
11f5 : 10fe                     bpl *
                                set_stat $ff-carry
                       >            load_flag $ff-carry
11f7 : a9fe            >            lda #$ff-carry|4
                       >
11f9 : 48              >            pha         ;use stack to load status
11fa : 28              >            plp
                        
11fb : b0fe                     bcs *
                                set_stat $ff-zero
                       >            load_flag $ff-zero
11fd : a9fd            >            lda #$ff-zero|4
                       >
11ff : 48              >            pha         ;use stack to load status
1200 : 28              >            plp
                        
1201 : f0fe                     beq *
                                set_stat $ff-overfl
                       >            load_flag $ff-overfl
AS65 Assembler for R6502 [1.42].                                     Page   16
--------------------------------- verify.asm ---------------------------------

1203 : a9bf            >            lda #$ff-overfl|4
                       >
1205 : 48              >            pha         ;use stack to load status
1206 : 28              >            plp
                        
1207 : 70fe                     bvs *
                                set_stat $ff-minus
                       >            load_flag $ff-minus
1209 : a97f            >            lda #$ff-minus|4
                       >
120b : 48              >            pha         ;use stack to load status
120c : 28              >            plp
                        
120d : 30fe                     bmi *
                        
                        ; partial pretest EOR #
                                set_a $3c,0
                       >            load_flag 0
120f : a904            >            lda #0|4
                       >
1211 : 48              >            pha         ;use stack to load status
1212 : a93c            >            lda #$3c     ;precharge accu
1214 : 28              >            plp
                        
1215 : 49c3                     eor #$c3
                                tst_a $ff,fn
1217 : 08              >            php         ;save flags
1218 : 08              >            php
1219 : c9ff            >            cmp #$ff     ;test result
121b : d0fe            >            bne *       ;trap
121d : 68              >            pla         ;load status
                       >            cmp_flag fn
121e : c9b4            >            cmp #(fn|$34)&$ff
                       >
1220 : d0fe            >            bne *       ;trap
1222 : 28              >            plp         ;restore status
                        
                                set_a $c3,0
                       >            load_flag 0
1223 : a904            >            lda #0|4
                       >
1225 : 48              >            pha         ;use stack to load status
1226 : a9c3            >            lda #$c3     ;precharge accu
1228 : 28              >            plp
                        
1229 : 49c3                     eor #$c3
                                tst_a 0,fz
122b : 08              >            php         ;save flags
122c : 08              >            php
122d : c900            >            cmp #0     ;test result
122f : d0fe            >            bne *       ;trap
1231 : 68              >            pla         ;load status
                       >            cmp_flag fz
1232 : c936            >            cmp #(fz|$34)&$ff
                       >
1234 : d0fe            >            bne *       ;trap
1236 : 28              >            plp         ;restore status
                        
                        
                        ; PC modifying instructions except branches (NOP, JMP,
                        ; testing NOP
1237 : a224                     ldx #$24
AS65 Assembler for R6502 [1.42].                                     Page   17
--------------------------------- verify.asm ---------------------------------

1239 : a042                     ldy #$42
                                set_a $18,0
                       >            load_flag 0
123b : a904            >            lda #0|4
                       >
123d : 48              >            pha         ;use stack to load status
123e : a918            >            lda #$18     ;precharge accu
1240 : 28              >            plp
                        
1241 : ea                       nop
                                tst_a $18,0
1242 : 08              >            php         ;save flags
1243 : 08              >            php
1244 : c918            >            cmp #$18     ;test result
1246 : d0fe            >            bne *       ;trap
1248 : 68              >            pla         ;load status
                       >            cmp_flag 0
1249 : c934            >            cmp #(0|$34)&$ff
                       >
124b : d0fe            >            bne *       ;trap
124d : 28              >            plp         ;restore status
                        
124e : e024                     cpx #$24
1250 : d0fe                     bne *
1252 : c042                     cpy #$42
1254 : d0fe                     bne *
1256 : a2db                     ldx #$db
1258 : a0bd                     ldy #$bd
                                set_a $e7,$ff
                       >            load_flag $ff
125a : a9ff            >            lda #$ff|4
                       >
125c : 48              >            pha         ;use stack to load status
125d : a9e7            >            lda #$e7     ;precharge accu
125f : 28              >            plp
                        
1260 : ea                       nop
                                tst_a $e7,$ff
1261 : 08              >            php         ;save flags
1262 : 08              >            php
1263 : c9e7            >            cmp #$e7     ;test result
1265 : d0fe            >            bne *       ;trap
1267 : 68              >            pla         ;load status
                       >            cmp_flag $ff
1268 : c9ff            >            cmp #($ff|$34)&$ff
                       >
126a : d0fe            >            bne *       ;trap
126c : 28              >            plp         ;restore status
                        
126d : e0db                     cpx #$db
126f : d0fe                     bne *
1271 : c0bd                     cpy #$bd
1273 : d0fe                     bne *
                        
                        ; jump absolute
                                set_stat $0
                       >            load_flag $0
1275 : a904            >            lda #$0|4
                       >
1277 : 48              >            pha         ;use stack to load status
1278 : 28              >            plp
                        
AS65 Assembler for R6502 [1.42].                                     Page   18
--------------------------------- verify.asm ---------------------------------

1279 : a946                     lda #'F'
127b : a241                     ldx #'A'
127d : a052                     ldy #'R'        ;N=0, V=0, Z=0, C=0
127f : 4c7c3d                   jmp test_far
1282 : ea                       nop
1283 : ea                       nop
1284 : d0fe                     bne *           ;runover protection
1286 : e8                       inx
1287 : e8                       inx
1288 : f0fe             far_ret beq *           ;returned flags OK?
128a : 10fe                     bpl *
128c : 90fe                     bcc *
128e : 50fe                     bvc *
1290 : c9ec                     cmp #('F'^$aa)  ;returned registers OK?
1292 : d0fe                     bne *
1294 : e042                     cpx #('A'+1)
1296 : d0fe                     bne *
1298 : c04f                     cpy #('R'-3)
129a : d0fe                     bne *
129c : ca                       dex
129d : c8                       iny
129e : c8                       iny
129f : c8                       iny
12a0 : 49aa                     eor #$aa        ;N=0, V=1, Z=0, C=1
12a2 : 4cab12                   jmp test_near
12a5 : ea                       nop
12a6 : ea                       nop
12a7 : d0fe                     bne *           ;runover protection
12a9 : e8                       inx
12aa : e8                       inx
12ab :                  test_near
12ab : f0fe                     beq *           ;passed flags OK?
12ad : 30fe                     bmi *
12af : 90fe                     bcc *
12b1 : 50fe                     bvc *
12b3 : c946                     cmp #'F'        ;passed registers OK?
12b5 : d0fe                     bne *
12b7 : e041                     cpx #'A'
12b9 : d0fe                     bne *
12bb : c052                     cpy #'R'
12bd : d0fe                     bne *
                        
                        ; jump indirect
                                set_stat 0
                       >            load_flag 0
12bf : a904            >            lda #0|4
                       >
12c1 : 48              >            pha         ;use stack to load status
12c2 : 28              >            plp
                        
12c3 : a949                     lda #'I'
12c5 : a24e                     ldx #'N'
12c7 : a044                     ldy #'D'        ;N=0, V=0, Z=0, C=0
12c9 : 6caa3d                   jmp (ptr_tst_ind)
12cc : ea                       nop
12cd : d0fe                     bne *           ;runover protection
12cf : 88                       dey
12d0 : 88                       dey
12d1 :                  ind_ret
12d1 : 08                       php             ;either SP or Y count will fai
12d2 : 88                       dey
12d3 : 88                       dey
AS65 Assembler for R6502 [1.42].                                     Page   19
--------------------------------- verify.asm ---------------------------------

12d4 : 88                       dey
12d5 : 28                       plp
12d6 : f0fe                     beq *           ;returned flags OK?
12d8 : 10fe                     bpl *
12da : 90fe                     bcc *
12dc : 50fe                     bvc *
12de : c9e3                     cmp #('I'^$aa)  ;returned registers OK?
12e0 : d0fe                     bne *
12e2 : e04f                     cpx #('N'+1)
12e4 : d0fe                     bne *
12e6 : c03e                     cpy #('D'-6)
12e8 : d0fe                     bne *
12ea : ba                       tsx             ;SP check
12eb : e0ff                     cpx #$ff
12ed : d0fe                     bne *
                        
                        ; jump subroutine & return from subroutine
                                set_stat 0
                       >            load_flag 0
12ef : a904            >            lda #0|4
                       >
12f1 : 48              >            pha         ;use stack to load status
12f2 : 28              >            plp
                        
12f3 : a94a                     lda #'J'
12f5 : a253                     ldx #'S'
12f7 : a052                     ldy #'R'        ;N=0, V=0, Z=0, C=0
12f9 : 20e63d                   jsr test_jsr
12fb =                  jsr_ret = *-1           ;last address of jsr = return 
12fc : 08                       php             ;either SP or Y count will fai
12fd : 88                       dey
12fe : 88                       dey
12ff : 88                       dey
1300 : 28                       plp
1301 : f0fe                     beq *           ;returned flags OK?
1303 : 10fe                     bpl *
1305 : 90fe                     bcc *
1307 : 50fe                     bvc *
1309 : c9e0                     cmp #('J'^$aa)  ;returned registers OK?
130b : d0fe                     bne *
130d : e054                     cpx #('S'+1)
130f : d0fe                     bne *
1311 : c04c                     cpy #('R'-6)
1313 : d0fe                     bne *
1315 : ba                       tsx             ;sp?
1316 : e0ff                     cpx #$ff
1318 : d0fe                     bne *
                        
                        ; break & return from interrupt
                            if ROM_vectors = 1
                                set_stat 0
                       >            load_flag 0
131a : a904            >            lda #0|4
                       >
131c : 48              >            pha         ;use stack to load status
131d : 28              >            plp
                        
131e : a942                     lda #'B'
1320 : a252                     ldx #'R'
1322 : a04b                     ldy #'K'        ;N=0, V=0, Z=0, C=0
1324 : 00                       brk
                            else
AS65 Assembler for R6502 [1.42].                                     Page   20
--------------------------------- verify.asm ---------------------------------

                                lda #hi brk_ret ;emulated break
                                pha
                                lda #lo brk_ret
                                pha
                                lda #$30        ;set break & unused on stack
                                pha
                                set_stat intdis
                                lda #'B'
                                ldx #'R'
                                ldy #'K'        ;N=0, V=0, Z=0, C=0
                                jmp irq_trap
                            endif
1325 : 88                       dey             ;should not be executed
1326 :                  brk_ret                 ;address of break return
1326 : 08                       php             ;either SP or Y count will fai
1327 : 88                       dey
1328 : 88                       dey
1329 : 88                       dey
132a : c9e8                     cmp #('B'^$aa)  ;returned registers OK?
132c : d0fe                     bne *
132e : e053                     cpx #('R'+1)
1330 : d0fe                     bne *
1332 : c045                     cpy #('K'-6)
1334 : d0fe                     bne *
1336 : 68                       pla             ;returned flags OK (unchanged)
                                cmp_flag 0
1337 : c934            >            cmp #(0|$34)&$ff
                        
1339 : d0fe                     bne *
133b : ba                       tsx             ;sp?
133c : e0ff                     cpx #$ff
133e : d0fe                     bne *
                        
                        ; test set and clear flags CLC CLI CLD CLV SEC SEI SED
                                set_stat $ff
                       >            load_flag $ff
1340 : a9ff            >            lda #$ff|4
                       >
1342 : 48              >            pha         ;use stack to load status
1343 : 28              >            plp
                        
1344 : 18                       clc
                                tst_stat $ff-carry
1345 : 08              >            php         ;save status
1346 : 08              >            php         ;use stack to retrieve status
1347 : 68              >            pla
                       >            cmp_flag $ff-carry
1348 : c9fe            >            cmp #($ff-carry|$34)&$ff
                       >
134a : d0fe            >            bne *       ;trap
134c : 28              >            plp         ;restore status
                        
134d : 38                       sec
                                tst_stat $ff
134e : 08              >            php         ;save status
134f : 08              >            php         ;use stack to retrieve status
1350 : 68              >            pla
                       >            cmp_flag $ff
1351 : c9ff            >            cmp #($ff|$34)&$ff
                       >
1353 : d0fe            >            bne *       ;trap
1355 : 28              >            plp         ;restore status
AS65 Assembler for R6502 [1.42].                                     Page   21
--------------------------------- verify.asm ---------------------------------

                        
                            if I_flag = 3
                                cli
                                tst_stat $ff-intdis
                                sei
                                tst_stat $ff
                            endif
1356 : d8                       cld
                                tst_stat $ff-decmode
1357 : 08              >            php         ;save status
1358 : 08              >            php         ;use stack to retrieve status
1359 : 68              >            pla
                       >            cmp_flag $ff-decmode
135a : c9f7            >            cmp #($ff-decmode|$34)&$ff
                       >
135c : d0fe            >            bne *       ;trap
135e : 28              >            plp         ;restore status
                        
135f : f8                       sed
                                tst_stat $ff
1360 : 08              >            php         ;save status
1361 : 08              >            php         ;use stack to retrieve status
1362 : 68              >            pla
                       >            cmp_flag $ff
1363 : c9ff            >            cmp #($ff|$34)&$ff
                       >
1365 : d0fe            >            bne *       ;trap
1367 : 28              >            plp         ;restore status
                        
1368 : b8                       clv
                                tst_stat $ff-overfl
1369 : 08              >            php         ;save status
136a : 08              >            php         ;use stack to retrieve status
136b : 68              >            pla
                       >            cmp_flag $ff-overfl
136c : c9bf            >            cmp #($ff-overfl|$34)&$ff
                       >
136e : d0fe            >            bne *       ;trap
1370 : 28              >            plp         ;restore status
                        
                                set_stat 0
                       >            load_flag 0
1371 : a904            >            lda #0|4
                       >
1373 : 48              >            pha         ;use stack to load status
1374 : 28              >            plp
                        
                                tst_stat 0
1375 : 08              >            php         ;save status
1376 : 08              >            php         ;use stack to retrieve status
1377 : 68              >            pla
                       >            cmp_flag 0
1378 : c934            >            cmp #(0|$34)&$ff
                       >
137a : d0fe            >            bne *       ;trap
137c : 28              >            plp         ;restore status
                        
137d : 38                       sec
                                tst_stat carry
137e : 08              >            php         ;save status
137f : 08              >            php         ;use stack to retrieve status
1380 : 68              >            pla
AS65 Assembler for R6502 [1.42].                                     Page   22
--------------------------------- verify.asm ---------------------------------

                       >            cmp_flag carry
1381 : c935            >            cmp #(carry|$34)&$ff
                       >
1383 : d0fe            >            bne *       ;trap
1385 : 28              >            plp         ;restore status
                        
1386 : 18                       clc
                                tst_stat 0
1387 : 08              >            php         ;save status
1388 : 08              >            php         ;use stack to retrieve status
1389 : 68              >            pla
                       >            cmp_flag 0
138a : c934            >            cmp #(0|$34)&$ff
                       >
138c : d0fe            >            bne *       ;trap
138e : 28              >            plp         ;restore status
                        
                            if I_flag = 3
                                sei
                                tst_stat intdis
                                cli
                                tst_stat 0
                            endif
138f : f8                       sed
                                tst_stat decmode
1390 : 08              >            php         ;save status
1391 : 08              >            php         ;use stack to retrieve status
1392 : 68              >            pla
                       >            cmp_flag decmode
1393 : c93c            >            cmp #(decmode|$34)&$ff
                       >
1395 : d0fe            >            bne *       ;trap
1397 : 28              >            plp         ;restore status
                        
1398 : d8                       cld
                                tst_stat 0
1399 : 08              >            php         ;save status
139a : 08              >            php         ;use stack to retrieve status
139b : 68              >            pla
                       >            cmp_flag 0
139c : c934            >            cmp #(0|$34)&$ff
                       >
139e : d0fe            >            bne *       ;trap
13a0 : 28              >            plp         ;restore status
                        
                                set_stat overfl
                       >            load_flag overfl
13a1 : a944            >            lda #overfl|4
                       >
13a3 : 48              >            pha         ;use stack to load status
13a4 : 28              >            plp
                        
                                tst_stat overfl
13a5 : 08              >            php         ;save status
13a6 : 08              >            php         ;use stack to retrieve status
13a7 : 68              >            pla
                       >            cmp_flag overfl
13a8 : c974            >            cmp #(overfl|$34)&$ff
                       >
13aa : d0fe            >            bne *       ;trap
13ac : 28              >            plp         ;restore status
                        
AS65 Assembler for R6502 [1.42].                                     Page   23
--------------------------------- verify.asm ---------------------------------

13ad : b8                       clv
                                tst_stat 0
13ae : 08              >            php         ;save status
13af : 08              >            php         ;use stack to retrieve status
13b0 : 68              >            pla
                       >            cmp_flag 0
13b1 : c934            >            cmp #(0|$34)&$ff
                       >
13b3 : d0fe            >            bne *       ;trap
13b5 : 28              >            plp         ;restore status
                        
                        ; testing index register increment/decrement and trans
                        ; INX INY DEX DEY TAX TXA TAY TYA
13b6 : a2fe                     ldx #$fe
                                set_stat $ff
                       >            load_flag $ff
13b8 : a9ff            >            lda #$ff|4
                       >
13ba : 48              >            pha         ;use stack to load status
13bb : 28              >            plp
                        
13bc : e8                       inx             ;ff
                                tst_x $ff,$ff-zero
13bd : 08              >            php         ;save flags
13be : 08              >            php
13bf : e0ff            >            cpx #$ff     ;test result
13c1 : d0fe            >            bne *       ;trap
13c3 : 68              >            pla         ;load status
                       >            cmp_flag $ff-zero
13c4 : c9fd            >            cmp #($ff-zero|$34)&$ff
                       >
13c6 : d0fe            >            bne *       ;trap
13c8 : 28              >            plp         ;restore status
                        
13c9 : e8                       inx             ;00
                                tst_x 0,$ff-minus
13ca : 08              >            php         ;save flags
13cb : 08              >            php
13cc : e000            >            cpx #0     ;test result
13ce : d0fe            >            bne *       ;trap
13d0 : 68              >            pla         ;load status
                       >            cmp_flag $ff-minus
13d1 : c97f            >            cmp #($ff-minus|$34)&$ff
                       >
13d3 : d0fe            >            bne *       ;trap
13d5 : 28              >            plp         ;restore status
                        
13d6 : e8                       inx             ;01
                                tst_x 1,$ff-minus-zero
13d7 : 08              >            php         ;save flags
13d8 : 08              >            php
13d9 : e001            >            cpx #1     ;test result
13db : d0fe            >            bne *       ;trap
13dd : 68              >            pla         ;load status
                       >            cmp_flag $ff-minus-zero
13de : c97d            >            cmp #($ff-minus-zero|$34)&$ff
                       >
13e0 : d0fe            >            bne *       ;trap
13e2 : 28              >            plp         ;restore status
                        
13e3 : ca                       dex             ;00
                                tst_x 0,$ff-minus
AS65 Assembler for R6502 [1.42].                                     Page   24
--------------------------------- verify.asm ---------------------------------

13e4 : 08              >            php         ;save flags
13e5 : 08              >            php
13e6 : e000            >            cpx #0     ;test result
13e8 : d0fe            >            bne *       ;trap
13ea : 68              >            pla         ;load status
                       >            cmp_flag $ff-minus
13eb : c97f            >            cmp #($ff-minus|$34)&$ff
                       >
13ed : d0fe            >            bne *       ;trap
13ef : 28              >            plp         ;restore status
                        
13f0 : ca                       dex             ;ff
                                tst_x $ff,$ff-zero
13f1 : 08              >            php         ;save flags
13f2 : 08              >            php
13f3 : e0ff            >            cpx #$ff     ;test result
13f5 : d0fe            >            bne *       ;trap
13f7 : 68              >            pla         ;load status
                       >            cmp_flag $ff-zero
13f8 : c9fd            >            cmp #($ff-zero|$34)&$ff
                       >
13fa : d0fe            >            bne *       ;trap
13fc : 28              >            plp         ;restore status
                        
13fd : ca                       dex             ;fe
                                set_stat 0
                       >            load_flag 0
13fe : a904            >            lda #0|4
                       >
1400 : 48              >            pha         ;use stack to load status
1401 : 28              >            plp
                        
1402 : e8                       inx             ;ff
                                tst_x $ff,minus
1403 : 08              >            php         ;save flags
1404 : 08              >            php
1405 : e0ff            >            cpx #$ff     ;test result
1407 : d0fe            >            bne *       ;trap
1409 : 68              >            pla         ;load status
                       >            cmp_flag minus
140a : c9b4            >            cmp #(minus|$34)&$ff
                       >
140c : d0fe            >            bne *       ;trap
140e : 28              >            plp         ;restore status
                        
140f : e8                       inx             ;00
                                tst_x 0,zero
1410 : 08              >            php         ;save flags
1411 : 08              >            php
1412 : e000            >            cpx #0     ;test result
1414 : d0fe            >            bne *       ;trap
1416 : 68              >            pla         ;load status
                       >            cmp_flag zero
1417 : c936            >            cmp #(zero|$34)&$ff
                       >
1419 : d0fe            >            bne *       ;trap
141b : 28              >            plp         ;restore status
                        
141c : e8                       inx             ;01
                                tst_x 1,0
141d : 08              >            php         ;save flags
141e : 08              >            php
AS65 Assembler for R6502 [1.42].                                     Page   25
--------------------------------- verify.asm ---------------------------------

141f : e001            >            cpx #1     ;test result
1421 : d0fe            >            bne *       ;trap
1423 : 68              >            pla         ;load status
                       >            cmp_flag 0
1424 : c934            >            cmp #(0|$34)&$ff
                       >
1426 : d0fe            >            bne *       ;trap
1428 : 28              >            plp         ;restore status
                        
1429 : ca                       dex             ;00
                                tst_x 0,zero
142a : 08              >            php         ;save flags
142b : 08              >            php
142c : e000            >            cpx #0     ;test result
142e : d0fe            >            bne *       ;trap
1430 : 68              >            pla         ;load status
                       >            cmp_flag zero
1431 : c936            >            cmp #(zero|$34)&$ff
                       >
1433 : d0fe            >            bne *       ;trap
1435 : 28              >            plp         ;restore status
                        
1436 : ca                       dex             ;ff
                                tst_x $ff,minus
1437 : 08              >            php         ;save flags
1438 : 08              >            php
1439 : e0ff            >            cpx #$ff     ;test result
143b : d0fe            >            bne *       ;trap
143d : 68              >            pla         ;load status
                       >            cmp_flag minus
143e : c9b4            >            cmp #(minus|$34)&$ff
                       >
1440 : d0fe            >            bne *       ;trap
1442 : 28              >            plp         ;restore status
                        
                        
1443 : a0fe                     ldy #$fe
                                set_stat $ff
                       >            load_flag $ff
1445 : a9ff            >            lda #$ff|4
                       >
1447 : 48              >            pha         ;use stack to load status
1448 : 28              >            plp
                        
1449 : c8                       iny             ;ff
                                tst_y $ff,$ff-zero
144a : 08              >            php         ;save flags
144b : 08              >            php
144c : c0ff            >            cpy #$ff     ;test result
144e : d0fe            >            bne *       ;trap
1450 : 68              >            pla         ;load status
                       >            cmp_flag $ff-zero
1451 : c9fd            >            cmp #($ff-zero|$34)&$ff
                       >
1453 : d0fe            >            bne *       ;trap
1455 : 28              >            plp         ;restore status
                        
1456 : c8                       iny             ;00
                                tst_y 0,$ff-minus
1457 : 08              >            php         ;save flags
1458 : 08              >            php
1459 : c000            >            cpy #0     ;test result
AS65 Assembler for R6502 [1.42].                                     Page   26
--------------------------------- verify.asm ---------------------------------

145b : d0fe            >            bne *       ;trap
145d : 68              >            pla         ;load status
                       >            cmp_flag $ff-minus
145e : c97f            >            cmp #($ff-minus|$34)&$ff
                       >
1460 : d0fe            >            bne *       ;trap
1462 : 28              >            plp         ;restore status
                        
1463 : c8                       iny             ;01
                                tst_y 1,$ff-minus-zero
1464 : 08              >            php         ;save flags
1465 : 08              >            php
1466 : c001            >            cpy #1     ;test result
1468 : d0fe            >            bne *       ;trap
146a : 68              >            pla         ;load status
                       >            cmp_flag $ff-minus-zero
146b : c97d            >            cmp #($ff-minus-zero|$34)&$ff
                       >
146d : d0fe            >            bne *       ;trap
146f : 28              >            plp         ;restore status
                        
1470 : 88                       dey             ;00
                                tst_y 0,$ff-minus
1471 : 08              >            php         ;save flags
1472 : 08              >            php
1473 : c000            >            cpy #0     ;test result
1475 : d0fe            >            bne *       ;trap
1477 : 68              >            pla         ;load status
                       >            cmp_flag $ff-minus
1478 : c97f            >            cmp #($ff-minus|$34)&$ff
                       >
147a : d0fe            >            bne *       ;trap
147c : 28              >            plp         ;restore status
                        
147d : 88                       dey             ;ff
                                tst_y $ff,$ff-zero
147e : 08              >            php         ;save flags
147f : 08              >            php
1480 : c0ff            >            cpy #$ff     ;test result
1482 : d0fe            >            bne *       ;trap
1484 : 68              >            pla         ;load status
                       >            cmp_flag $ff-zero
1485 : c9fd            >            cmp #($ff-zero|$34)&$ff
                       >
1487 : d0fe            >            bne *       ;trap
1489 : 28              >            plp         ;restore status
                        
148a : 88                       dey             ;fe
                                set_stat 0
                       >            load_flag 0
148b : a904            >            lda #0|4
                       >
148d : 48              >            pha         ;use stack to load status
148e : 28              >            plp
                        
148f : c8                       iny             ;ff
                                tst_y $ff,0+minus
1490 : 08              >            php         ;save flags
1491 : 08              >            php
1492 : c0ff            >            cpy #$ff     ;test result
1494 : d0fe            >            bne *       ;trap
1496 : 68              >            pla         ;load status
AS65 Assembler for R6502 [1.42].                                     Page   27
--------------------------------- verify.asm ---------------------------------

                       >            cmp_flag 0+minus
1497 : c9b4            >            cmp #(0+minus|$34)&$ff
                       >
1499 : d0fe            >            bne *       ;trap
149b : 28              >            plp         ;restore status
                        
149c : c8                       iny             ;00
                                tst_y 0,zero
149d : 08              >            php         ;save flags
149e : 08              >            php
149f : c000            >            cpy #0     ;test result
14a1 : d0fe            >            bne *       ;trap
14a3 : 68              >            pla         ;load status
                       >            cmp_flag zero
14a4 : c936            >            cmp #(zero|$34)&$ff
                       >
14a6 : d0fe            >            bne *       ;trap
14a8 : 28              >            plp         ;restore status
                        
14a9 : c8                       iny             ;01
                                tst_y 1,0
14aa : 08              >            php         ;save flags
14ab : 08              >            php
14ac : c001            >            cpy #1     ;test result
14ae : d0fe            >            bne *       ;trap
14b0 : 68              >            pla         ;load status
                       >            cmp_flag 0
14b1 : c934            >            cmp #(0|$34)&$ff
                       >
14b3 : d0fe            >            bne *       ;trap
14b5 : 28              >            plp         ;restore status
                        
14b6 : 88                       dey             ;00
                                tst_y 0,zero
14b7 : 08              >            php         ;save flags
14b8 : 08              >            php
14b9 : c000            >            cpy #0     ;test result
14bb : d0fe            >            bne *       ;trap
14bd : 68              >            pla         ;load status
                       >            cmp_flag zero
14be : c936            >            cmp #(zero|$34)&$ff
                       >
14c0 : d0fe            >            bne *       ;trap
14c2 : 28              >            plp         ;restore status
                        
14c3 : 88                       dey             ;ff
                                tst_y $ff,minus
14c4 : 08              >            php         ;save flags
14c5 : 08              >            php
14c6 : c0ff            >            cpy #$ff     ;test result
14c8 : d0fe            >            bne *       ;trap
14ca : 68              >            pla         ;load status
                       >            cmp_flag minus
14cb : c9b4            >            cmp #(minus|$34)&$ff
                       >
14cd : d0fe            >            bne *       ;trap
14cf : 28              >            plp         ;restore status
                        
                        
14d0 : a2ff                     ldx #$ff
                                set_stat $ff
                       >            load_flag $ff
AS65 Assembler for R6502 [1.42].                                     Page   28
--------------------------------- verify.asm ---------------------------------

14d2 : a9ff            >            lda #$ff|4
                       >
14d4 : 48              >            pha         ;use stack to load status
14d5 : 28              >            plp
                        
14d6 : 8a                       txa
                                tst_a $ff,$ff-zero
14d7 : 08              >            php         ;save flags
14d8 : 08              >            php
14d9 : c9ff            >            cmp #$ff     ;test result
14db : d0fe            >            bne *       ;trap
14dd : 68              >            pla         ;load status
                       >            cmp_flag $ff-zero
14de : c9fd            >            cmp #($ff-zero|$34)&$ff
                       >
14e0 : d0fe            >            bne *       ;trap
14e2 : 28              >            plp         ;restore status
                        
14e3 : 08                       php
14e4 : e8                       inx             ;00
14e5 : 28                       plp
14e6 : 8a                       txa
                                tst_a 0,$ff-minus
14e7 : 08              >            php         ;save flags
14e8 : 08              >            php
14e9 : c900            >            cmp #0     ;test result
14eb : d0fe            >            bne *       ;trap
14ed : 68              >            pla         ;load status
                       >            cmp_flag $ff-minus
14ee : c97f            >            cmp #($ff-minus|$34)&$ff
                       >
14f0 : d0fe            >            bne *       ;trap
14f2 : 28              >            plp         ;restore status
                        
14f3 : 08                       php
14f4 : e8                       inx             ;01
14f5 : 28                       plp
14f6 : 8a                       txa
                                tst_a 1,$ff-minus-zero
14f7 : 08              >            php         ;save flags
14f8 : 08              >            php
14f9 : c901            >            cmp #1     ;test result
14fb : d0fe            >            bne *       ;trap
14fd : 68              >            pla         ;load status
                       >            cmp_flag $ff-minus-zero
14fe : c97d            >            cmp #($ff-minus-zero|$34)&$ff
                       >
1500 : d0fe            >            bne *       ;trap
1502 : 28              >            plp         ;restore status
                        
                                set_stat 0
                       >            load_flag 0
1503 : a904            >            lda #0|4
                       >
1505 : 48              >            pha         ;use stack to load status
1506 : 28              >            plp
                        
1507 : 8a                       txa
                                tst_a 1,0
1508 : 08              >            php         ;save flags
1509 : 08              >            php
150a : c901            >            cmp #1     ;test result
AS65 Assembler for R6502 [1.42].                                     Page   29
--------------------------------- verify.asm ---------------------------------

150c : d0fe            >            bne *       ;trap
150e : 68              >            pla         ;load status
                       >            cmp_flag 0
150f : c934            >            cmp #(0|$34)&$ff
                       >
1511 : d0fe            >            bne *       ;trap
1513 : 28              >            plp         ;restore status
                        
1514 : 08                       php
1515 : ca                       dex             ;00
1516 : 28                       plp
1517 : 8a                       txa
                                tst_a 0,zero
1518 : 08              >            php         ;save flags
1519 : 08              >            php
151a : c900            >            cmp #0     ;test result
151c : d0fe            >            bne *       ;trap
151e : 68              >            pla         ;load status
                       >            cmp_flag zero
151f : c936            >            cmp #(zero|$34)&$ff
                       >
1521 : d0fe            >            bne *       ;trap
1523 : 28              >            plp         ;restore status
                        
1524 : 08                       php
1525 : ca                       dex             ;ff
1526 : 28                       plp
1527 : 8a                       txa
                                tst_a $ff,minus
1528 : 08              >            php         ;save flags
1529 : 08              >            php
152a : c9ff            >            cmp #$ff     ;test result
152c : d0fe            >            bne *       ;trap
152e : 68              >            pla         ;load status
                       >            cmp_flag minus
152f : c9b4            >            cmp #(minus|$34)&$ff
                       >
1531 : d0fe            >            bne *       ;trap
1533 : 28              >            plp         ;restore status
                        
                        
1534 : a0ff                     ldy #$ff
                                set_stat $ff
                       >            load_flag $ff
1536 : a9ff            >            lda #$ff|4
                       >
1538 : 48              >            pha         ;use stack to load status
1539 : 28              >            plp
                        
153a : 98                       tya
                                tst_a $ff,$ff-zero
153b : 08              >            php         ;save flags
153c : 08              >            php
153d : c9ff            >            cmp #$ff     ;test result
153f : d0fe            >            bne *       ;trap
1541 : 68              >            pla         ;load status
                       >            cmp_flag $ff-zero
1542 : c9fd            >            cmp #($ff-zero|$34)&$ff
                       >
1544 : d0fe            >            bne *       ;trap
1546 : 28              >            plp         ;restore status
                        
AS65 Assembler for R6502 [1.42].                                     Page   30
--------------------------------- verify.asm ---------------------------------

1547 : 08                       php
1548 : c8                       iny             ;00
1549 : 28                       plp
154a : 98                       tya
                                tst_a 0,$ff-minus
154b : 08              >            php         ;save flags
154c : 08              >            php
154d : c900            >            cmp #0     ;test result
154f : d0fe            >            bne *       ;trap
1551 : 68              >            pla         ;load status
                       >            cmp_flag $ff-minus
1552 : c97f            >            cmp #($ff-minus|$34)&$ff
                       >
1554 : d0fe            >            bne *       ;trap
1556 : 28              >            plp         ;restore status
                        
1557 : 08                       php
1558 : c8                       iny             ;01
1559 : 28                       plp
155a : 98                       tya
                                tst_a 1,$ff-minus-zero
155b : 08              >            php         ;save flags
155c : 08              >            php
155d : c901            >            cmp #1     ;test result
155f : d0fe            >            bne *       ;trap
1561 : 68              >            pla         ;load status
                       >            cmp_flag $ff-minus-zero
1562 : c97d            >            cmp #($ff-minus-zero|$34)&$ff
                       >
1564 : d0fe            >            bne *       ;trap
1566 : 28              >            plp         ;restore status
                        
                                set_stat 0
                       >            load_flag 0
1567 : a904            >            lda #0|4
                       >
1569 : 48              >            pha         ;use stack to load status
156a : 28              >            plp
                        
156b : 98                       tya
                                tst_a 1,0
156c : 08              >            php         ;save flags
156d : 08              >            php
156e : c901            >            cmp #1     ;test result
1570 : d0fe            >            bne *       ;trap
1572 : 68              >            pla         ;load status
                       >            cmp_flag 0
1573 : c934            >            cmp #(0|$34)&$ff
                       >
1575 : d0fe            >            bne *       ;trap
1577 : 28              >            plp         ;restore status
                        
1578 : 08                       php
1579 : 88                       dey             ;00
157a : 28                       plp
157b : 98                       tya
                                tst_a 0,zero
157c : 08              >            php         ;save flags
157d : 08              >            php
157e : c900            >            cmp #0     ;test result
1580 : d0fe            >            bne *       ;trap
1582 : 68              >            pla         ;load status
AS65 Assembler for R6502 [1.42].                                     Page   31
--------------------------------- verify.asm ---------------------------------

                       >            cmp_flag zero
1583 : c936            >            cmp #(zero|$34)&$ff
                       >
1585 : d0fe            >            bne *       ;trap
1587 : 28              >            plp         ;restore status
                        
1588 : 08                       php
1589 : 88                       dey             ;ff
158a : 28                       plp
158b : 98                       tya
                                tst_a $ff,minus
158c : 08              >            php         ;save flags
158d : 08              >            php
158e : c9ff            >            cmp #$ff     ;test result
1590 : d0fe            >            bne *       ;trap
1592 : 68              >            pla         ;load status
                       >            cmp_flag minus
1593 : c9b4            >            cmp #(minus|$34)&$ff
                       >
1595 : d0fe            >            bne *       ;trap
1597 : 28              >            plp         ;restore status
                        
                        
                                load_flag $ff
1598 : a9ff            >            lda #$ff|4
                        
159a : 48                       pha
159b : a2ff                     ldx #$ff        ;ff
159d : 8a                       txa
159e : 28                       plp
159f : a8                       tay
                                tst_y $ff,$ff-zero
15a0 : 08              >            php         ;save flags
15a1 : 08              >            php
15a2 : c0ff            >            cpy #$ff     ;test result
15a4 : d0fe            >            bne *       ;trap
15a6 : 68              >            pla         ;load status
                       >            cmp_flag $ff-zero
15a7 : c9fd            >            cmp #($ff-zero|$34)&$ff
                       >
15a9 : d0fe            >            bne *       ;trap
15ab : 28              >            plp         ;restore status
                        
15ac : 08                       php
15ad : e8                       inx             ;00
15ae : 8a                       txa
15af : 28                       plp
15b0 : a8                       tay
                                tst_y 0,$ff-minus
15b1 : 08              >            php         ;save flags
15b2 : 08              >            php
15b3 : c000            >            cpy #0     ;test result
15b5 : d0fe            >            bne *       ;trap
15b7 : 68              >            pla         ;load status
                       >            cmp_flag $ff-minus
15b8 : c97f            >            cmp #($ff-minus|$34)&$ff
                       >
15ba : d0fe            >            bne *       ;trap
15bc : 28              >            plp         ;restore status
                        
15bd : 08                       php
15be : e8                       inx             ;01
AS65 Assembler for R6502 [1.42].                                     Page   32
--------------------------------- verify.asm ---------------------------------

15bf : 8a                       txa
15c0 : 28                       plp
15c1 : a8                       tay
                                tst_y 1,$ff-minus-zero
15c2 : 08              >            php         ;save flags
15c3 : 08              >            php
15c4 : c001            >            cpy #1     ;test result
15c6 : d0fe            >            bne *       ;trap
15c8 : 68              >            pla         ;load status
                       >            cmp_flag $ff-minus-zero
15c9 : c97d            >            cmp #($ff-minus-zero|$34)&$ff
                       >
15cb : d0fe            >            bne *       ;trap
15cd : 28              >            plp         ;restore status
                        
                                load_flag 0
15ce : a904            >            lda #0|4
                        
15d0 : 48                       pha
15d1 : a900                     lda #0
15d3 : 8a                       txa
15d4 : 28                       plp
15d5 : a8                       tay
                                tst_y 1,0
15d6 : 08              >            php         ;save flags
15d7 : 08              >            php
15d8 : c001            >            cpy #1     ;test result
15da : d0fe            >            bne *       ;trap
15dc : 68              >            pla         ;load status
                       >            cmp_flag 0
15dd : c934            >            cmp #(0|$34)&$ff
                       >
15df : d0fe            >            bne *       ;trap
15e1 : 28              >            plp         ;restore status
                        
15e2 : 08                       php
15e3 : ca                       dex             ;00
15e4 : 8a                       txa
15e5 : 28                       plp
15e6 : a8                       tay
                                tst_y 0,zero
15e7 : 08              >            php         ;save flags
15e8 : 08              >            php
15e9 : c000            >            cpy #0     ;test result
15eb : d0fe            >            bne *       ;trap
15ed : 68              >            pla         ;load status
                       >            cmp_flag zero
15ee : c936            >            cmp #(zero|$34)&$ff
                       >
15f0 : d0fe            >            bne *       ;trap
15f2 : 28              >            plp         ;restore status
                        
15f3 : 08                       php
15f4 : ca                       dex             ;ff
15f5 : 8a                       txa
15f6 : 28                       plp
15f7 : a8                       tay
                                tst_y $ff,minus
15f8 : 08              >            php         ;save flags
15f9 : 08              >            php
15fa : c0ff            >            cpy #$ff     ;test result
15fc : d0fe            >            bne *       ;trap
AS65 Assembler for R6502 [1.42].                                     Page   33
--------------------------------- verify.asm ---------------------------------

15fe : 68              >            pla         ;load status
                       >            cmp_flag minus
15ff : c9b4            >            cmp #(minus|$34)&$ff
                       >
1601 : d0fe            >            bne *       ;trap
1603 : 28              >            plp         ;restore status
                        
                        
                        
                                load_flag $ff
1604 : a9ff            >            lda #$ff|4
                        
1606 : 48                       pha
1607 : a0ff                     ldy #$ff        ;ff
1609 : 98                       tya
160a : 28                       plp
160b : aa                       tax
                                tst_x $ff,$ff-zero
160c : 08              >            php         ;save flags
160d : 08              >            php
160e : e0ff            >            cpx #$ff     ;test result
1610 : d0fe            >            bne *       ;trap
1612 : 68              >            pla         ;load status
                       >            cmp_flag $ff-zero
1613 : c9fd            >            cmp #($ff-zero|$34)&$ff
                       >
1615 : d0fe            >            bne *       ;trap
1617 : 28              >            plp         ;restore status
                        
1618 : 08                       php
1619 : c8                       iny             ;00
161a : 98                       tya
161b : 28                       plp
161c : aa                       tax
                                tst_x 0,$ff-minus
161d : 08              >            php         ;save flags
161e : 08              >            php
161f : e000            >            cpx #0     ;test result
1621 : d0fe            >            bne *       ;trap
1623 : 68              >            pla         ;load status
                       >            cmp_flag $ff-minus
1624 : c97f            >            cmp #($ff-minus|$34)&$ff
                       >
1626 : d0fe            >            bne *       ;trap
1628 : 28              >            plp         ;restore status
                        
1629 : 08                       php
162a : c8                       iny             ;01
162b : 98                       tya
162c : 28                       plp
162d : aa                       tax
                                tst_x 1,$ff-minus-zero
162e : 08              >            php         ;save flags
162f : 08              >            php
1630 : e001            >            cpx #1     ;test result
1632 : d0fe            >            bne *       ;trap
1634 : 68              >            pla         ;load status
                       >            cmp_flag $ff-minus-zero
1635 : c97d            >            cmp #($ff-minus-zero|$34)&$ff
                       >
1637 : d0fe            >            bne *       ;trap
1639 : 28              >            plp         ;restore status
AS65 Assembler for R6502 [1.42].                                     Page   34
--------------------------------- verify.asm ---------------------------------

                        
                                load_flag 0
163a : a904            >            lda #0|4
                        
163c : 48                       pha
163d : a900                     lda #0          ;preset status
163f : 98                       tya
1640 : 28                       plp
1641 : aa                       tax
                                tst_x 1,0
1642 : 08              >            php         ;save flags
1643 : 08              >            php
1644 : e001            >            cpx #1     ;test result
1646 : d0fe            >            bne *       ;trap
1648 : 68              >            pla         ;load status
                       >            cmp_flag 0
1649 : c934            >            cmp #(0|$34)&$ff
                       >
164b : d0fe            >            bne *       ;trap
164d : 28              >            plp         ;restore status
                        
164e : 08                       php
164f : 88                       dey             ;00
1650 : 98                       tya
1651 : 28                       plp
1652 : aa                       tax
                                tst_x 0,zero
1653 : 08              >            php         ;save flags
1654 : 08              >            php
1655 : e000            >            cpx #0     ;test result
1657 : d0fe            >            bne *       ;trap
1659 : 68              >            pla         ;load status
                       >            cmp_flag zero
165a : c936            >            cmp #(zero|$34)&$ff
                       >
165c : d0fe            >            bne *       ;trap
165e : 28              >            plp         ;restore status
                        
165f : 08                       php
1660 : 88                       dey             ;ff
1661 : 98                       tya
1662 : 28                       plp
1663 : aa                       tax
                                tst_x $ff,minus
1664 : 08              >            php         ;save flags
1665 : 08              >            php
1666 : e0ff            >            cpx #$ff     ;test result
1668 : d0fe            >            bne *       ;trap
166a : 68              >            pla         ;load status
                       >            cmp_flag minus
166b : c9b4            >            cmp #(minus|$34)&$ff
                       >
166d : d0fe            >            bne *       ;trap
166f : 28              >            plp         ;restore status
                        
                        
                        ;TSX sets NZ - TXS does not
1670 : a201                     ldx #1          ;01
                                set_stat $ff
                       >            load_flag $ff
1672 : a9ff            >            lda #$ff|4
                       >
AS65 Assembler for R6502 [1.42].                                     Page   35
--------------------------------- verify.asm ---------------------------------

1674 : 48              >            pha         ;use stack to load status
1675 : 28              >            plp
                        
1676 : 9a                       txs
1677 : 08                       php
1678 : ad0101                   lda $101
                                cmp_flag $ff
167b : c9ff            >            cmp #($ff|$34)&$ff
                        
167d : d0fe                     bne *
                                set_stat 0
                       >            load_flag 0
167f : a904            >            lda #0|4
                       >
1681 : 48              >            pha         ;use stack to load status
1682 : 28              >            plp
                        
1683 : 9a                       txs
1684 : 08                       php
1685 : ad0101                   lda $101
                                cmp_flag 0
1688 : c934            >            cmp #(0|$34)&$ff
                        
168a : d0fe                     bne *
168c : ca                       dex             ;00
                                set_stat $ff
                       >            load_flag $ff
168d : a9ff            >            lda #$ff|4
                       >
168f : 48              >            pha         ;use stack to load status
1690 : 28              >            plp
                        
1691 : 9a                       txs
1692 : 08                       php
1693 : ad0001                   lda $100
                                cmp_flag $ff
1696 : c9ff            >            cmp #($ff|$34)&$ff
                        
1698 : d0fe                     bne *
                                set_stat 0
                       >            load_flag 0
169a : a904            >            lda #0|4
                       >
169c : 48              >            pha         ;use stack to load status
169d : 28              >            plp
                        
169e : 9a                       txs
169f : 08                       php
16a0 : ad0001                   lda $100
                                cmp_flag 0
16a3 : c934            >            cmp #(0|$34)&$ff
                        
16a5 : d0fe                     bne *
16a7 : ca                       dex             ;ff
                                set_stat $ff
                       >            load_flag $ff
16a8 : a9ff            >            lda #$ff|4
                       >
16aa : 48              >            pha         ;use stack to load status
16ab : 28              >            plp
                        
16ac : 9a                       txs
AS65 Assembler for R6502 [1.42].                                     Page   36
--------------------------------- verify.asm ---------------------------------

16ad : 08                       php
16ae : adff01                   lda $1ff
                                cmp_flag $ff
16b1 : c9ff            >            cmp #($ff|$34)&$ff
                        
16b3 : d0fe                     bne *
                                set_stat 0
                       >            load_flag 0
16b5 : a904            >            lda #0|4
                       >
16b7 : 48              >            pha         ;use stack to load status
16b8 : 28              >            plp
                        
16b9 : 9a                       txs
16ba : 08                       php
16bb : adff01                   lda $1ff
                                cmp_flag 0
16be : c934            >            cmp #(0|$34)&$ff
                        
                        
16c0 : a201                     ldx #1
16c2 : 9a                       txs             ;sp=01
                                set_stat $ff
                       >            load_flag $ff
16c3 : a9ff            >            lda #$ff|4
                       >
16c5 : 48              >            pha         ;use stack to load status
16c6 : 28              >            plp
                        
16c7 : ba                       tsx             ;clears Z, N
16c8 : 08                       php             ;sp=00
16c9 : e001                     cpx #1
16cb : d0fe                     bne *
16cd : ad0101                   lda $101
                                cmp_flag $ff-minus-zero
16d0 : c97d            >            cmp #($ff-minus-zero|$34)&$ff
                        
16d2 : d0fe                     bne *
                                set_stat $ff
                       >            load_flag $ff
16d4 : a9ff            >            lda #$ff|4
                       >
16d6 : 48              >            pha         ;use stack to load status
16d7 : 28              >            plp
                        
16d8 : ba                       tsx             ;clears N, sets Z
16d9 : 08                       php             ;sp=ff
16da : e000                     cpx #0
16dc : d0fe                     bne *
16de : ad0001                   lda $100
                                cmp_flag $ff-minus
16e1 : c97f            >            cmp #($ff-minus|$34)&$ff
                        
16e3 : d0fe                     bne *
                                set_stat $ff
                       >            load_flag $ff
16e5 : a9ff            >            lda #$ff|4
                       >
16e7 : 48              >            pha         ;use stack to load status
16e8 : 28              >            plp
                        
16e9 : ba                       tsx             ;clears N, sets Z
AS65 Assembler for R6502 [1.42].                                     Page   37
--------------------------------- verify.asm ---------------------------------

16ea : 08                       php             ;sp=fe
16eb : e0ff                     cpx #$ff
16ed : d0fe                     bne *
16ef : adff01                   lda $1ff
                                cmp_flag $ff-zero
16f2 : c9fd            >            cmp #($ff-zero|$34)&$ff
                        
16f4 : d0fe                     bne *
                        
16f6 : a201                     ldx #1
16f8 : 9a                       txs             ;sp=01
                                set_stat 0
                       >            load_flag 0
16f9 : a904            >            lda #0|4
                       >
16fb : 48              >            pha         ;use stack to load status
16fc : 28              >            plp
                        
16fd : ba                       tsx             ;clears Z, N
16fe : 08                       php             ;sp=00
16ff : e001                     cpx #1
1701 : d0fe                     bne *
1703 : ad0101                   lda $101
                                cmp_flag 0
1706 : c934            >            cmp #(0|$34)&$ff
                        
1708 : d0fe                     bne *
                                set_stat 0
                       >            load_flag 0
170a : a904            >            lda #0|4
                       >
170c : 48              >            pha         ;use stack to load status
170d : 28              >            plp
                        
170e : ba                       tsx             ;clears N, sets Z
170f : 08                       php             ;sp=ff
1710 : e000                     cpx #0
1712 : d0fe                     bne *
1714 : ad0001                   lda $100
                                cmp_flag zero
1717 : c936            >            cmp #(zero|$34)&$ff
                        
1719 : d0fe                     bne *
                                set_stat 0
                       >            load_flag 0
171b : a904            >            lda #0|4
                       >
171d : 48              >            pha         ;use stack to load status
171e : 28              >            plp
                        
171f : ba                       tsx             ;clears N, sets Z
1720 : 08                       php             ;sp=fe
1721 : e0ff                     cpx #$ff
1723 : d0fe                     bne *
1725 : adff01                   lda $1ff
                                cmp_flag minus
1728 : c9b4            >            cmp #(minus|$34)&$ff
                        
172a : d0fe                     bne *
172c : 68                       pla             ;sp=ff
                        
                        ; testing index register load & store LDY LDX STY STX 
AS65 Assembler for R6502 [1.42].                                     Page   38
--------------------------------- verify.asm ---------------------------------

                        ; LDX / STX - zp,y / abs,y
172d : a003                     ldy #3
172f :                  tldx
                                set_stat 0
                       >            load_flag 0
172f : a904            >            lda #0|4
                       >
1731 : 48              >            pha         ;use stack to load status
1732 : 28              >            plp
                        
1733 : b60a                     ldx zp1,y
1735 : 08                       php         ;test stores do not alter flags
1736 : 8a                       txa
1737 : 49c3                     eor #$c3
1739 : 28                       plp
173a : 993302                   sta abst,y
173d : 08                       php         ;flags after load/store sequence
173e : 49c3                     eor #$c3
1740 : d90002                   cmp abs1,y  ;test result
1743 : d0fe                     bne *       ;trap
1745 : 68                       pla         ;load status
                                eor_flag 0    ;always on bits
1746 : 4934            >            eor #(0    |$34)
                        
1748 : d90502                   cmp fLDx,y  ;test flags
174b : d0fe                     bne *       ;trap
174d : 88                       dey
174e : 10df                     bpl tldx
                        
1750 : a003                     ldy #3
1752 :                  tldx1
                                set_stat $ff
                       >            load_flag $ff
1752 : a9ff            >            lda #$ff|4
                       >
1754 : 48              >            pha         ;use stack to load status
1755 : 28              >            plp
                        
1756 : b60a                     ldx zp1,y
1758 : 08                       php         ;test stores do not alter flags
1759 : 8a                       txa
175a : 49c3                     eor #$c3
175c : 28                       plp
175d : 993302                   sta abst,y
1760 : 08                       php         ;flags after load/store sequence
1761 : 49c3                     eor #$c3
1763 : d90002                   cmp abs1,y  ;test result
1766 : d0fe                     bne *       ;trap
1768 : 68                       pla         ;load status
                                eor_flag lo~fnz ;mask bits not altered
1769 : 497d            >            eor #(lo~fnz |$34)
                        
176b : d90502                   cmp fLDx,y  ;test flags
176e : d0fe                     bne *       ;trap
1770 : 88                       dey
1771 : 10df                     bpl tldx1
                        
1773 : a003                     ldy #3
1775 :                  tldx2
                                set_stat 0
                       >            load_flag 0
1775 : a904            >            lda #0|4
AS65 Assembler for R6502 [1.42].                                     Page   39
--------------------------------- verify.asm ---------------------------------

                       >
1777 : 48              >            pha         ;use stack to load status
1778 : 28              >            plp
                        
1779 : be0002                   ldx abs1,y
177c : 08                       php         ;test stores do not alter flags
177d : 8a                       txa
177e : 49c3                     eor #$c3
1780 : aa                       tax
1781 : 28                       plp
1782 : 960f                     stx zpt,y
1784 : 08                       php         ;flags after load/store sequence
1785 : 49c3                     eor #$c3
1787 : d90a00                   cmp zp1,y   ;test result
178a : d0fe                     bne *       ;trap
178c : 68                       pla         ;load status
                                eor_flag 0
178d : 4934            >            eor #(0|$34)
                        
178f : d90502                   cmp fLDx,y  ;test flags
1792 : d0fe                     bne *       ;trap
1794 : 88                       dey
1795 : 10de                     bpl tldx2
                        
1797 : a003                     ldy #3
1799 :                  tldx3
                                set_stat $ff
                       >            load_flag $ff
1799 : a9ff            >            lda #$ff|4
                       >
179b : 48              >            pha         ;use stack to load status
179c : 28              >            plp
                        
179d : be0002                   ldx abs1,y
17a0 : 08                       php         ;test stores do not alter flags
17a1 : 8a                       txa
17a2 : 49c3                     eor #$c3
17a4 : aa                       tax
17a5 : 28                       plp
17a6 : 960f                     stx zpt,y
17a8 : 08                       php         ;flags after load/store sequence
17a9 : 49c3                     eor #$c3
17ab : d90a00                   cmp zp1,y   ;test result
17ae : d0fe                     bne *       ;trap
17b0 : 68                       pla         ;load status
                                eor_flag lo~fnz ;mask bits not altered
17b1 : 497d            >            eor #(lo~fnz |$34)
                        
17b3 : d90502                   cmp fLDx,y  ;test flags
17b6 : d0fe                     bne *       ;trap
17b8 : 88                       dey
17b9 : 10de                     bpl tldx3
                        
17bb : a003                     ldy #3      ;testing store result
17bd : a200                     ldx #0
17bf : b90f00           tstx    lda zpt,y
17c2 : 49c3                     eor #$c3
17c4 : d90a00                   cmp zp1,y
17c7 : d0fe                     bne *       ;trap: store to zp data
17c9 : 960f                     stx zpt,y   ;clear
17cb : b93302                   lda abst,y
17ce : 49c3                     eor #$c3
AS65 Assembler for R6502 [1.42].                                     Page   40
--------------------------------- verify.asm ---------------------------------

17d0 : d90002                   cmp abs1,y
17d3 : d0fe                     bne *       ;trap: store to abs data
17d5 : 8a                       txa
17d6 : 993302                   sta abst,y  ;clear
17d9 : 88                       dey
17da : 10e3                     bpl tstx
                        
                        ; indexed wraparound test (only zp should wrap)
17dc : a0fd                     ldy #3+$fa
17de : b610             tldx4   ldx zp1-$fa&$ff,y   ;wrap on indexed zp
17e0 : 8a                       txa
17e1 : 993901                   sta abst-$fa,y      ;no STX abs,y!
17e4 : 88                       dey
17e5 : c0fa                     cpy #$fa
17e7 : b0f5                     bcs tldx4
17e9 : a0fd                     ldy #3+$fa
17eb : be0601           tldx5   ldx abs1-$fa,y      ;no wrap on indexed abs
17ee : 9615                     stx zpt-$fa&$ff,y
17f0 : 88                       dey
17f1 : c0fa                     cpy #$fa
17f3 : b0f6                     bcs tldx5
17f5 : a003                     ldy #3      ;testing wraparound result
17f7 : a200                     ldx #0
17f9 : b90f00           tstx1   lda zpt,y
17fc : d90a00                   cmp zp1,y
17ff : d0fe                     bne *       ;trap: store to zp data
1801 : 960f                     stx zpt,y   ;clear
1803 : b93302                   lda abst,y
1806 : d90002                   cmp abs1,y
1809 : d0fe                     bne *       ;trap: store to abs data
180b : 8a                       txa
180c : 993302                   sta abst,y  ;clear
180f : 88                       dey
1810 : 10e7                     bpl tstx1
                        
                        ; LDY / STY - zp,x / abs,x
1812 : a203                     ldx #3
1814 :                  tldy
                                set_stat 0
                       >            load_flag 0
1814 : a904            >            lda #0|4
                       >
1816 : 48              >            pha         ;use stack to load status
1817 : 28              >            plp
                        
1818 : b40a                     ldy zp1,x
181a : 08                       php         ;test stores do not alter flags
181b : 98                       tya
181c : 49c3                     eor #$c3
181e : 28                       plp
181f : 9d3302                   sta abst,x
1822 : 08                       php         ;flags after load/store sequence
1823 : 49c3                     eor #$c3
1825 : dd0002                   cmp abs1,x  ;test result
1828 : d0fe                     bne *       ;trap
182a : 68                       pla         ;load status
                                eor_flag 0
182b : 4934            >            eor #(0|$34)
                        
182d : dd0502                   cmp fLDx,x  ;test flags
1830 : d0fe                     bne *       ;trap
1832 : ca                       dex
AS65 Assembler for R6502 [1.42].                                     Page   41
--------------------------------- verify.asm ---------------------------------

1833 : 10df                     bpl tldy
                        
1835 : a203                     ldx #3
1837 :                  tldy1
                                set_stat $ff
                       >            load_flag $ff
1837 : a9ff            >            lda #$ff|4
                       >
1839 : 48              >            pha         ;use stack to load status
183a : 28              >            plp
                        
183b : b40a                     ldy zp1,x
183d : 08                       php         ;test stores do not alter flags
183e : 98                       tya
183f : 49c3                     eor #$c3
1841 : 28                       plp
1842 : 9d3302                   sta abst,x
1845 : 08                       php         ;flags after load/store sequence
1846 : 49c3                     eor #$c3
1848 : dd0002                   cmp abs1,x   ;test result
184b : d0fe                     bne *       ;trap
184d : 68                       pla         ;load status
                                eor_flag lo~fnz ;mask bits not altered
184e : 497d            >            eor #(lo~fnz |$34)
                        
1850 : dd0502                   cmp fLDx,x  ;test flags
1853 : d0fe                     bne *       ;trap
1855 : ca                       dex
1856 : 10df                     bpl tldy1
                        
1858 : a203                     ldx #3
185a :                  tldy2
                                set_stat 0
                       >            load_flag 0
185a : a904            >            lda #0|4
                       >
185c : 48              >            pha         ;use stack to load status
185d : 28              >            plp
                        
185e : bc0002                   ldy abs1,x
1861 : 08                       php         ;test stores do not alter flags
1862 : 98                       tya
1863 : 49c3                     eor #$c3
1865 : a8                       tay
1866 : 28                       plp
1867 : 940f                     sty zpt,x
1869 : 08                       php         ;flags after load/store sequence
186a : 49c3                     eor #$c3
186c : d50a                     cmp zp1,x   ;test result
186e : d0fe                     bne *       ;trap
1870 : 68                       pla         ;load status
                                eor_flag 0
1871 : 4934            >            eor #(0|$34)
                        
1873 : dd0502                   cmp fLDx,x  ;test flags
1876 : d0fe                     bne *       ;trap
1878 : ca                       dex
1879 : 10df                     bpl tldy2
                        
187b : a203                     ldx #3
187d :                  tldy3
                                set_stat $ff
AS65 Assembler for R6502 [1.42].                                     Page   42
--------------------------------- verify.asm ---------------------------------

                       >            load_flag $ff
187d : a9ff            >            lda #$ff|4
                       >
187f : 48              >            pha         ;use stack to load status
1880 : 28              >            plp
                        
1881 : bc0002                   ldy abs1,x
1884 : 08                       php         ;test stores do not alter flags
1885 : 98                       tya
1886 : 49c3                     eor #$c3
1888 : a8                       tay
1889 : 28                       plp
188a : 940f                     sty zpt,x
188c : 08                       php         ;flags after load/store sequence
188d : 49c3                     eor #$c3
188f : d50a                     cmp zp1,x   ;test result
1891 : d0fe                     bne *       ;trap
1893 : 68                       pla         ;load status
                                eor_flag lo~fnz ;mask bits not altered
1894 : 497d            >            eor #(lo~fnz |$34)
                        
1896 : dd0502                   cmp fLDx,x  ;test flags
1899 : d0fe                     bne *       ;trap
189b : ca                       dex
189c : 10df                     bpl tldy3
                        
189e : a203                     ldx #3      ;testing store result
18a0 : a000                     ldy #0
18a2 : b50f             tsty    lda zpt,x
18a4 : 49c3                     eor #$c3
18a6 : d50a                     cmp zp1,x
18a8 : d0fe                     bne *       ;trap: store to zp,x data
18aa : 940f                     sty zpt,x   ;clear
18ac : bd3302                   lda abst,x
18af : 49c3                     eor #$c3
18b1 : dd0002                   cmp abs1,x
18b4 : d0fe                     bne *       ;trap: store to abs,x data
18b6 : 8a                       txa
18b7 : 9d3302                   sta abst,x  ;clear
18ba : ca                       dex
18bb : 10e5                     bpl tsty
                        
                        ; indexed wraparound test (only zp should wrap)
18bd : a2fd                     ldx #3+$fa
18bf : b410             tldy4   ldy zp1-$fa&$ff,x   ;wrap on indexed zp
18c1 : 98                       tya
18c2 : 9d3901                   sta abst-$fa,x      ;no STX abs,x!
18c5 : ca                       dex
18c6 : e0fa                     cpx #$fa
18c8 : b0f5                     bcs tldy4
18ca : a2fd                     ldx #3+$fa
18cc : bc0601           tldy5   ldy abs1-$fa,x      ;no wrap on indexed abs
18cf : 9415                     sty zpt-$fa&$ff,x
18d1 : ca                       dex
18d2 : e0fa                     cpx #$fa
18d4 : b0f6                     bcs tldy5
18d6 : a203                     ldx #3      ;testing wraparound result
18d8 : a000                     ldy #0
18da : b50f             tsty1   lda zpt,x
18dc : d50a                     cmp zp1,x
18de : d0fe                     bne *       ;trap: store to zp,x data
18e0 : 940f                     sty zpt,x   ;clear
AS65 Assembler for R6502 [1.42].                                     Page   43
--------------------------------- verify.asm ---------------------------------

18e2 : bd3302                   lda abst,x
18e5 : dd0002                   cmp abs1,x
18e8 : d0fe                     bne *       ;trap: store to abs,x data
18ea : 8a                       txa
18eb : 9d3302                   sta abst,x  ;clear
18ee : ca                       dex
18ef : 10e9                     bpl tsty1
                        
                        ; LDX / STX - zp / abs / #
                                set_stat 0
                       >            load_flag 0
18f1 : a904            >            lda #0|4
                       >
18f3 : 48              >            pha         ;use stack to load status
18f4 : 28              >            plp
                        
18f5 : a60a                     ldx zp1
18f7 : 08                       php         ;test stores do not alter flags
18f8 : 8a                       txa
18f9 : 49c3                     eor #$c3
18fb : aa                       tax
18fc : 28                       plp
18fd : 8e3302                   stx abst
1900 : 08                       php         ;flags after load/store sequence
1901 : 49c3                     eor #$c3
1903 : aa                       tax
1904 : e0c3                     cpx #$c3    ;test result
1906 : d0fe                     bne *       ;trap
1908 : 68                       pla         ;load status
                                eor_flag 0
1909 : 4934            >            eor #(0|$34)
                        
190b : cd0502                   cmp fLDx    ;test flags
190e : d0fe                     bne *       ;trap
                                set_stat 0
                       >            load_flag 0
1910 : a904            >            lda #0|4
                       >
1912 : 48              >            pha         ;use stack to load status
1913 : 28              >            plp
                        
1914 : a60b                     ldx zp1+1
1916 : 08                       php         ;test stores do not alter flags
1917 : 8a                       txa
1918 : 49c3                     eor #$c3
191a : aa                       tax
191b : 28                       plp
191c : 8e3402                   stx abst+1
191f : 08                       php         ;flags after load/store sequence
1920 : 49c3                     eor #$c3
1922 : aa                       tax
1923 : e082                     cpx #$82    ;test result
1925 : d0fe                     bne *       ;trap
1927 : 68                       pla         ;load status
                                eor_flag 0
1928 : 4934            >            eor #(0|$34)
                        
192a : cd0602                   cmp fLDx+1  ;test flags
192d : d0fe                     bne *       ;trap
                                set_stat 0
                       >            load_flag 0
192f : a904            >            lda #0|4
AS65 Assembler for R6502 [1.42].                                     Page   44
--------------------------------- verify.asm ---------------------------------

                       >
1931 : 48              >            pha         ;use stack to load status
1932 : 28              >            plp
                        
1933 : a60c                     ldx zp1+2
1935 : 08                       php         ;test stores do not alter flags
1936 : 8a                       txa
1937 : 49c3                     eor #$c3
1939 : aa                       tax
193a : 28                       plp
193b : 8e3502                   stx abst+2
193e : 08                       php         ;flags after load/store sequence
193f : 49c3                     eor #$c3
1941 : aa                       tax
1942 : e041                     cpx #$41    ;test result
1944 : d0fe                     bne *       ;trap
1946 : 68                       pla         ;load status
                                eor_flag 0
1947 : 4934            >            eor #(0|$34)
                        
1949 : cd0702                   cmp fLDx+2  ;test flags
194c : d0fe                     bne *       ;trap
                                set_stat 0
                       >            load_flag 0
194e : a904            >            lda #0|4
                       >
1950 : 48              >            pha         ;use stack to load status
1951 : 28              >            plp
                        
1952 : a60d                     ldx zp1+3
1954 : 08                       php         ;test stores do not alter flags
1955 : 8a                       txa
1956 : 49c3                     eor #$c3
1958 : aa                       tax
1959 : 28                       plp
195a : 8e3602                   stx abst+3
195d : 08                       php         ;flags after load/store sequence
195e : 49c3                     eor #$c3
1960 : aa                       tax
1961 : e000                     cpx #0      ;test result
1963 : d0fe                     bne *       ;trap
1965 : 68                       pla         ;load status
                                eor_flag 0
1966 : 4934            >            eor #(0|$34)
                        
1968 : cd0802                   cmp fLDx+3  ;test flags
196b : d0fe                     bne *       ;trap
                        
                                set_stat $ff
                       >            load_flag $ff
196d : a9ff            >            lda #$ff|4
                       >
196f : 48              >            pha         ;use stack to load status
1970 : 28              >            plp
                        
1971 : a60a                     ldx zp1
1973 : 08                       php         ;test stores do not alter flags
1974 : 8a                       txa
1975 : 49c3                     eor #$c3
1977 : aa                       tax
1978 : 28                       plp
1979 : 8e3302                   stx abst
AS65 Assembler for R6502 [1.42].                                     Page   45
--------------------------------- verify.asm ---------------------------------

197c : 08                       php         ;flags after load/store sequence
197d : 49c3                     eor #$c3
197f : aa                       tax
1980 : e0c3                     cpx #$c3    ;test result
1982 : d0fe                     bne *       ;trap
1984 : 68                       pla         ;load status
                                eor_flag lo~fnz ;mask bits not altered
1985 : 497d            >            eor #(lo~fnz |$34)
                        
1987 : cd0502                   cmp fLDx    ;test flags
198a : d0fe                     bne *       ;trap
                                set_stat $ff
                       >            load_flag $ff
198c : a9ff            >            lda #$ff|4
                       >
198e : 48              >            pha         ;use stack to load status
198f : 28              >            plp
                        
1990 : a60b                     ldx zp1+1
1992 : 08                       php         ;test stores do not alter flags
1993 : 8a                       txa
1994 : 49c3                     eor #$c3
1996 : aa                       tax
1997 : 28                       plp
1998 : 8e3402                   stx abst+1
199b : 08                       php         ;flags after load/store sequence
199c : 49c3                     eor #$c3
199e : aa                       tax
199f : e082                     cpx #$82    ;test result
19a1 : d0fe                     bne *       ;trap
19a3 : 68                       pla         ;load status
                                eor_flag lo~fnz ;mask bits not altered
19a4 : 497d            >            eor #(lo~fnz |$34)
                        
19a6 : cd0602                   cmp fLDx+1  ;test flags
19a9 : d0fe                     bne *       ;trap
                                set_stat $ff
                       >            load_flag $ff
19ab : a9ff            >            lda #$ff|4
                       >
19ad : 48              >            pha         ;use stack to load status
19ae : 28              >            plp
                        
19af : a60c                     ldx zp1+2
19b1 : 08                       php         ;test stores do not alter flags
19b2 : 8a                       txa
19b3 : 49c3                     eor #$c3
19b5 : aa                       tax
19b6 : 28                       plp
19b7 : 8e3502                   stx abst+2
19ba : 08                       php         ;flags after load/store sequence
19bb : 49c3                     eor #$c3
19bd : aa                       tax
19be : e041                     cpx #$41    ;test result
19c0 : d0fe                     bne *       ;trap
19c2 : 68                       pla         ;load status
                                eor_flag lo~fnz ;mask bits not altered
19c3 : 497d            >            eor #(lo~fnz |$34)
                        
19c5 : cd0702                   cmp fLDx+2  ;test flags
19c8 : d0fe                     bne *       ;trap
                                set_stat $ff
AS65 Assembler for R6502 [1.42].                                     Page   46
--------------------------------- verify.asm ---------------------------------

                       >            load_flag $ff
19ca : a9ff            >            lda #$ff|4
                       >
19cc : 48              >            pha         ;use stack to load status
19cd : 28              >            plp
                        
19ce : a60d                     ldx zp1+3
19d0 : 08                       php         ;test stores do not alter flags
19d1 : 8a                       txa
19d2 : 49c3                     eor #$c3
19d4 : aa                       tax
19d5 : 28                       plp
19d6 : 8e3602                   stx abst+3
19d9 : 08                       php         ;flags after load/store sequence
19da : 49c3                     eor #$c3
19dc : aa                       tax
19dd : e000                     cpx #0      ;test result
19df : d0fe                     bne *       ;trap
19e1 : 68                       pla         ;load status
                                eor_flag lo~fnz ;mask bits not altered
19e2 : 497d            >            eor #(lo~fnz |$34)
                        
19e4 : cd0802                   cmp fLDx+3  ;test flags
19e7 : d0fe                     bne *       ;trap
                        
                                set_stat 0
                       >            load_flag 0
19e9 : a904            >            lda #0|4
                       >
19eb : 48              >            pha         ;use stack to load status
19ec : 28              >            plp
                        
19ed : ae0002                   ldx abs1
19f0 : 08                       php         ;test stores do not alter flags
19f1 : 8a                       txa
19f2 : 49c3                     eor #$c3
19f4 : aa                       tax
19f5 : 28                       plp
19f6 : 860f                     stx zpt
19f8 : 08                       php         ;flags after load/store sequence
19f9 : 49c3                     eor #$c3
19fb : c50a                     cmp zp1     ;test result
19fd : d0fe                     bne *       ;trap
19ff : 68                       pla         ;load status
                                eor_flag 0    ;always on bits
1a00 : 4934            >            eor #(0    |$34)
                        
1a02 : cd0502                   cmp fLDx    ;test flags
1a05 : d0fe                     bne *       ;trap
                                set_stat 0
                       >            load_flag 0
1a07 : a904            >            lda #0|4
                       >
1a09 : 48              >            pha         ;use stack to load status
1a0a : 28              >            plp
                        
1a0b : ae0102                   ldx abs1+1
1a0e : 08                       php         ;test stores do not alter flags
1a0f : 8a                       txa
1a10 : 49c3                     eor #$c3
1a12 : aa                       tax
1a13 : 28                       plp
AS65 Assembler for R6502 [1.42].                                     Page   47
--------------------------------- verify.asm ---------------------------------

1a14 : 8610                     stx zpt+1
1a16 : 08                       php         ;flags after load/store sequence
1a17 : 49c3                     eor #$c3
1a19 : c50b                     cmp zp1+1   ;test result
1a1b : d0fe                     bne *       ;trap
1a1d : 68                       pla         ;load status
                                eor_flag 0
1a1e : 4934            >            eor #(0|$34)
                        
1a20 : cd0602                   cmp fLDx+1  ;test flags
1a23 : d0fe                     bne *       ;trap
                                set_stat 0
                       >            load_flag 0
1a25 : a904            >            lda #0|4
                       >
1a27 : 48              >            pha         ;use stack to load status
1a28 : 28              >            plp
                        
1a29 : ae0202                   ldx abs1+2
1a2c : 08                       php         ;test stores do not alter flags
1a2d : 8a                       txa
1a2e : 49c3                     eor #$c3
1a30 : aa                       tax
1a31 : 28                       plp
1a32 : 8611                     stx zpt+2
1a34 : 08                       php         ;flags after load/store sequence
1a35 : 49c3                     eor #$c3
1a37 : c50c                     cmp zp1+2   ;test result
1a39 : d0fe                     bne *       ;trap
1a3b : 68                       pla         ;load status
                                eor_flag 0
1a3c : 4934            >            eor #(0|$34)
                        
1a3e : cd0702                   cmp fLDx+2  ;test flags
1a41 : d0fe                     bne *       ;trap
                                set_stat 0
                       >            load_flag 0
1a43 : a904            >            lda #0|4
                       >
1a45 : 48              >            pha         ;use stack to load status
1a46 : 28              >            plp
                        
1a47 : ae0302                   ldx abs1+3
1a4a : 08                       php         ;test stores do not alter flags
1a4b : 8a                       txa
1a4c : 49c3                     eor #$c3
1a4e : aa                       tax
1a4f : 28                       plp
1a50 : 8612                     stx zpt+3
1a52 : 08                       php         ;flags after load/store sequence
1a53 : 49c3                     eor #$c3
1a55 : c50d                     cmp zp1+3   ;test result
1a57 : d0fe                     bne *       ;trap
1a59 : 68                       pla         ;load status
                                eor_flag 0
1a5a : 4934            >            eor #(0|$34)
                        
1a5c : cd0802                   cmp fLDx+3  ;test flags
1a5f : d0fe                     bne *       ;trap
                        
                                set_stat $ff
                       >            load_flag $ff
AS65 Assembler for R6502 [1.42].                                     Page   48
--------------------------------- verify.asm ---------------------------------

1a61 : a9ff            >            lda #$ff|4
                       >
1a63 : 48              >            pha         ;use stack to load status
1a64 : 28              >            plp
                        
1a65 : ae0002                   ldx abs1
1a68 : 08                       php         ;test stores do not alter flags
1a69 : 8a                       txa
1a6a : 49c3                     eor #$c3
1a6c : aa                       tax
1a6d : 28                       plp
1a6e : 860f                     stx zpt
1a70 : 08                       php         ;flags after load/store sequence
1a71 : 49c3                     eor #$c3
1a73 : aa                       tax
1a74 : e40a                     cpx zp1     ;test result
1a76 : d0fe                     bne *       ;trap
1a78 : 68                       pla         ;load status
                                eor_flag lo~fnz ;mask bits not altered
1a79 : 497d            >            eor #(lo~fnz |$34)
                        
1a7b : cd0502                   cmp fLDx    ;test flags
1a7e : d0fe                     bne *       ;trap
                                set_stat $ff
                       >            load_flag $ff
1a80 : a9ff            >            lda #$ff|4
                       >
1a82 : 48              >            pha         ;use stack to load status
1a83 : 28              >            plp
                        
1a84 : ae0102                   ldx abs1+1
1a87 : 08                       php         ;test stores do not alter flags
1a88 : 8a                       txa
1a89 : 49c3                     eor #$c3
1a8b : aa                       tax
1a8c : 28                       plp
1a8d : 8610                     stx zpt+1
1a8f : 08                       php         ;flags after load/store sequence
1a90 : 49c3                     eor #$c3
1a92 : aa                       tax
1a93 : e40b                     cpx zp1+1   ;test result
1a95 : d0fe                     bne *       ;trap
1a97 : 68                       pla         ;load status
                                eor_flag lo~fnz ;mask bits not altered
1a98 : 497d            >            eor #(lo~fnz |$34)
                        
1a9a : cd0602                   cmp fLDx+1  ;test flags
1a9d : d0fe                     bne *       ;trap
                                set_stat $ff
                       >            load_flag $ff
1a9f : a9ff            >            lda #$ff|4
                       >
1aa1 : 48              >            pha         ;use stack to load status
1aa2 : 28              >            plp
                        
1aa3 : ae0202                   ldx abs1+2
1aa6 : 08                       php         ;test stores do not alter flags
1aa7 : 8a                       txa
1aa8 : 49c3                     eor #$c3
1aaa : aa                       tax
1aab : 28                       plp
1aac : 8611                     stx zpt+2
AS65 Assembler for R6502 [1.42].                                     Page   49
--------------------------------- verify.asm ---------------------------------

1aae : 08                       php         ;flags after load/store sequence
1aaf : 49c3                     eor #$c3
1ab1 : aa                       tax
1ab2 : e40c                     cpx zp1+2   ;test result
1ab4 : d0fe                     bne *       ;trap
1ab6 : 68                       pla         ;load status
                                eor_flag lo~fnz ;mask bits not altered
1ab7 : 497d            >            eor #(lo~fnz |$34)
                        
1ab9 : cd0702                   cmp fLDx+2  ;test flags
1abc : d0fe                     bne *       ;trap
                                set_stat $ff
                       >            load_flag $ff
1abe : a9ff            >            lda #$ff|4
                       >
1ac0 : 48              >            pha         ;use stack to load status
1ac1 : 28              >            plp
                        
1ac2 : ae0302                   ldx abs1+3
1ac5 : 08                       php         ;test stores do not alter flags
1ac6 : 8a                       txa
1ac7 : 49c3                     eor #$c3
1ac9 : aa                       tax
1aca : 28                       plp
1acb : 8612                     stx zpt+3
1acd : 08                       php         ;flags after load/store sequence
1ace : 49c3                     eor #$c3
1ad0 : aa                       tax
1ad1 : e40d                     cpx zp1+3   ;test result
1ad3 : d0fe                     bne *       ;trap
1ad5 : 68                       pla         ;load status
                                eor_flag lo~fnz ;mask bits not altered
1ad6 : 497d            >            eor #(lo~fnz |$34)
                        
1ad8 : cd0802                   cmp fLDx+3  ;test flags
1adb : d0fe                     bne *       ;trap
                        
                                set_stat 0
                       >            load_flag 0
1add : a904            >            lda #0|4
                       >
1adf : 48              >            pha         ;use stack to load status
1ae0 : 28              >            plp
                        
1ae1 : a2c3                     ldx #$c3
1ae3 : 08                       php
1ae4 : ec0002                   cpx abs1    ;test result
1ae7 : d0fe                     bne *       ;trap
1ae9 : 68                       pla         ;load status
                                eor_flag 0
1aea : 4934            >            eor #(0|$34)
                        
1aec : cd0502                   cmp fLDx    ;test flags
1aef : d0fe                     bne *       ;trap
                                set_stat 0
                       >            load_flag 0
1af1 : a904            >            lda #0|4
                       >
1af3 : 48              >            pha         ;use stack to load status
1af4 : 28              >            plp
                        
1af5 : a282                     ldx #$82
AS65 Assembler for R6502 [1.42].                                     Page   50
--------------------------------- verify.asm ---------------------------------

1af7 : 08                       php
1af8 : ec0102                   cpx abs1+1  ;test result
1afb : d0fe                     bne *       ;trap
1afd : 68                       pla         ;load status
                                eor_flag 0
1afe : 4934            >            eor #(0|$34)
                        
1b00 : cd0602                   cmp fLDx+1  ;test flags
1b03 : d0fe                     bne *       ;trap
                                set_stat 0
                       >            load_flag 0
1b05 : a904            >            lda #0|4
                       >
1b07 : 48              >            pha         ;use stack to load status
1b08 : 28              >            plp
                        
1b09 : a241                     ldx #$41
1b0b : 08                       php
1b0c : ec0202                   cpx abs1+2  ;test result
1b0f : d0fe                     bne *       ;trap
1b11 : 68                       pla         ;load status
                                eor_flag 0
1b12 : 4934            >            eor #(0|$34)
                        
1b14 : cd0702                   cmp fLDx+2  ;test flags
1b17 : d0fe                     bne *       ;trap
                                set_stat 0
                       >            load_flag 0
1b19 : a904            >            lda #0|4
                       >
1b1b : 48              >            pha         ;use stack to load status
1b1c : 28              >            plp
                        
1b1d : a200                     ldx #0
1b1f : 08                       php
1b20 : ec0302                   cpx abs1+3  ;test result
1b23 : d0fe                     bne *       ;trap
1b25 : 68                       pla         ;load status
                                eor_flag 0    ;always on bits
1b26 : 4934            >            eor #(0    |$34)
                        
1b28 : cd0802                   cmp fLDx+3  ;test flags
1b2b : d0fe                     bne *       ;trap
                        
                                set_stat $ff
                       >            load_flag $ff
1b2d : a9ff            >            lda #$ff|4
                       >
1b2f : 48              >            pha         ;use stack to load status
1b30 : 28              >            plp
                        
1b31 : a2c3                     ldx #$c3
1b33 : 08                       php
1b34 : ec0002                   cpx abs1    ;test result
1b37 : d0fe                     bne *       ;trap
1b39 : 68                       pla         ;load status
                                eor_flag lo~fnz ;mask bits not altered
1b3a : 497d            >            eor #(lo~fnz |$34)
                        
1b3c : cd0502                   cmp fLDx    ;test flags
1b3f : d0fe                     bne *       ;trap
                                set_stat $ff
AS65 Assembler for R6502 [1.42].                                     Page   51
--------------------------------- verify.asm ---------------------------------

                       >            load_flag $ff
1b41 : a9ff            >            lda #$ff|4
                       >
1b43 : 48              >            pha         ;use stack to load status
1b44 : 28              >            plp
                        
1b45 : a282                     ldx #$82
1b47 : 08                       php
1b48 : ec0102                   cpx abs1+1  ;test result
1b4b : d0fe                     bne *       ;trap
1b4d : 68                       pla         ;load status
                                eor_flag lo~fnz ;mask bits not altered
1b4e : 497d            >            eor #(lo~fnz |$34)
                        
1b50 : cd0602                   cmp fLDx+1  ;test flags
1b53 : d0fe                     bne *       ;trap
                                set_stat $ff
                       >            load_flag $ff
1b55 : a9ff            >            lda #$ff|4
                       >
1b57 : 48              >            pha         ;use stack to load status
1b58 : 28              >            plp
                        
1b59 : a241                     ldx #$41
1b5b : 08                       php
1b5c : ec0202                   cpx abs1+2  ;test result
1b5f : d0fe                     bne *       ;trap
1b61 : 68                       pla         ;load status
                                eor_flag lo~fnz ;mask bits not altered
1b62 : 497d            >            eor #(lo~fnz |$34)
                        
1b64 : cd0702                   cmp fLDx+2  ;test flags
1b67 : d0fe                     bne *       ;trap
                                set_stat $ff
                       >            load_flag $ff
1b69 : a9ff            >            lda #$ff|4
                       >
1b6b : 48              >            pha         ;use stack to load status
1b6c : 28              >            plp
                        
1b6d : a200                     ldx #0
1b6f : 08                       php
1b70 : ec0302                   cpx abs1+3  ;test result
1b73 : d0fe                     bne *       ;trap
1b75 : 68                       pla         ;load status
                                eor_flag lo~fnz ;mask bits not altered
1b76 : 497d            >            eor #(lo~fnz |$34)
                        
1b78 : cd0802                   cmp fLDx+3  ;test flags
1b7b : d0fe                     bne *       ;trap
                        
1b7d : a200                     ldx #0
1b7f : a50f                     lda zpt
1b81 : 49c3                     eor #$c3
1b83 : c50a                     cmp zp1
1b85 : d0fe                     bne *       ;trap: store to zp data
1b87 : 860f                     stx zpt     ;clear
1b89 : ad3302                   lda abst
1b8c : 49c3                     eor #$c3
1b8e : cd0002                   cmp abs1
1b91 : d0fe                     bne *       ;trap: store to abs data
1b93 : 8e3302                   stx abst    ;clear
AS65 Assembler for R6502 [1.42].                                     Page   52
--------------------------------- verify.asm ---------------------------------

1b96 : a510                     lda zpt+1
1b98 : 49c3                     eor #$c3
1b9a : c50b                     cmp zp1+1
1b9c : d0fe                     bne *       ;trap: store to zp data
1b9e : 8610                     stx zpt+1   ;clear
1ba0 : ad3402                   lda abst+1
1ba3 : 49c3                     eor #$c3
1ba5 : cd0102                   cmp abs1+1
1ba8 : d0fe                     bne *       ;trap: store to abs data
1baa : 8e3402                   stx abst+1  ;clear
1bad : a511                     lda zpt+2
1baf : 49c3                     eor #$c3
1bb1 : c50c                     cmp zp1+2
1bb3 : d0fe                     bne *       ;trap: store to zp data
1bb5 : 8611                     stx zpt+2   ;clear
1bb7 : ad3502                   lda abst+2
1bba : 49c3                     eor #$c3
1bbc : cd0202                   cmp abs1+2
1bbf : d0fe                     bne *       ;trap: store to abs data
1bc1 : 8e3502                   stx abst+2  ;clear
1bc4 : a512                     lda zpt+3
1bc6 : 49c3                     eor #$c3
1bc8 : c50d                     cmp zp1+3
1bca : d0fe                     bne *       ;trap: store to zp data
1bcc : 8612                     stx zpt+3   ;clear
1bce : ad3602                   lda abst+3
1bd1 : 49c3                     eor #$c3
1bd3 : cd0302                   cmp abs1+3
1bd6 : d0fe                     bne *       ;trap: store to abs data
1bd8 : 8e3602                   stx abst+3  ;clear
                        
                        ; LDY / STY - zp / abs / #
                                set_stat 0
                       >            load_flag 0
1bdb : a904            >            lda #0|4
                       >
1bdd : 48              >            pha         ;use stack to load status
1bde : 28              >            plp
                        
1bdf : a40a                     ldy zp1
1be1 : 08                       php         ;test stores do not alter flags
1be2 : 98                       tya
1be3 : 49c3                     eor #$c3
1be5 : a8                       tay
1be6 : 28                       plp
1be7 : 8c3302                   sty abst
1bea : 08                       php         ;flags after load/store sequence
1beb : 49c3                     eor #$c3
1bed : a8                       tay
1bee : c0c3                     cpy #$c3    ;test result
1bf0 : d0fe                     bne *       ;trap
1bf2 : 68                       pla         ;load status
                                eor_flag 0
1bf3 : 4934            >            eor #(0|$34)
                        
1bf5 : cd0502                   cmp fLDx    ;test flags
1bf8 : d0fe                     bne *       ;trap
                                set_stat 0
                       >            load_flag 0
1bfa : a904            >            lda #0|4
                       >
1bfc : 48              >            pha         ;use stack to load status
AS65 Assembler for R6502 [1.42].                                     Page   53
--------------------------------- verify.asm ---------------------------------

1bfd : 28              >            plp
                        
1bfe : a40b                     ldy zp1+1
1c00 : 08                       php         ;test stores do not alter flags
1c01 : 98                       tya
1c02 : 49c3                     eor #$c3
1c04 : a8                       tay
1c05 : 28                       plp
1c06 : 8c3402                   sty abst+1
1c09 : 08                       php         ;flags after load/store sequence
1c0a : 49c3                     eor #$c3
1c0c : a8                       tay
1c0d : c082                     cpy #$82    ;test result
1c0f : d0fe                     bne *       ;trap
1c11 : 68                       pla         ;load status
                                eor_flag 0
1c12 : 4934            >            eor #(0|$34)
                        
1c14 : cd0602                   cmp fLDx+1  ;test flags
1c17 : d0fe                     bne *       ;trap
                                set_stat 0
                       >            load_flag 0
1c19 : a904            >            lda #0|4
                       >
1c1b : 48              >            pha         ;use stack to load status
1c1c : 28              >            plp
                        
1c1d : a40c                     ldy zp1+2
1c1f : 08                       php         ;test stores do not alter flags
1c20 : 98                       tya
1c21 : 49c3                     eor #$c3
1c23 : a8                       tay
1c24 : 28                       plp
1c25 : 8c3502                   sty abst+2
1c28 : 08                       php         ;flags after load/store sequence
1c29 : 49c3                     eor #$c3
1c2b : a8                       tay
1c2c : c041                     cpy #$41    ;test result
1c2e : d0fe                     bne *       ;trap
1c30 : 68                       pla         ;load status
                                eor_flag 0
1c31 : 4934            >            eor #(0|$34)
                        
1c33 : cd0702                   cmp fLDx+2  ;test flags
1c36 : d0fe                     bne *       ;trap
                                set_stat 0
                       >            load_flag 0
1c38 : a904            >            lda #0|4
                       >
1c3a : 48              >            pha         ;use stack to load status
1c3b : 28              >            plp
                        
1c3c : a40d                     ldy zp1+3
1c3e : 08                       php         ;test stores do not alter flags
1c3f : 98                       tya
1c40 : 49c3                     eor #$c3
1c42 : a8                       tay
1c43 : 28                       plp
1c44 : 8c3602                   sty abst+3
1c47 : 08                       php         ;flags after load/store sequence
1c48 : 49c3                     eor #$c3
1c4a : a8                       tay
AS65 Assembler for R6502 [1.42].                                     Page   54
--------------------------------- verify.asm ---------------------------------

1c4b : c000                     cpy #0      ;test result
1c4d : d0fe                     bne *       ;trap
1c4f : 68                       pla         ;load status
                                eor_flag 0
1c50 : 4934            >            eor #(0|$34)
                        
1c52 : cd0802                   cmp fLDx+3  ;test flags
1c55 : d0fe                     bne *       ;trap
                        
                                set_stat $ff
                       >            load_flag $ff
1c57 : a9ff            >            lda #$ff|4
                       >
1c59 : 48              >            pha         ;use stack to load status
1c5a : 28              >            plp
                        
1c5b : a40a                     ldy zp1
1c5d : 08                       php         ;test stores do not alter flags
1c5e : 98                       tya
1c5f : 49c3                     eor #$c3
1c61 : a8                       tay
1c62 : 28                       plp
1c63 : 8c3302                   sty abst
1c66 : 08                       php         ;flags after load/store sequence
1c67 : 49c3                     eor #$c3
1c69 : a8                       tay
1c6a : c0c3                     cpy #$c3    ;test result
1c6c : d0fe                     bne *       ;trap
1c6e : 68                       pla         ;load status
                                eor_flag lo~fnz ;mask bits not altered
1c6f : 497d            >            eor #(lo~fnz |$34)
                        
1c71 : cd0502                   cmp fLDx    ;test flags
1c74 : d0fe                     bne *       ;trap
                                set_stat $ff
                       >            load_flag $ff
1c76 : a9ff            >            lda #$ff|4
                       >
1c78 : 48              >            pha         ;use stack to load status
1c79 : 28              >            plp
                        
1c7a : a40b                     ldy zp1+1
1c7c : 08                       php         ;test stores do not alter flags
1c7d : 98                       tya
1c7e : 49c3                     eor #$c3
1c80 : a8                       tay
1c81 : 28                       plp
1c82 : 8c3402                   sty abst+1
1c85 : 08                       php         ;flags after load/store sequence
1c86 : 49c3                     eor #$c3
1c88 : a8                       tay
1c89 : c082                     cpy #$82   ;test result
1c8b : d0fe                     bne *       ;trap
1c8d : 68                       pla         ;load status
                                eor_flag lo~fnz ;mask bits not altered
1c8e : 497d            >            eor #(lo~fnz |$34)
                        
1c90 : cd0602                   cmp fLDx+1  ;test flags
1c93 : d0fe                     bne *       ;trap
                                set_stat $ff
                       >            load_flag $ff
1c95 : a9ff            >            lda #$ff|4
AS65 Assembler for R6502 [1.42].                                     Page   55
--------------------------------- verify.asm ---------------------------------

                       >
1c97 : 48              >            pha         ;use stack to load status
1c98 : 28              >            plp
                        
1c99 : a40c                     ldy zp1+2
1c9b : 08                       php         ;test stores do not alter flags
1c9c : 98                       tya
1c9d : 49c3                     eor #$c3
1c9f : a8                       tay
1ca0 : 28                       plp
1ca1 : 8c3502                   sty abst+2
1ca4 : 08                       php         ;flags after load/store sequence
1ca5 : 49c3                     eor #$c3
1ca7 : a8                       tay
1ca8 : c041                     cpy #$41    ;test result
1caa : d0fe                     bne *       ;trap
1cac : 68                       pla         ;load status
                                eor_flag lo~fnz ;mask bits not altered
1cad : 497d            >            eor #(lo~fnz |$34)
                        
1caf : cd0702                   cmp fLDx+2  ;test flags
1cb2 : d0fe                     bne *       ;trap
                                set_stat $ff
                       >            load_flag $ff
1cb4 : a9ff            >            lda #$ff|4
                       >
1cb6 : 48              >            pha         ;use stack to load status
1cb7 : 28              >            plp
                        
1cb8 : a40d                     ldy zp1+3
1cba : 08                       php         ;test stores do not alter flags
1cbb : 98                       tya
1cbc : 49c3                     eor #$c3
1cbe : a8                       tay
1cbf : 28                       plp
1cc0 : 8c3602                   sty abst+3
1cc3 : 08                       php         ;flags after load/store sequence
1cc4 : 49c3                     eor #$c3
1cc6 : a8                       tay
1cc7 : c000                     cpy #0      ;test result
1cc9 : d0fe                     bne *       ;trap
1ccb : 68                       pla         ;load status
                                eor_flag lo~fnz ;mask bits not altered
1ccc : 497d            >            eor #(lo~fnz |$34)
                        
1cce : cd0802                   cmp fLDx+3  ;test flags
1cd1 : d0fe                     bne *       ;trap
                        
                                set_stat 0
                       >            load_flag 0
1cd3 : a904            >            lda #0|4
                       >
1cd5 : 48              >            pha         ;use stack to load status
1cd6 : 28              >            plp
                        
1cd7 : ac0002                   ldy abs1
1cda : 08                       php         ;test stores do not alter flags
1cdb : 98                       tya
1cdc : 49c3                     eor #$c3
1cde : a8                       tay
1cdf : 28                       plp
1ce0 : 840f                     sty zpt
AS65 Assembler for R6502 [1.42].                                     Page   56
--------------------------------- verify.asm ---------------------------------

1ce2 : 08                       php         ;flags after load/store sequence
1ce3 : 49c3                     eor #$c3
1ce5 : a8                       tay
1ce6 : c40a                     cpy zp1     ;test result
1ce8 : d0fe                     bne *       ;trap
1cea : 68                       pla         ;load status
                                eor_flag 0
1ceb : 4934            >            eor #(0|$34)
                        
1ced : cd0502                   cmp fLDx    ;test flags
1cf0 : d0fe                     bne *       ;trap
                                set_stat 0
                       >            load_flag 0
1cf2 : a904            >            lda #0|4
                       >
1cf4 : 48              >            pha         ;use stack to load status
1cf5 : 28              >            plp
                        
1cf6 : ac0102                   ldy abs1+1
1cf9 : 08                       php         ;test stores do not alter flags
1cfa : 98                       tya
1cfb : 49c3                     eor #$c3
1cfd : a8                       tay
1cfe : 28                       plp
1cff : 8410                     sty zpt+1
1d01 : 08                       php         ;flags after load/store sequence
1d02 : 49c3                     eor #$c3
1d04 : a8                       tay
1d05 : c40b                     cpy zp1+1   ;test result
1d07 : d0fe                     bne *       ;trap
1d09 : 68                       pla         ;load status
                                eor_flag 0
1d0a : 4934            >            eor #(0|$34)
                        
1d0c : cd0602                   cmp fLDx+1  ;test flags
1d0f : d0fe                     bne *       ;trap
                                set_stat 0
                       >            load_flag 0
1d11 : a904            >            lda #0|4
                       >
1d13 : 48              >            pha         ;use stack to load status
1d14 : 28              >            plp
                        
1d15 : ac0202                   ldy abs1+2
1d18 : 08                       php         ;test stores do not alter flags
1d19 : 98                       tya
1d1a : 49c3                     eor #$c3
1d1c : a8                       tay
1d1d : 28                       plp
1d1e : 8411                     sty zpt+2
1d20 : 08                       php         ;flags after load/store sequence
1d21 : 49c3                     eor #$c3
1d23 : a8                       tay
1d24 : c40c                     cpy zp1+2   ;test result
1d26 : d0fe                     bne *       ;trap
1d28 : 68                       pla         ;load status
                                eor_flag 0
1d29 : 4934            >            eor #(0|$34)
                        
1d2b : cd0702                   cmp fLDx+2  ;test flags
1d2e : d0fe                     bne *       ;trap
                                set_stat 0
AS65 Assembler for R6502 [1.42].                                     Page   57
--------------------------------- verify.asm ---------------------------------

                       >            load_flag 0
1d30 : a904            >            lda #0|4
                       >
1d32 : 48              >            pha         ;use stack to load status
1d33 : 28              >            plp
                        
1d34 : ac0302                   ldy abs1+3
1d37 : 08                       php         ;test stores do not alter flags
1d38 : 98                       tya
1d39 : 49c3                     eor #$c3
1d3b : a8                       tay
1d3c : 28                       plp
1d3d : 8412                     sty zpt+3
1d3f : 08                       php         ;flags after load/store sequence
1d40 : 49c3                     eor #$c3
1d42 : a8                       tay
1d43 : c40d                     cpy zp1+3   ;test result
1d45 : d0fe                     bne *       ;trap
1d47 : 68                       pla         ;load status
                                eor_flag 0
1d48 : 4934            >            eor #(0|$34)
                        
1d4a : cd0802                   cmp fLDx+3  ;test flags
1d4d : d0fe                     bne *       ;trap
                        
                                set_stat $ff
                       >            load_flag $ff
1d4f : a9ff            >            lda #$ff|4
                       >
1d51 : 48              >            pha         ;use stack to load status
1d52 : 28              >            plp
                        
1d53 : ac0002                   ldy abs1
1d56 : 08                       php         ;test stores do not alter flags
1d57 : 98                       tya
1d58 : 49c3                     eor #$c3
1d5a : a8                       tay
1d5b : 28                       plp
1d5c : 840f                     sty zpt
1d5e : 08                       php         ;flags after load/store sequence
1d5f : 49c3                     eor #$c3
1d61 : a8                       tay
1d62 : c50a                     cmp zp1     ;test result
1d64 : d0fe                     bne *       ;trap
1d66 : 68                       pla         ;load status
                                eor_flag lo~fnz ;mask bits not altered
1d67 : 497d            >            eor #(lo~fnz |$34)
                        
1d69 : cd0502                   cmp fLDx    ;test flags
1d6c : d0fe                     bne *       ;trap
                                set_stat $ff
                       >            load_flag $ff
1d6e : a9ff            >            lda #$ff|4
                       >
1d70 : 48              >            pha         ;use stack to load status
1d71 : 28              >            plp
                        
1d72 : ac0102                   ldy abs1+1
1d75 : 08                       php         ;test stores do not alter flags
1d76 : 98                       tya
1d77 : 49c3                     eor #$c3
1d79 : a8                       tay
AS65 Assembler for R6502 [1.42].                                     Page   58
--------------------------------- verify.asm ---------------------------------

1d7a : 28                       plp
1d7b : 8410                     sty zpt+1
1d7d : 08                       php         ;flags after load/store sequence
1d7e : 49c3                     eor #$c3
1d80 : a8                       tay
1d81 : c50b                     cmp zp1+1   ;test result
1d83 : d0fe                     bne *       ;trap
1d85 : 68                       pla         ;load status
                                eor_flag lo~fnz ;mask bits not altered
1d86 : 497d            >            eor #(lo~fnz |$34)
                        
1d88 : cd0602                   cmp fLDx+1  ;test flags
1d8b : d0fe                     bne *       ;trap
                                set_stat $ff
                       >            load_flag $ff
1d8d : a9ff            >            lda #$ff|4
                       >
1d8f : 48              >            pha         ;use stack to load status
1d90 : 28              >            plp
                        
1d91 : ac0202                   ldy abs1+2
1d94 : 08                       php         ;test stores do not alter flags
1d95 : 98                       tya
1d96 : 49c3                     eor #$c3
1d98 : a8                       tay
1d99 : 28                       plp
1d9a : 8411                     sty zpt+2
1d9c : 08                       php         ;flags after load/store sequence
1d9d : 49c3                     eor #$c3
1d9f : a8                       tay
1da0 : c50c                     cmp zp1+2   ;test result
1da2 : d0fe                     bne *       ;trap
1da4 : 68                       pla         ;load status
                                eor_flag lo~fnz ;mask bits not altered
1da5 : 497d            >            eor #(lo~fnz |$34)
                        
1da7 : cd0702                   cmp fLDx+2  ;test flags
1daa : d0fe                     bne *       ;trap
                                set_stat $ff
                       >            load_flag $ff
1dac : a9ff            >            lda #$ff|4
                       >
1dae : 48              >            pha         ;use stack to load status
1daf : 28              >            plp
                        
1db0 : ac0302                   ldy abs1+3
1db3 : 08                       php         ;test stores do not alter flags
1db4 : 98                       tya
1db5 : 49c3                     eor #$c3
1db7 : a8                       tay
1db8 : 28                       plp
1db9 : 8412                     sty zpt+3
1dbb : 08                       php         ;flags after load/store sequence
1dbc : 49c3                     eor #$c3
1dbe : a8                       tay
1dbf : c50d                     cmp zp1+3   ;test result
1dc1 : d0fe                     bne *       ;trap
1dc3 : 68                       pla         ;load status
                                eor_flag lo~fnz ;mask bits not altered
1dc4 : 497d            >            eor #(lo~fnz |$34)
                        
1dc6 : cd0802                   cmp fLDx+3  ;test flags
AS65 Assembler for R6502 [1.42].                                     Page   59
--------------------------------- verify.asm ---------------------------------

1dc9 : d0fe                     bne *       ;trap
                        
                        
                                set_stat 0
                       >            load_flag 0
1dcb : a904            >            lda #0|4
                       >
1dcd : 48              >            pha         ;use stack to load status
1dce : 28              >            plp
                        
1dcf : a0c3                     ldy #$c3
1dd1 : 08                       php
1dd2 : cc0002                   cpy abs1    ;test result
1dd5 : d0fe                     bne *       ;trap
1dd7 : 68                       pla         ;load status
                                eor_flag 0    ;always on bits
1dd8 : 4934            >            eor #(0    |$34)
                        
1dda : cd0502                   cmp fLDx    ;test flags
1ddd : d0fe                     bne *       ;trap
                                set_stat 0
                       >            load_flag 0
1ddf : a904            >            lda #0|4
                       >
1de1 : 48              >            pha         ;use stack to load status
1de2 : 28              >            plp
                        
1de3 : a082                     ldy #$82
1de5 : 08                       php
1de6 : cc0102                   cpy abs1+1  ;test result
1de9 : d0fe                     bne *       ;trap
1deb : 68                       pla         ;load status
                                eor_flag 0
1dec : 4934            >            eor #(0|$34)
                        
1dee : cd0602                   cmp fLDx+1  ;test flags
1df1 : d0fe                     bne *       ;trap
                                set_stat 0
                       >            load_flag 0
1df3 : a904            >            lda #0|4
                       >
1df5 : 48              >            pha         ;use stack to load status
1df6 : 28              >            plp
                        
1df7 : a041                     ldy #$41
1df9 : 08                       php
1dfa : cc0202                   cpy abs1+2  ;test result
1dfd : d0fe                     bne *       ;trap
1dff : 68                       pla         ;load status
                                eor_flag 0
1e00 : 4934            >            eor #(0|$34)
                        
1e02 : cd0702                   cmp fLDx+2  ;test flags
1e05 : d0fe                     bne *       ;trap
                                set_stat 0
                       >            load_flag 0
1e07 : a904            >            lda #0|4
                       >
1e09 : 48              >            pha         ;use stack to load status
1e0a : 28              >            plp
                        
1e0b : a000                     ldy #0
AS65 Assembler for R6502 [1.42].                                     Page   60
--------------------------------- verify.asm ---------------------------------

1e0d : 08                       php
1e0e : cc0302                   cpy abs1+3  ;test result
1e11 : d0fe                     bne *       ;trap
1e13 : 68                       pla         ;load status
                                eor_flag 0
1e14 : 4934            >            eor #(0|$34)
                        
1e16 : cd0802                   cmp fLDx+3  ;test flags
1e19 : d0fe                     bne *       ;trap
                        
                                set_stat $ff
                       >            load_flag $ff
1e1b : a9ff            >            lda #$ff|4
                       >
1e1d : 48              >            pha         ;use stack to load status
1e1e : 28              >            plp
                        
1e1f : a0c3                     ldy #$c3
1e21 : 08                       php
1e22 : cc0002                   cpy abs1     ;test result
1e25 : d0fe                     bne *       ;trap
1e27 : 68                       pla         ;load status
                                eor_flag lo~fnz ;mask bits not altered
1e28 : 497d            >            eor #(lo~fnz |$34)
                        
1e2a : cd0502                   cmp fLDx    ;test flags
1e2d : d0fe                     bne *       ;trap
                                set_stat $ff
                       >            load_flag $ff
1e2f : a9ff            >            lda #$ff|4
                       >
1e31 : 48              >            pha         ;use stack to load status
1e32 : 28              >            plp
                        
1e33 : a082                     ldy #$82
1e35 : 08                       php
1e36 : cc0102                   cpy abs1+1   ;test result
1e39 : d0fe                     bne *       ;trap
1e3b : 68                       pla         ;load status
                                eor_flag lo~fnz ;mask bits not altered
1e3c : 497d            >            eor #(lo~fnz |$34)
                        
1e3e : cd0602                   cmp fLDx+1  ;test flags
1e41 : d0fe                     bne *       ;trap
                                set_stat $ff
                       >            load_flag $ff
1e43 : a9ff            >            lda #$ff|4
                       >
1e45 : 48              >            pha         ;use stack to load status
1e46 : 28              >            plp
                        
1e47 : a041                     ldy #$41
1e49 : 08                       php
1e4a : cc0202                   cpy abs1+2   ;test result
1e4d : d0fe                     bne *       ;trap
1e4f : 68                       pla         ;load status
                                eor_flag lo~fnz ;mask bits not altered
1e50 : 497d            >            eor #(lo~fnz |$34)
                        
1e52 : cd0702                   cmp fLDx+2  ;test flags
1e55 : d0fe                     bne *       ;trap
                                set_stat $ff
AS65 Assembler for R6502 [1.42].                                     Page   61
--------------------------------- verify.asm ---------------------------------

                       >            load_flag $ff
1e57 : a9ff            >            lda #$ff|4
                       >
1e59 : 48              >            pha         ;use stack to load status
1e5a : 28              >            plp
                        
1e5b : a000                     ldy #0
1e5d : 08                       php
1e5e : cc0302                   cpy abs1+3   ;test result
1e61 : d0fe                     bne *       ;trap
1e63 : 68                       pla         ;load status
                                eor_flag lo~fnz ;mask bits not altered
1e64 : 497d            >            eor #(lo~fnz |$34)
                        
1e66 : cd0802                   cmp fLDx+3  ;test flags
1e69 : d0fe                     bne *       ;trap
                        
1e6b : a000                     ldy #0
1e6d : a50f                     lda zpt
1e6f : 49c3                     eor #$c3
1e71 : c50a                     cmp zp1
1e73 : d0fe                     bne *       ;trap: store to zp   data
1e75 : 840f                     sty zpt     ;clear
1e77 : ad3302                   lda abst
1e7a : 49c3                     eor #$c3
1e7c : cd0002                   cmp abs1
1e7f : d0fe                     bne *       ;trap: store to abs   data
1e81 : 8c3302                   sty abst    ;clear
1e84 : a510                     lda zpt+1
1e86 : 49c3                     eor #$c3
1e88 : c50b                     cmp zp1+1
1e8a : d0fe                     bne *       ;trap: store to zp+1 data
1e8c : 8410                     sty zpt+1   ;clear
1e8e : ad3402                   lda abst+1
1e91 : 49c3                     eor #$c3
1e93 : cd0102                   cmp abs1+1
1e96 : d0fe                     bne *       ;trap: store to abs+1 data
1e98 : 8c3402                   sty abst+1  ;clear
1e9b : a511                     lda zpt+2
1e9d : 49c3                     eor #$c3
1e9f : c50c                     cmp zp1+2
1ea1 : d0fe                     bne *       ;trap: store to zp+2 data
1ea3 : 8411                     sty zpt+2   ;clear
1ea5 : ad3502                   lda abst+2
1ea8 : 49c3                     eor #$c3
1eaa : cd0202                   cmp abs1+2
1ead : d0fe                     bne *       ;trap: store to abs+2 data
1eaf : 8c3502                   sty abst+2  ;clear
1eb2 : a512                     lda zpt+3
1eb4 : 49c3                     eor #$c3
1eb6 : c50d                     cmp zp1+3
1eb8 : d0fe                     bne *       ;trap: store to zp+3 data
1eba : 8412                     sty zpt+3   ;clear
1ebc : ad3602                   lda abst+3
1ebf : 49c3                     eor #$c3
1ec1 : cd0302                   cmp abs1+3
1ec4 : d0fe                     bne *       ;trap: store to abs+3 data
1ec6 : 8c3602                   sty abst+3  ;clear
                        
                        ; testing load / store accumulator LDA / STA all addre
                        ; LDA / STA - zp,x / abs,x
1ec9 : a203                     ldx #3
AS65 Assembler for R6502 [1.42].                                     Page   62
--------------------------------- verify.asm ---------------------------------

1ecb :                  tldax
                                set_stat 0
                       >            load_flag 0
1ecb : a904            >            lda #0|4
                       >
1ecd : 48              >            pha         ;use stack to load status
1ece : 28              >            plp
                        
1ecf : b50a                     lda zp1,x
1ed1 : 08                       php         ;test stores do not alter flags
1ed2 : 49c3                     eor #$c3
1ed4 : 28                       plp
1ed5 : 9d3302                   sta abst,x
1ed8 : 08                       php         ;flags after load/store sequence
1ed9 : 49c3                     eor #$c3
1edb : dd0002                   cmp abs1,x  ;test result
1ede : d0fe                     bne *       ;trap
1ee0 : 68                       pla         ;load status
                                eor_flag 0
1ee1 : 4934            >            eor #(0|$34)
                        
1ee3 : dd0502                   cmp fLDx,x  ;test flags
1ee6 : d0fe                     bne *       ;trap
1ee8 : ca                       dex
1ee9 : 10e0                     bpl tldax
                        
1eeb : a203                     ldx #3
1eed :                  tldax1
                                set_stat $ff
                       >            load_flag $ff
1eed : a9ff            >            lda #$ff|4
                       >
1eef : 48              >            pha         ;use stack to load status
1ef0 : 28              >            plp
                        
1ef1 : b50a                     lda zp1,x
1ef3 : 08                       php         ;test stores do not alter flags
1ef4 : 49c3                     eor #$c3
1ef6 : 28                       plp
1ef7 : 9d3302                   sta abst,x
1efa : 08                       php         ;flags after load/store sequence
1efb : 49c3                     eor #$c3
1efd : dd0002                   cmp abs1,x   ;test result
1f00 : d0fe                     bne *       ;trap
1f02 : 68                       pla         ;load status
                                eor_flag lo~fnz ;mask bits not altered
1f03 : 497d            >            eor #(lo~fnz |$34)
                        
1f05 : dd0502                   cmp fLDx,x  ;test flags
1f08 : d0fe                     bne *       ;trap
1f0a : ca                       dex
1f0b : 10e0                     bpl tldax1
                        
1f0d : a203                     ldx #3
1f0f :                  tldax2
                                set_stat 0
                       >            load_flag 0
1f0f : a904            >            lda #0|4
                       >
1f11 : 48              >            pha         ;use stack to load status
1f12 : 28              >            plp
                        
AS65 Assembler for R6502 [1.42].                                     Page   63
--------------------------------- verify.asm ---------------------------------

1f13 : bd0002                   lda abs1,x
1f16 : 08                       php         ;test stores do not alter flags
1f17 : 49c3                     eor #$c3
1f19 : 28                       plp
1f1a : 950f                     sta zpt,x
1f1c : 08                       php         ;flags after load/store sequence
1f1d : 49c3                     eor #$c3
1f1f : d50a                     cmp zp1,x   ;test result
1f21 : d0fe                     bne *       ;trap
1f23 : 68                       pla         ;load status
                                eor_flag 0
1f24 : 4934            >            eor #(0|$34)
                        
1f26 : dd0502                   cmp fLDx,x  ;test flags
1f29 : d0fe                     bne *       ;trap
1f2b : ca                       dex
1f2c : 10e1                     bpl tldax2
                        
1f2e : a203                     ldx #3
1f30 :                  tldax3
                                set_stat $ff
                       >            load_flag $ff
1f30 : a9ff            >            lda #$ff|4
                       >
1f32 : 48              >            pha         ;use stack to load status
1f33 : 28              >            plp
                        
1f34 : bd0002                   lda abs1,x
1f37 : 08                       php         ;test stores do not alter flags
1f38 : 49c3                     eor #$c3
1f3a : 28                       plp
1f3b : 950f                     sta zpt,x
1f3d : 08                       php         ;flags after load/store sequence
1f3e : 49c3                     eor #$c3
1f40 : d50a                     cmp zp1,x   ;test result
1f42 : d0fe                     bne *       ;trap
1f44 : 68                       pla         ;load status
                                eor_flag lo~fnz ;mask bits not altered
1f45 : 497d            >            eor #(lo~fnz |$34)
                        
1f47 : dd0502                   cmp fLDx,x  ;test flags
1f4a : d0fe                     bne *       ;trap
1f4c : ca                       dex
1f4d : 10e1                     bpl tldax3
                        
1f4f : a203                     ldx #3      ;testing store result
1f51 : a000                     ldy #0
1f53 : b50f             tstax   lda zpt,x
1f55 : 49c3                     eor #$c3
1f57 : d50a                     cmp zp1,x
1f59 : d0fe                     bne *       ;trap: store to zp,x data
1f5b : 940f                     sty zpt,x   ;clear
1f5d : bd3302                   lda abst,x
1f60 : 49c3                     eor #$c3
1f62 : dd0002                   cmp abs1,x
1f65 : d0fe                     bne *       ;trap: store to abs,x data
1f67 : 8a                       txa
1f68 : 9d3302                   sta abst,x  ;clear
1f6b : ca                       dex
1f6c : 10e5                     bpl tstax
                        
                        ; LDA / STA - (zp),y / abs,y / (zp,x)
AS65 Assembler for R6502 [1.42].                                     Page   64
--------------------------------- verify.asm ---------------------------------

1f6e : a003                     ldy #3
1f70 :                  tlday
                                set_stat 0
                       >            load_flag 0
1f70 : a904            >            lda #0|4
                       >
1f72 : 48              >            pha         ;use stack to load status
1f73 : 28              >            plp
                        
1f74 : b120                     lda (ind1),y
1f76 : 08                       php         ;test stores do not alter flags
1f77 : 49c3                     eor #$c3
1f79 : 28                       plp
1f7a : 993302                   sta abst,y
1f7d : 08                       php         ;flags after load/store sequence
1f7e : 49c3                     eor #$c3
1f80 : d90002                   cmp abs1,y  ;test result
1f83 : d0fe                     bne *       ;trap
1f85 : 68                       pla         ;load status
                                eor_flag 0
1f86 : 4934            >            eor #(0|$34)
                        
1f88 : d90502                   cmp fLDx,y  ;test flags
1f8b : d0fe                     bne *       ;trap
1f8d : 88                       dey
1f8e : 10e0                     bpl tlday
                        
1f90 : a003                     ldy #3
1f92 :                  tlday1
                                set_stat $ff
                       >            load_flag $ff
1f92 : a9ff            >            lda #$ff|4
                       >
1f94 : 48              >            pha         ;use stack to load status
1f95 : 28              >            plp
                        
1f96 : b120                     lda (ind1),y
1f98 : 08                       php         ;test stores do not alter flags
1f99 : 49c3                     eor #$c3
1f9b : 28                       plp
1f9c : 993302                   sta abst,y
1f9f : 08                       php         ;flags after load/store sequence
1fa0 : 49c3                     eor #$c3
1fa2 : d90002                   cmp abs1,y  ;test result
1fa5 : d0fe                     bne *       ;trap
1fa7 : 68                       pla         ;load status
                                eor_flag lo~fnz ;mask bits not altered
1fa8 : 497d            >            eor #(lo~fnz |$34)
                        
1faa : d90502                   cmp fLDx,y  ;test flags
1fad : d0fe                     bne *       ;trap
1faf : 88                       dey
1fb0 : 10e0                     bpl tlday1
                        
1fb2 : a003                     ldy #3      ;testing store result
1fb4 : a200                     ldx #0
1fb6 : b93302           tstay   lda abst,y
1fb9 : 49c3                     eor #$c3
1fbb : d90002                   cmp abs1,y
1fbe : d0fe                     bne *       ;trap: store to abs data
1fc0 : 8a                       txa
1fc1 : 993302                   sta abst,y  ;clear
AS65 Assembler for R6502 [1.42].                                     Page   65
--------------------------------- verify.asm ---------------------------------

1fc4 : 88                       dey
1fc5 : 10ef                     bpl tstay
                        
1fc7 : a003                     ldy #3
1fc9 :                  tlday2
                                set_stat 0
                       >            load_flag 0
1fc9 : a904            >            lda #0|4
                       >
1fcb : 48              >            pha         ;use stack to load status
1fcc : 28              >            plp
                        
1fcd : b90002                   lda abs1,y
1fd0 : 08                       php         ;test stores do not alter flags
1fd1 : 49c3                     eor #$c3
1fd3 : 28                       plp
1fd4 : 912c                     sta (indt),y
1fd6 : 08                       php         ;flags after load/store sequence
1fd7 : 49c3                     eor #$c3
1fd9 : d120                     cmp (ind1),y   ;test result
1fdb : d0fe                     bne *       ;trap
1fdd : 68                       pla         ;load status
                                eor_flag $30    ;always on bits
1fde : 4934            >            eor #($30    |$34)
                        
1fe0 : d90502                   cmp fLDx,y  ;test flags
1fe3 : d0fe                     bne *       ;trap
1fe5 : 88                       dey
1fe6 : 10e1                     bpl tlday2
                        
1fe8 : a003                     ldy #3
1fea :                  tlday3
                                set_stat $ff
                       >            load_flag $ff
1fea : a9ff            >            lda #$ff|4
                       >
1fec : 48              >            pha         ;use stack to load status
1fed : 28              >            plp
                        
1fee : b90002                   lda abs1,y
1ff1 : 08                       php         ;test stores do not alter flags
1ff2 : 49c3                     eor #$c3
1ff4 : 28                       plp
1ff5 : 912c                     sta (indt),y
1ff7 : 08                       php         ;flags after load/store sequence
1ff8 : 49c3                     eor #$c3
1ffa : d120                     cmp (ind1),y   ;test result
1ffc : d0fe                     bne *       ;trap
1ffe : 68                       pla         ;load status
                                eor_flag lo~fnz ;mask bits not altered
1fff : 497d            >            eor #(lo~fnz |$34)
                        
2001 : d90502                   cmp fLDx,y  ;test flags
2004 : d0fe                     bne *       ;trap
2006 : 88                       dey
2007 : 10e1                     bpl tlday3
                        
2009 : a003                     ldy #3      ;testing store result
200b : a200                     ldx #0
200d : b93302           tstay1  lda abst,y
2010 : 49c3                     eor #$c3
2012 : d90002                   cmp abs1,y
AS65 Assembler for R6502 [1.42].                                     Page   66
--------------------------------- verify.asm ---------------------------------

2015 : d0fe                     bne *       ;trap: store to abs data
2017 : 8a                       txa
2018 : 993302                   sta abst,y  ;clear
201b : 88                       dey
201c : 10ef                     bpl tstay1
                        
201e : a206                     ldx #6
2020 : a003                     ldy #3
2022 :                  tldax4
                                set_stat 0
                       >            load_flag 0
2022 : a904            >            lda #0|4
                       >
2024 : 48              >            pha         ;use stack to load status
2025 : 28              >            plp
                        
2026 : a120                     lda (ind1,x)
2028 : 08                       php         ;test stores do not alter flags
2029 : 49c3                     eor #$c3
202b : 28                       plp
202c : 812c                     sta (indt,x)
202e : 08                       php         ;flags after load/store sequence
202f : 49c3                     eor #$c3
2031 : d90002                   cmp abs1,y  ;test result
2034 : d0fe                     bne *       ;trap
2036 : 68                       pla         ;load status
                                eor_flag 0    ;always on bits
2037 : 4934            >            eor #(0    |$34)
                        
2039 : d90502                   cmp fLDx,y  ;test flags
203c : d0fe                     bne *       ;trap
203e : ca                       dex
203f : ca                       dex
2040 : 88                       dey
2041 : 10df                     bpl tldax4
                        
2043 : a206                     ldx #6
2045 : a003                     ldy #3
2047 :                  tldax5
                                set_stat $ff
                       >            load_flag $ff
2047 : a9ff            >            lda #$ff|4
                       >
2049 : 48              >            pha         ;use stack to load status
204a : 28              >            plp
                        
204b : a120                     lda (ind1,x)
204d : 08                       php         ;test stores do not alter flags
204e : 49c3                     eor #$c3
2050 : 28                       plp
2051 : 812c                     sta (indt,x)
2053 : 08                       php         ;flags after load/store sequence
2054 : 49c3                     eor #$c3
2056 : d90002                   cmp abs1,y  ;test result
2059 : d0fe                     bne *       ;trap
205b : 68                       pla         ;load status
                                eor_flag lo~fnz ;mask bits not altered
205c : 497d            >            eor #(lo~fnz |$34)
                        
205e : d90502                   cmp fLDx,y  ;test flags
2061 : d0fe                     bne *       ;trap
2063 : ca                       dex
AS65 Assembler for R6502 [1.42].                                     Page   67
--------------------------------- verify.asm ---------------------------------

2064 : ca                       dex
2065 : 88                       dey
2066 : 10df                     bpl tldax5
                        
2068 : a003                     ldy #3      ;testing store result
206a : a200                     ldx #0
206c : b93302           tstay2  lda abst,y
206f : 49c3                     eor #$c3
2071 : d90002                   cmp abs1,y
2074 : d0fe                     bne *       ;trap: store to abs data
2076 : 8a                       txa
2077 : 993302                   sta abst,y  ;clear
207a : 88                       dey
207b : 10ef                     bpl tstay2
                        
                        ; indexed wraparound test (only zp should wrap)
207d : a2fd                     ldx #3+$fa
207f : b510             tldax6  lda zp1-$fa&$ff,x   ;wrap on indexed zp
2081 : 9d3901                   sta abst-$fa,x      ;no STX abs,x!
2084 : ca                       dex
2085 : e0fa                     cpx #$fa
2087 : b0f6                     bcs tldax6
2089 : a2fd                     ldx #3+$fa
208b : bd0601           tldax7  lda abs1-$fa,x      ;no wrap on indexed abs
208e : 9515                     sta zpt-$fa&$ff,x
2090 : ca                       dex
2091 : e0fa                     cpx #$fa
2093 : b0f6                     bcs tldax7
                        
2095 : a203                     ldx #3      ;testing wraparound result
2097 : a000                     ldy #0
2099 : b50f             tstax1  lda zpt,x
209b : d50a                     cmp zp1,x
209d : d0fe                     bne *       ;trap: store to zp,x data
209f : 940f                     sty zpt,x   ;clear
20a1 : bd3302                   lda abst,x
20a4 : dd0002                   cmp abs1,x
20a7 : d0fe                     bne *       ;trap: store to abs,x data
20a9 : 8a                       txa
20aa : 9d3302                   sta abst,x  ;clear
20ad : ca                       dex
20ae : 10e9                     bpl tstax1
                        
20b0 : a0fb                     ldy #3+$f8
20b2 : a2fe                     ldx #6+$f8
20b4 : a128             tlday4  lda (ind1-$f8&$ff,x) ;wrap on indexed zp indir
20b6 : 993b01                   sta abst-$f8,y
20b9 : ca                       dex
20ba : ca                       dex
20bb : 88                       dey
20bc : c0f8                     cpy #$f8
20be : b0f4                     bcs tlday4
20c0 : a003                     ldy #3      ;testing wraparound result
20c2 : a200                     ldx #0
20c4 : b93302           tstay4  lda abst,y
20c7 : d90002                   cmp abs1,y
20ca : d0fe                     bne *       ;trap: store to abs data
20cc : 8a                       txa
20cd : 993302                   sta abst,y  ;clear
20d0 : 88                       dey
20d1 : 10f1                     bpl tstay4
                        
AS65 Assembler for R6502 [1.42].                                     Page   68
--------------------------------- verify.asm ---------------------------------

20d3 : a0fb                     ldy #3+$f8
20d5 : b90801           tlday5  lda abs1-$f8,y  ;no wrap on indexed abs
20d8 : 9134                     sta (inwt),y
20da : 88                       dey
20db : c0f8                     cpy #$f8
20dd : b0f6                     bcs tlday5
20df : a003                     ldy #3      ;testing wraparound result
20e1 : a200                     ldx #0
20e3 : b93302           tstay5  lda abst,y
20e6 : d90002                   cmp abs1,y
20e9 : d0fe                     bne *       ;trap: store to abs data
20eb : 8a                       txa
20ec : 993302                   sta abst,y  ;clear
20ef : 88                       dey
20f0 : 10f1                     bpl tstay5
                        
20f2 : a0fb                     ldy #3+$f8
20f4 : a2fe                     ldx #6+$f8
20f6 : b12a             tlday6  lda (inw1),y    ;no wrap on zp indirect indexe
20f8 : 8134                     sta (indt-$f8&$ff,x)
20fa : ca                       dex
20fb : ca                       dex
20fc : 88                       dey
20fd : c0f8                     cpy #$f8
20ff : b0f5                     bcs tlday6
2101 : a003                     ldy #3      ;testing wraparound result
2103 : a200                     ldx #0
2105 : b93302           tstay6  lda abst,y
2108 : d90002                   cmp abs1,y
210b : d0fe                     bne *       ;trap: store to abs data
210d : 8a                       txa
210e : 993302                   sta abst,y  ;clear
2111 : 88                       dey
2112 : 10f1                     bpl tstay6
                        
                        ; LDA / STA - zp / abs / #
                                set_stat 0
                       >            load_flag 0
2114 : a904            >            lda #0|4
                       >
2116 : 48              >            pha         ;use stack to load status
2117 : 28              >            plp
                        
2118 : a50a                     lda zp1
211a : 08                       php         ;test stores do not alter flags
211b : 49c3                     eor #$c3
211d : 28                       plp
211e : 8d3302                   sta abst
2121 : 08                       php         ;flags after load/store sequence
2122 : 49c3                     eor #$c3
2124 : c9c3                     cmp #$c3    ;test result
2126 : d0fe                     bne *       ;trap
2128 : 68                       pla         ;load status
                                eor_flag 0
2129 : 4934            >            eor #(0|$34)
                        
212b : cd0502                   cmp fLDx    ;test flags
212e : d0fe                     bne *       ;trap
                                set_stat 0
                       >            load_flag 0
2130 : a904            >            lda #0|4
                       >
AS65 Assembler for R6502 [1.42].                                     Page   69
--------------------------------- verify.asm ---------------------------------

2132 : 48              >            pha         ;use stack to load status
2133 : 28              >            plp
                        
2134 : a50b                     lda zp1+1
2136 : 08                       php         ;test stores do not alter flags
2137 : 49c3                     eor #$c3
2139 : 28                       plp
213a : 8d3402                   sta abst+1
213d : 08                       php         ;flags after load/store sequence
213e : 49c3                     eor #$c3
2140 : c982                     cmp #$82    ;test result
2142 : d0fe                     bne *       ;trap
2144 : 68                       pla         ;load status
                                eor_flag 0
2145 : 4934            >            eor #(0|$34)
                        
2147 : cd0602                   cmp fLDx+1  ;test flags
214a : d0fe                     bne *       ;trap
                                set_stat 0
                       >            load_flag 0
214c : a904            >            lda #0|4
                       >
214e : 48              >            pha         ;use stack to load status
214f : 28              >            plp
                        
2150 : a50c                     lda zp1+2
2152 : 08                       php         ;test stores do not alter flags
2153 : 49c3                     eor #$c3
2155 : 28                       plp
2156 : 8d3502                   sta abst+2
2159 : 08                       php         ;flags after load/store sequence
215a : 49c3                     eor #$c3
215c : c941                     cmp #$41    ;test result
215e : d0fe                     bne *       ;trap
2160 : 68                       pla         ;load status
                                eor_flag 0
2161 : 4934            >            eor #(0|$34)
                        
2163 : cd0702                   cmp fLDx+2  ;test flags
2166 : d0fe                     bne *       ;trap
                                set_stat 0
                       >            load_flag 0
2168 : a904            >            lda #0|4
                       >
216a : 48              >            pha         ;use stack to load status
216b : 28              >            plp
                        
216c : a50d                     lda zp1+3
216e : 08                       php         ;test stores do not alter flags
216f : 49c3                     eor #$c3
2171 : 28                       plp
2172 : 8d3602                   sta abst+3
2175 : 08                       php         ;flags after load/store sequence
2176 : 49c3                     eor #$c3
2178 : c900                     cmp #0      ;test result
217a : d0fe                     bne *       ;trap
217c : 68                       pla         ;load status
                                eor_flag 0
217d : 4934            >            eor #(0|$34)
                        
217f : cd0802                   cmp fLDx+3  ;test flags
2182 : d0fe                     bne *       ;trap
AS65 Assembler for R6502 [1.42].                                     Page   70
--------------------------------- verify.asm ---------------------------------

                                set_stat $ff
                       >            load_flag $ff
2184 : a9ff            >            lda #$ff|4
                       >
2186 : 48              >            pha         ;use stack to load status
2187 : 28              >            plp
                        
2188 : a50a                     lda zp1
218a : 08                       php         ;test stores do not alter flags
218b : 49c3                     eor #$c3
218d : 28                       plp
218e : 8d3302                   sta abst
2191 : 08                       php         ;flags after load/store sequence
2192 : 49c3                     eor #$c3
2194 : c9c3                     cmp #$c3    ;test result
2196 : d0fe                     bne *       ;trap
2198 : 68                       pla         ;load status
                                eor_flag lo~fnz ;mask bits not altered
2199 : 497d            >            eor #(lo~fnz |$34)
                        
219b : cd0502                   cmp fLDx    ;test flags
219e : d0fe                     bne *       ;trap
                                set_stat $ff
                       >            load_flag $ff
21a0 : a9ff            >            lda #$ff|4
                       >
21a2 : 48              >            pha         ;use stack to load status
21a3 : 28              >            plp
                        
21a4 : a50b                     lda zp1+1
21a6 : 08                       php         ;test stores do not alter flags
21a7 : 49c3                     eor #$c3
21a9 : 28                       plp
21aa : 8d3402                   sta abst+1
21ad : 08                       php         ;flags after load/store sequence
21ae : 49c3                     eor #$c3
21b0 : c982                     cmp #$82    ;test result
21b2 : d0fe                     bne *       ;trap
21b4 : 68                       pla         ;load status
                                eor_flag lo~fnz ;mask bits not altered
21b5 : 497d            >            eor #(lo~fnz |$34)
                        
21b7 : cd0602                   cmp fLDx+1  ;test flags
21ba : d0fe                     bne *       ;trap
                                set_stat $ff
                       >            load_flag $ff
21bc : a9ff            >            lda #$ff|4
                       >
21be : 48              >            pha         ;use stack to load status
21bf : 28              >            plp
                        
21c0 : a50c                     lda zp1+2
21c2 : 08                       php         ;test stores do not alter flags
21c3 : 49c3                     eor #$c3
21c5 : 28                       plp
21c6 : 8d3502                   sta abst+2
21c9 : 08                       php         ;flags after load/store sequence
21ca : 49c3                     eor #$c3
21cc : c941                     cmp #$41    ;test result
21ce : d0fe                     bne *       ;trap
21d0 : 68                       pla         ;load status
                                eor_flag lo~fnz ;mask bits not altered
AS65 Assembler for R6502 [1.42].                                     Page   71
--------------------------------- verify.asm ---------------------------------

21d1 : 497d            >            eor #(lo~fnz |$34)
                        
21d3 : cd0702                   cmp fLDx+2  ;test flags
21d6 : d0fe                     bne *       ;trap
                                set_stat $ff
                       >            load_flag $ff
21d8 : a9ff            >            lda #$ff|4
                       >
21da : 48              >            pha         ;use stack to load status
21db : 28              >            plp
                        
21dc : a50d                     lda zp1+3
21de : 08                       php         ;test stores do not alter flags
21df : 49c3                     eor #$c3
21e1 : 28                       plp
21e2 : 8d3602                   sta abst+3
21e5 : 08                       php         ;flags after load/store sequence
21e6 : 49c3                     eor #$c3
21e8 : c900                     cmp #0      ;test result
21ea : d0fe                     bne *       ;trap
21ec : 68                       pla         ;load status
                                eor_flag lo~fnz ;mask bits not altered
21ed : 497d            >            eor #(lo~fnz |$34)
                        
21ef : cd0802                   cmp fLDx+3  ;test flags
21f2 : d0fe                     bne *       ;trap
                                set_stat 0
                       >            load_flag 0
21f4 : a904            >            lda #0|4
                       >
21f6 : 48              >            pha         ;use stack to load status
21f7 : 28              >            plp
                        
21f8 : ad0002                   lda abs1
21fb : 08                       php         ;test stores do not alter flags
21fc : 49c3                     eor #$c3
21fe : 28                       plp
21ff : 850f                     sta zpt
2201 : 08                       php         ;flags after load/store sequence
2202 : 49c3                     eor #$c3
2204 : c50a                     cmp zp1     ;test result
2206 : d0fe                     bne *       ;trap
2208 : 68                       pla         ;load status
                                eor_flag 0
2209 : 4934            >            eor #(0|$34)
                        
220b : cd0502                   cmp fLDx    ;test flags
220e : d0fe                     bne *       ;trap
                                set_stat 0
                       >            load_flag 0
2210 : a904            >            lda #0|4
                       >
2212 : 48              >            pha         ;use stack to load status
2213 : 28              >            plp
                        
2214 : ad0102                   lda abs1+1
2217 : 08                       php         ;test stores do not alter flags
2218 : 49c3                     eor #$c3
221a : 28                       plp
221b : 8510                     sta zpt+1
221d : 08                       php         ;flags after load/store sequence
221e : 49c3                     eor #$c3
AS65 Assembler for R6502 [1.42].                                     Page   72
--------------------------------- verify.asm ---------------------------------

2220 : c50b                     cmp zp1+1   ;test result
2222 : d0fe                     bne *       ;trap
2224 : 68                       pla         ;load status
                                eor_flag 0
2225 : 4934            >            eor #(0|$34)
                        
2227 : cd0602                   cmp fLDx+1  ;test flags
222a : d0fe                     bne *       ;trap
                                set_stat 0
                       >            load_flag 0
222c : a904            >            lda #0|4
                       >
222e : 48              >            pha         ;use stack to load status
222f : 28              >            plp
                        
2230 : ad0202                   lda abs1+2
2233 : 08                       php         ;test stores do not alter flags
2234 : 49c3                     eor #$c3
2236 : 28                       plp
2237 : 8511                     sta zpt+2
2239 : 08                       php         ;flags after load/store sequence
223a : 49c3                     eor #$c3
223c : c50c                     cmp zp1+2   ;test result
223e : d0fe                     bne *       ;trap
2240 : 68                       pla         ;load status
                                eor_flag 0
2241 : 4934            >            eor #(0|$34)
                        
2243 : cd0702                   cmp fLDx+2  ;test flags
2246 : d0fe                     bne *       ;trap
                                set_stat 0
                       >            load_flag 0
2248 : a904            >            lda #0|4
                       >
224a : 48              >            pha         ;use stack to load status
224b : 28              >            plp
                        
224c : ad0302                   lda abs1+3
224f : 08                       php         ;test stores do not alter flags
2250 : 49c3                     eor #$c3
2252 : 28                       plp
2253 : 8512                     sta zpt+3
2255 : 08                       php         ;flags after load/store sequence
2256 : 49c3                     eor #$c3
2258 : c50d                     cmp zp1+3   ;test result
225a : d0fe                     bne *       ;trap
225c : 68                       pla         ;load status
                                eor_flag 0
225d : 4934            >            eor #(0|$34)
                        
225f : cd0802                   cmp fLDx+3  ;test flags
2262 : d0fe                     bne *       ;trap
                                set_stat $ff
                       >            load_flag $ff
2264 : a9ff            >            lda #$ff|4
                       >
2266 : 48              >            pha         ;use stack to load status
2267 : 28              >            plp
                        
2268 : ad0002                   lda abs1
226b : 08                       php         ;test stores do not alter flags
226c : 49c3                     eor #$c3
AS65 Assembler for R6502 [1.42].                                     Page   73
--------------------------------- verify.asm ---------------------------------

226e : 28                       plp
226f : 850f                     sta zpt
2271 : 08                       php         ;flags after load/store sequence
2272 : 49c3                     eor #$c3
2274 : c50a                     cmp zp1     ;test result
2276 : d0fe                     bne *       ;trap
2278 : 68                       pla         ;load status
                                eor_flag lo~fnz ;mask bits not altered
2279 : 497d            >            eor #(lo~fnz |$34)
                        
227b : cd0502                   cmp fLDx    ;test flags
227e : d0fe                     bne *       ;trap
                                set_stat $ff
                       >            load_flag $ff
2280 : a9ff            >            lda #$ff|4
                       >
2282 : 48              >            pha         ;use stack to load status
2283 : 28              >            plp
                        
2284 : ad0102                   lda abs1+1
2287 : 08                       php         ;test stores do not alter flags
2288 : 49c3                     eor #$c3
228a : 28                       plp
228b : 8510                     sta zpt+1
228d : 08                       php         ;flags after load/store sequence
228e : 49c3                     eor #$c3
2290 : c50b                     cmp zp1+1   ;test result
2292 : d0fe                     bne *       ;trap
2294 : 68                       pla         ;load status
                                eor_flag lo~fnz ;mask bits not altered
2295 : 497d            >            eor #(lo~fnz |$34)
                        
2297 : cd0602                   cmp fLDx+1  ;test flags
229a : d0fe                     bne *       ;trap
                                set_stat $ff
                       >            load_flag $ff
229c : a9ff            >            lda #$ff|4
                       >
229e : 48              >            pha         ;use stack to load status
229f : 28              >            plp
                        
22a0 : ad0202                   lda abs1+2
22a3 : 08                       php         ;test stores do not alter flags
22a4 : 49c3                     eor #$c3
22a6 : 28                       plp
22a7 : 8511                     sta zpt+2
22a9 : 08                       php         ;flags after load/store sequence
22aa : 49c3                     eor #$c3
22ac : c50c                     cmp zp1+2   ;test result
22ae : d0fe                     bne *       ;trap
22b0 : 68                       pla         ;load status
                                eor_flag lo~fnz ;mask bits not altered
22b1 : 497d            >            eor #(lo~fnz |$34)
                        
22b3 : cd0702                   cmp fLDx+2  ;test flags
22b6 : d0fe                     bne *       ;trap
                                set_stat $ff
                       >            load_flag $ff
22b8 : a9ff            >            lda #$ff|4
                       >
22ba : 48              >            pha         ;use stack to load status
22bb : 28              >            plp
AS65 Assembler for R6502 [1.42].                                     Page   74
--------------------------------- verify.asm ---------------------------------

                        
22bc : ad0302                   lda abs1+3
22bf : 08                       php         ;test stores do not alter flags
22c0 : 49c3                     eor #$c3
22c2 : 28                       plp
22c3 : 8512                     sta zpt+3
22c5 : 08                       php         ;flags after load/store sequence
22c6 : 49c3                     eor #$c3
22c8 : c50d                     cmp zp1+3   ;test result
22ca : d0fe                     bne *       ;trap
22cc : 68                       pla         ;load status
                                eor_flag lo~fnz ;mask bits not altered
22cd : 497d            >            eor #(lo~fnz |$34)
                        
22cf : cd0802                   cmp fLDx+3  ;test flags
22d2 : d0fe                     bne *       ;trap
                                set_stat 0
                       >            load_flag 0
22d4 : a904            >            lda #0|4
                       >
22d6 : 48              >            pha         ;use stack to load status
22d7 : 28              >            plp
                        
22d8 : a9c3                     lda #$c3
22da : 08                       php
22db : cd0002                   cmp abs1    ;test result
22de : d0fe                     bne *       ;trap
22e0 : 68                       pla         ;load status
                                eor_flag 0
22e1 : 4934            >            eor #(0|$34)
                        
22e3 : cd0502                   cmp fLDx    ;test flags
22e6 : d0fe                     bne *       ;trap
                                set_stat 0
                       >            load_flag 0
22e8 : a904            >            lda #0|4
                       >
22ea : 48              >            pha         ;use stack to load status
22eb : 28              >            plp
                        
22ec : a982                     lda #$82
22ee : 08                       php
22ef : cd0102                   cmp abs1+1  ;test result
22f2 : d0fe                     bne *       ;trap
22f4 : 68                       pla         ;load status
                                eor_flag 0
22f5 : 4934            >            eor #(0|$34)
                        
22f7 : cd0602                   cmp fLDx+1  ;test flags
22fa : d0fe                     bne *       ;trap
                                set_stat 0
                       >            load_flag 0
22fc : a904            >            lda #0|4
                       >
22fe : 48              >            pha         ;use stack to load status
22ff : 28              >            plp
                        
2300 : a941                     lda #$41
2302 : 08                       php
2303 : cd0202                   cmp abs1+2  ;test result
2306 : d0fe                     bne *       ;trap
2308 : 68                       pla         ;load status
AS65 Assembler for R6502 [1.42].                                     Page   75
--------------------------------- verify.asm ---------------------------------

                                eor_flag 0
2309 : 4934            >            eor #(0|$34)
                        
230b : cd0702                   cmp fLDx+2  ;test flags
230e : d0fe                     bne *       ;trap
                                set_stat 0
                       >            load_flag 0
2310 : a904            >            lda #0|4
                       >
2312 : 48              >            pha         ;use stack to load status
2313 : 28              >            plp
                        
2314 : a900                     lda #0
2316 : 08                       php
2317 : cd0302                   cmp abs1+3  ;test result
231a : d0fe                     bne *       ;trap
231c : 68                       pla         ;load status
                                eor_flag 0
231d : 4934            >            eor #(0|$34)
                        
231f : cd0802                   cmp fLDx+3  ;test flags
2322 : d0fe                     bne *       ;trap
                        
                                set_stat $ff
                       >            load_flag $ff
2324 : a9ff            >            lda #$ff|4
                       >
2326 : 48              >            pha         ;use stack to load status
2327 : 28              >            plp
                        
2328 : a9c3                     lda #$c3
232a : 08                       php
232b : cd0002                   cmp abs1    ;test result
232e : d0fe                     bne *       ;trap
2330 : 68                       pla         ;load status
                                eor_flag lo~fnz ;mask bits not altered
2331 : 497d            >            eor #(lo~fnz |$34)
                        
2333 : cd0502                   cmp fLDx    ;test flags
2336 : d0fe                     bne *       ;trap
                                set_stat $ff
                       >            load_flag $ff
2338 : a9ff            >            lda #$ff|4
                       >
233a : 48              >            pha         ;use stack to load status
233b : 28              >            plp
                        
233c : a982                     lda #$82
233e : 08                       php
233f : cd0102                   cmp abs1+1  ;test result
2342 : d0fe                     bne *       ;trap
2344 : 68                       pla         ;load status
                                eor_flag lo~fnz ;mask bits not altered
2345 : 497d            >            eor #(lo~fnz |$34)
                        
2347 : cd0602                   cmp fLDx+1  ;test flags
234a : d0fe                     bne *       ;trap
                                set_stat $ff
                       >            load_flag $ff
234c : a9ff            >            lda #$ff|4
                       >
234e : 48              >            pha         ;use stack to load status
AS65 Assembler for R6502 [1.42].                                     Page   76
--------------------------------- verify.asm ---------------------------------

234f : 28              >            plp
                        
2350 : a941                     lda #$41
2352 : 08                       php
2353 : cd0202                   cmp abs1+2  ;test result
2356 : d0fe                     bne *       ;trap
2358 : 68                       pla         ;load status
                                eor_flag lo~fnz ;mask bits not altered
2359 : 497d            >            eor #(lo~fnz |$34)
                        
235b : cd0702                   cmp fLDx+2  ;test flags
235e : d0fe                     bne *       ;trap
                                set_stat $ff
                       >            load_flag $ff
2360 : a9ff            >            lda #$ff|4
                       >
2362 : 48              >            pha         ;use stack to load status
2363 : 28              >            plp
                        
2364 : a900                     lda #0
2366 : 08                       php
2367 : cd0302                   cmp abs1+3  ;test result
236a : d0fe                     bne *       ;trap
236c : 68                       pla         ;load status
                                eor_flag lo~fnz ;mask bits not altered
236d : 497d            >            eor #(lo~fnz |$34)
                        
236f : cd0802                   cmp fLDx+3  ;test flags
2372 : d0fe                     bne *       ;trap
                        
2374 : a200                     ldx #0
2376 : a50f                     lda zpt
2378 : 49c3                     eor #$c3
237a : c50a                     cmp zp1
237c : d0fe                     bne *       ;trap: store to zp data
237e : 860f                     stx zpt     ;clear
2380 : ad3302                   lda abst
2383 : 49c3                     eor #$c3
2385 : cd0002                   cmp abs1
2388 : d0fe                     bne *       ;trap: store to abs data
238a : 8e3302                   stx abst    ;clear
238d : a510                     lda zpt+1
238f : 49c3                     eor #$c3
2391 : c50b                     cmp zp1+1
2393 : d0fe                     bne *       ;trap: store to zp data
2395 : 8610                     stx zpt+1   ;clear
2397 : ad3402                   lda abst+1
239a : 49c3                     eor #$c3
239c : cd0102                   cmp abs1+1
239f : d0fe                     bne *       ;trap: store to abs data
23a1 : 8e3402                   stx abst+1  ;clear
23a4 : a511                     lda zpt+2
23a6 : 49c3                     eor #$c3
23a8 : c50c                     cmp zp1+2
23aa : d0fe                     bne *       ;trap: store to zp data
23ac : 8611                     stx zpt+2   ;clear
23ae : ad3502                   lda abst+2
23b1 : 49c3                     eor #$c3
23b3 : cd0202                   cmp abs1+2
23b6 : d0fe                     bne *       ;trap: store to abs data
23b8 : 8e3502                   stx abst+2  ;clear
23bb : a512                     lda zpt+3
AS65 Assembler for R6502 [1.42].                                     Page   77
--------------------------------- verify.asm ---------------------------------

23bd : 49c3                     eor #$c3
23bf : c50d                     cmp zp1+3
23c1 : d0fe                     bne *       ;trap: store to zp data
23c3 : 8612                     stx zpt+3   ;clear
23c5 : ad3602                   lda abst+3
23c8 : 49c3                     eor #$c3
23ca : cd0302                   cmp abs1+3
23cd : d0fe                     bne *       ;trap: store to abs data
23cf : 8e3602                   stx abst+3  ;clear
                        
                        ; testing bit test & compares BIT CPX CPY CMP all addr
                        ; BIT - zp / abs
                                set_a $ff,0
                       >            load_flag 0
23d2 : a904            >            lda #0|4
                       >
23d4 : 48              >            pha         ;use stack to load status
23d5 : a9ff            >            lda #$ff     ;precharge accu
23d7 : 28              >            plp
                        
23d8 : 240d                     bit zp1+3   ;00 - should set Z / clear  NV
                                tst_a $ff,fz
23da : 08              >            php         ;save flags
23db : 08              >            php
23dc : c9ff            >            cmp #$ff     ;test result
23de : d0fe            >            bne *       ;trap
23e0 : 68              >            pla         ;load status
                       >            cmp_flag fz
23e1 : c936            >            cmp #(fz|$34)&$ff
                       >
23e3 : d0fe            >            bne *       ;trap
23e5 : 28              >            plp         ;restore status
                        
                                set_a 1,0
                       >            load_flag 0
23e6 : a904            >            lda #0|4
                       >
23e8 : 48              >            pha         ;use stack to load status
23e9 : a901            >            lda #1     ;precharge accu
23eb : 28              >            plp
                        
23ec : 240c                     bit zp1+2   ;41 - should set V (M6) / clear NZ
                                tst_a 1,fv
23ee : 08              >            php         ;save flags
23ef : 08              >            php
23f0 : c901            >            cmp #1     ;test result
23f2 : d0fe            >            bne *       ;trap
23f4 : 68              >            pla         ;load status
                       >            cmp_flag fv
23f5 : c974            >            cmp #(fv|$34)&$ff
                       >
23f7 : d0fe            >            bne *       ;trap
23f9 : 28              >            plp         ;restore status
                        
                                set_a 1,0
                       >            load_flag 0
23fa : a904            >            lda #0|4
                       >
23fc : 48              >            pha         ;use stack to load status
23fd : a901            >            lda #1     ;precharge accu
23ff : 28              >            plp
                        
AS65 Assembler for R6502 [1.42].                                     Page   78
--------------------------------- verify.asm ---------------------------------

2400 : 240b                     bit zp1+1   ;82 - should set N (M7) & Z / clea
                                tst_a 1,fnz
2402 : 08              >            php         ;save flags
2403 : 08              >            php
2404 : c901            >            cmp #1     ;test result
2406 : d0fe            >            bne *       ;trap
2408 : 68              >            pla         ;load status
                       >            cmp_flag fnz
2409 : c9b6            >            cmp #(fnz|$34)&$ff
                       >
240b : d0fe            >            bne *       ;trap
240d : 28              >            plp         ;restore status
                        
                                set_a 1,0
                       >            load_flag 0
240e : a904            >            lda #0|4
                       >
2410 : 48              >            pha         ;use stack to load status
2411 : a901            >            lda #1     ;precharge accu
2413 : 28              >            plp
                        
2414 : 240a                     bit zp1     ;c3 - should set N (M7) & V (M6) /
                                tst_a 1,fnv
2416 : 08              >            php         ;save flags
2417 : 08              >            php
2418 : c901            >            cmp #1     ;test result
241a : d0fe            >            bne *       ;trap
241c : 68              >            pla         ;load status
                       >            cmp_flag fnv
241d : c9f4            >            cmp #(fnv|$34)&$ff
                       >
241f : d0fe            >            bne *       ;trap
2421 : 28              >            plp         ;restore status
                        
                        
                                set_a $ff,$ff
                       >            load_flag $ff
2422 : a9ff            >            lda #$ff|4
                       >
2424 : 48              >            pha         ;use stack to load status
2425 : a9ff            >            lda #$ff     ;precharge accu
2427 : 28              >            plp
                        
2428 : 240d                     bit zp1+3   ;00 - should set Z / clear  NV
                                tst_a $ff,~fnv
242a : 08              >            php         ;save flags
242b : 08              >            php
242c : c9ff            >            cmp #$ff     ;test result
242e : d0fe            >            bne *       ;trap
2430 : 68              >            pla         ;load status
                       >            cmp_flag ~fnv
2431 : c93f            >            cmp #(~fnv|$34)&$ff
                       >
2433 : d0fe            >            bne *       ;trap
2435 : 28              >            plp         ;restore status
                        
                                set_a 1,$ff
                       >            load_flag $ff
2436 : a9ff            >            lda #$ff|4
                       >
2438 : 48              >            pha         ;use stack to load status
2439 : a901            >            lda #1     ;precharge accu
AS65 Assembler for R6502 [1.42].                                     Page   79
--------------------------------- verify.asm ---------------------------------

243b : 28              >            plp
                        
243c : 240c                     bit zp1+2   ;41 - should set V (M6) / clear NZ
                                tst_a 1,~fnz
243e : 08              >            php         ;save flags
243f : 08              >            php
2440 : c901            >            cmp #1     ;test result
2442 : d0fe            >            bne *       ;trap
2444 : 68              >            pla         ;load status
                       >            cmp_flag ~fnz
2445 : c97d            >            cmp #(~fnz|$34)&$ff
                       >
2447 : d0fe            >            bne *       ;trap
2449 : 28              >            plp         ;restore status
                        
                                set_a 1,$ff
                       >            load_flag $ff
244a : a9ff            >            lda #$ff|4
                       >
244c : 48              >            pha         ;use stack to load status
244d : a901            >            lda #1     ;precharge accu
244f : 28              >            plp
                        
2450 : 240b                     bit zp1+1   ;82 - should set N (M7) & Z / clea
                                tst_a 1,~fv
2452 : 08              >            php         ;save flags
2453 : 08              >            php
2454 : c901            >            cmp #1     ;test result
2456 : d0fe            >            bne *       ;trap
2458 : 68              >            pla         ;load status
                       >            cmp_flag ~fv
2459 : c9bf            >            cmp #(~fv|$34)&$ff
                       >
245b : d0fe            >            bne *       ;trap
245d : 28              >            plp         ;restore status
                        
                                set_a 1,$ff
                       >            load_flag $ff
245e : a9ff            >            lda #$ff|4
                       >
2460 : 48              >            pha         ;use stack to load status
2461 : a901            >            lda #1     ;precharge accu
2463 : 28              >            plp
                        
2464 : 240a                     bit zp1     ;c3 - should set N (M7) & V (M6) /
                                tst_a 1,~fz
2466 : 08              >            php         ;save flags
2467 : 08              >            php
2468 : c901            >            cmp #1     ;test result
246a : d0fe            >            bne *       ;trap
246c : 68              >            pla         ;load status
                       >            cmp_flag ~fz
246d : c9fd            >            cmp #(~fz|$34)&$ff
                       >
246f : d0fe            >            bne *       ;trap
2471 : 28              >            plp         ;restore status
                        
                        
                                set_a $ff,0
                       >            load_flag 0
2472 : a904            >            lda #0|4
                       >
AS65 Assembler for R6502 [1.42].                                     Page   80
--------------------------------- verify.asm ---------------------------------

2474 : 48              >            pha         ;use stack to load status
2475 : a9ff            >            lda #$ff     ;precharge accu
2477 : 28              >            plp
                        
2478 : 2c0302                   bit abs1+3  ;00 - should set Z / clear  NV
                                tst_a $ff,fz
247b : 08              >            php         ;save flags
247c : 08              >            php
247d : c9ff            >            cmp #$ff     ;test result
247f : d0fe            >            bne *       ;trap
2481 : 68              >            pla         ;load status
                       >            cmp_flag fz
2482 : c936            >            cmp #(fz|$34)&$ff
                       >
2484 : d0fe            >            bne *       ;trap
2486 : 28              >            plp         ;restore status
                        
                                set_a 1,0
                       >            load_flag 0
2487 : a904            >            lda #0|4
                       >
2489 : 48              >            pha         ;use stack to load status
248a : a901            >            lda #1     ;precharge accu
248c : 28              >            plp
                        
248d : 2c0202                   bit abs1+2  ;41 - should set V (M6) / clear NZ
                                tst_a 1,fv
2490 : 08              >            php         ;save flags
2491 : 08              >            php
2492 : c901            >            cmp #1     ;test result
2494 : d0fe            >            bne *       ;trap
2496 : 68              >            pla         ;load status
                       >            cmp_flag fv
2497 : c974            >            cmp #(fv|$34)&$ff
                       >
2499 : d0fe            >            bne *       ;trap
249b : 28              >            plp         ;restore status
                        
                                set_a 1,0
                       >            load_flag 0
249c : a904            >            lda #0|4
                       >
249e : 48              >            pha         ;use stack to load status
249f : a901            >            lda #1     ;precharge accu
24a1 : 28              >            plp
                        
24a2 : 2c0102                   bit abs1+1  ;82 - should set N (M7) & Z / clea
                                tst_a 1,fnz
24a5 : 08              >            php         ;save flags
24a6 : 08              >            php
24a7 : c901            >            cmp #1     ;test result
24a9 : d0fe            >            bne *       ;trap
24ab : 68              >            pla         ;load status
                       >            cmp_flag fnz
24ac : c9b6            >            cmp #(fnz|$34)&$ff
                       >
24ae : d0fe            >            bne *       ;trap
24b0 : 28              >            plp         ;restore status
                        
                                set_a 1,0
                       >            load_flag 0
24b1 : a904            >            lda #0|4
AS65 Assembler for R6502 [1.42].                                     Page   81
--------------------------------- verify.asm ---------------------------------

                       >
24b3 : 48              >            pha         ;use stack to load status
24b4 : a901            >            lda #1     ;precharge accu
24b6 : 28              >            plp
                        
24b7 : 2c0002                   bit abs1    ;c3 - should set N (M7) & V (M6) /
                                tst_a 1,fnv
24ba : 08              >            php         ;save flags
24bb : 08              >            php
24bc : c901            >            cmp #1     ;test result
24be : d0fe            >            bne *       ;trap
24c0 : 68              >            pla         ;load status
                       >            cmp_flag fnv
24c1 : c9f4            >            cmp #(fnv|$34)&$ff
                       >
24c3 : d0fe            >            bne *       ;trap
24c5 : 28              >            plp         ;restore status
                        
                        
                                set_a $ff,$ff
                       >            load_flag $ff
24c6 : a9ff            >            lda #$ff|4
                       >
24c8 : 48              >            pha         ;use stack to load status
24c9 : a9ff            >            lda #$ff     ;precharge accu
24cb : 28              >            plp
                        
24cc : 2c0302                   bit abs1+3  ;00 - should set Z / clear  NV
                                tst_a $ff,~fnv
24cf : 08              >            php         ;save flags
24d0 : 08              >            php
24d1 : c9ff            >            cmp #$ff     ;test result
24d3 : d0fe            >            bne *       ;trap
24d5 : 68              >            pla         ;load status
                       >            cmp_flag ~fnv
24d6 : c93f            >            cmp #(~fnv|$34)&$ff
                       >
24d8 : d0fe            >            bne *       ;trap
24da : 28              >            plp         ;restore status
                        
                                set_a 1,$ff
                       >            load_flag $ff
24db : a9ff            >            lda #$ff|4
                       >
24dd : 48              >            pha         ;use stack to load status
24de : a901            >            lda #1     ;precharge accu
24e0 : 28              >            plp
                        
24e1 : 2c0202                   bit abs1+2  ;41 - should set V (M6) / clear NZ
                                tst_a 1,~fnz
24e4 : 08              >            php         ;save flags
24e5 : 08              >            php
24e6 : c901            >            cmp #1     ;test result
24e8 : d0fe            >            bne *       ;trap
24ea : 68              >            pla         ;load status
                       >            cmp_flag ~fnz
24eb : c97d            >            cmp #(~fnz|$34)&$ff
                       >
24ed : d0fe            >            bne *       ;trap
24ef : 28              >            plp         ;restore status
                        
                                set_a 1,$ff
AS65 Assembler for R6502 [1.42].                                     Page   82
--------------------------------- verify.asm ---------------------------------

                       >            load_flag $ff
24f0 : a9ff            >            lda #$ff|4
                       >
24f2 : 48              >            pha         ;use stack to load status
24f3 : a901            >            lda #1     ;precharge accu
24f5 : 28              >            plp
                        
24f6 : 2c0102                   bit abs1+1  ;82 - should set N (M7) & Z / clea
                                tst_a 1,~fv
24f9 : 08              >            php         ;save flags
24fa : 08              >            php
24fb : c901            >            cmp #1     ;test result
24fd : d0fe            >            bne *       ;trap
24ff : 68              >            pla         ;load status
                       >            cmp_flag ~fv
2500 : c9bf            >            cmp #(~fv|$34)&$ff
                       >
2502 : d0fe            >            bne *       ;trap
2504 : 28              >            plp         ;restore status
                        
                                set_a 1,$ff
                       >            load_flag $ff
2505 : a9ff            >            lda #$ff|4
                       >
2507 : 48              >            pha         ;use stack to load status
2508 : a901            >            lda #1     ;precharge accu
250a : 28              >            plp
                        
250b : 2c0002                   bit abs1    ;c3 - should set N (M7) & V (M6) /
                                tst_a 1,~fz
250e : 08              >            php         ;save flags
250f : 08              >            php
2510 : c901            >            cmp #1     ;test result
2512 : d0fe            >            bne *       ;trap
2514 : 68              >            pla         ;load status
                       >            cmp_flag ~fz
2515 : c9fd            >            cmp #(~fz|$34)&$ff
                       >
2517 : d0fe            >            bne *       ;trap
2519 : 28              >            plp         ;restore status
                        
                        
                        ; CPX - zp / abs / #
                                set_x $80,0
                       >            load_flag 0
251a : a904            >            lda #0|4
                       >
251c : 48              >            pha         ;use stack to load status
251d : a280            >            ldx #$80     ;precharge accu
251f : 28              >            plp
                        
2520 : e40e                     cpx zp7f
                                tst_stat fc
2522 : 08              >            php         ;save status
2523 : 08              >            php         ;use stack to retrieve status
2524 : 68              >            pla
                       >            cmp_flag fc
2525 : c935            >            cmp #(fc|$34)&$ff
                       >
2527 : d0fe            >            bne *       ;trap
2529 : 28              >            plp         ;restore status
                        
AS65 Assembler for R6502 [1.42].                                     Page   83
--------------------------------- verify.asm ---------------------------------

252a : ca                       dex
252b : e40e                     cpx zp7f
                                tst_stat fzc
252d : 08              >            php         ;save status
252e : 08              >            php         ;use stack to retrieve status
252f : 68              >            pla
                       >            cmp_flag fzc
2530 : c937            >            cmp #(fzc|$34)&$ff
                       >
2532 : d0fe            >            bne *       ;trap
2534 : 28              >            plp         ;restore status
                        
2535 : ca                       dex
2536 : e40e                     cpx zp7f
                                tst_x $7e,fn
2538 : 08              >            php         ;save flags
2539 : 08              >            php
253a : e07e            >            cpx #$7e     ;test result
253c : d0fe            >            bne *       ;trap
253e : 68              >            pla         ;load status
                       >            cmp_flag fn
253f : c9b4            >            cmp #(fn|$34)&$ff
                       >
2541 : d0fe            >            bne *       ;trap
2543 : 28              >            plp         ;restore status
                        
                                set_x $80,$ff
                       >            load_flag $ff
2544 : a9ff            >            lda #$ff|4
                       >
2546 : 48              >            pha         ;use stack to load status
2547 : a280            >            ldx #$80     ;precharge accu
2549 : 28              >            plp
                        
254a : e40e                     cpx zp7f
                                tst_stat ~fnz
254c : 08              >            php         ;save status
254d : 08              >            php         ;use stack to retrieve status
254e : 68              >            pla
                       >            cmp_flag ~fnz
254f : c97d            >            cmp #(~fnz|$34)&$ff
                       >
2551 : d0fe            >            bne *       ;trap
2553 : 28              >            plp         ;restore status
                        
2554 : ca                       dex
2555 : e40e                     cpx zp7f
                                tst_stat ~fn
2557 : 08              >            php         ;save status
2558 : 08              >            php         ;use stack to retrieve status
2559 : 68              >            pla
                       >            cmp_flag ~fn
255a : c97f            >            cmp #(~fn|$34)&$ff
                       >
255c : d0fe            >            bne *       ;trap
255e : 28              >            plp         ;restore status
                        
255f : ca                       dex
2560 : e40e                     cpx zp7f
                                tst_x $7e,~fzc
2562 : 08              >            php         ;save flags
2563 : 08              >            php
AS65 Assembler for R6502 [1.42].                                     Page   84
--------------------------------- verify.asm ---------------------------------

2564 : e07e            >            cpx #$7e     ;test result
2566 : d0fe            >            bne *       ;trap
2568 : 68              >            pla         ;load status
                       >            cmp_flag ~fzc
2569 : c9fc            >            cmp #(~fzc|$34)&$ff
                       >
256b : d0fe            >            bne *       ;trap
256d : 28              >            plp         ;restore status
                        
                        
                                set_x $80,0
                       >            load_flag 0
256e : a904            >            lda #0|4
                       >
2570 : 48              >            pha         ;use stack to load status
2571 : a280            >            ldx #$80     ;precharge accu
2573 : 28              >            plp
                        
2574 : ec0402                   cpx abs7f
                                tst_stat fc
2577 : 08              >            php         ;save status
2578 : 08              >            php         ;use stack to retrieve status
2579 : 68              >            pla
                       >            cmp_flag fc
257a : c935            >            cmp #(fc|$34)&$ff
                       >
257c : d0fe            >            bne *       ;trap
257e : 28              >            plp         ;restore status
                        
257f : ca                       dex
2580 : ec0402                   cpx abs7f
                                tst_stat fzc
2583 : 08              >            php         ;save status
2584 : 08              >            php         ;use stack to retrieve status
2585 : 68              >            pla
                       >            cmp_flag fzc
2586 : c937            >            cmp #(fzc|$34)&$ff
                       >
2588 : d0fe            >            bne *       ;trap
258a : 28              >            plp         ;restore status
                        
258b : ca                       dex
258c : ec0402                   cpx abs7f
                                tst_x $7e,fn
258f : 08              >            php         ;save flags
2590 : 08              >            php
2591 : e07e            >            cpx #$7e     ;test result
2593 : d0fe            >            bne *       ;trap
2595 : 68              >            pla         ;load status
                       >            cmp_flag fn
2596 : c9b4            >            cmp #(fn|$34)&$ff
                       >
2598 : d0fe            >            bne *       ;trap
259a : 28              >            plp         ;restore status
                        
                                set_x $80,$ff
                       >            load_flag $ff
259b : a9ff            >            lda #$ff|4
                       >
259d : 48              >            pha         ;use stack to load status
259e : a280            >            ldx #$80     ;precharge accu
25a0 : 28              >            plp
AS65 Assembler for R6502 [1.42].                                     Page   85
--------------------------------- verify.asm ---------------------------------

                        
25a1 : ec0402                   cpx abs7f
                                tst_stat ~fnz
25a4 : 08              >            php         ;save status
25a5 : 08              >            php         ;use stack to retrieve status
25a6 : 68              >            pla
                       >            cmp_flag ~fnz
25a7 : c97d            >            cmp #(~fnz|$34)&$ff
                       >
25a9 : d0fe            >            bne *       ;trap
25ab : 28              >            plp         ;restore status
                        
25ac : ca                       dex
25ad : ec0402                   cpx abs7f
                                tst_stat ~fn
25b0 : 08              >            php         ;save status
25b1 : 08              >            php         ;use stack to retrieve status
25b2 : 68              >            pla
                       >            cmp_flag ~fn
25b3 : c97f            >            cmp #(~fn|$34)&$ff
                       >
25b5 : d0fe            >            bne *       ;trap
25b7 : 28              >            plp         ;restore status
                        
25b8 : ca                       dex
25b9 : ec0402                   cpx abs7f
                                tst_x $7e,~fzc
25bc : 08              >            php         ;save flags
25bd : 08              >            php
25be : e07e            >            cpx #$7e     ;test result
25c0 : d0fe            >            bne *       ;trap
25c2 : 68              >            pla         ;load status
                       >            cmp_flag ~fzc
25c3 : c9fc            >            cmp #(~fzc|$34)&$ff
                       >
25c5 : d0fe            >            bne *       ;trap
25c7 : 28              >            plp         ;restore status
                        
                        
                                set_x $80,0
                       >            load_flag 0
25c8 : a904            >            lda #0|4
                       >
25ca : 48              >            pha         ;use stack to load status
25cb : a280            >            ldx #$80     ;precharge accu
25cd : 28              >            plp
                        
25ce : e07f                     cpx #$7f
                                tst_stat fc
25d0 : 08              >            php         ;save status
25d1 : 08              >            php         ;use stack to retrieve status
25d2 : 68              >            pla
                       >            cmp_flag fc
25d3 : c935            >            cmp #(fc|$34)&$ff
                       >
25d5 : d0fe            >            bne *       ;trap
25d7 : 28              >            plp         ;restore status
                        
25d8 : ca                       dex
25d9 : e07f                     cpx #$7f
                                tst_stat fzc
25db : 08              >            php         ;save status
AS65 Assembler for R6502 [1.42].                                     Page   86
--------------------------------- verify.asm ---------------------------------

25dc : 08              >            php         ;use stack to retrieve status
25dd : 68              >            pla
                       >            cmp_flag fzc
25de : c937            >            cmp #(fzc|$34)&$ff
                       >
25e0 : d0fe            >            bne *       ;trap
25e2 : 28              >            plp         ;restore status
                        
25e3 : ca                       dex
25e4 : e07f                     cpx #$7f
                                tst_x $7e,fn
25e6 : 08              >            php         ;save flags
25e7 : 08              >            php
25e8 : e07e            >            cpx #$7e     ;test result
25ea : d0fe            >            bne *       ;trap
25ec : 68              >            pla         ;load status
                       >            cmp_flag fn
25ed : c9b4            >            cmp #(fn|$34)&$ff
                       >
25ef : d0fe            >            bne *       ;trap
25f1 : 28              >            plp         ;restore status
                        
                                set_x $80,$ff
                       >            load_flag $ff
25f2 : a9ff            >            lda #$ff|4
                       >
25f4 : 48              >            pha         ;use stack to load status
25f5 : a280            >            ldx #$80     ;precharge accu
25f7 : 28              >            plp
                        
25f8 : e07f                     cpx #$7f
                                tst_stat ~fnz
25fa : 08              >            php         ;save status
25fb : 08              >            php         ;use stack to retrieve status
25fc : 68              >            pla
                       >            cmp_flag ~fnz
25fd : c97d            >            cmp #(~fnz|$34)&$ff
                       >
25ff : d0fe            >            bne *       ;trap
2601 : 28              >            plp         ;restore status
                        
2602 : ca                       dex
2603 : e07f                     cpx #$7f
                                tst_stat ~fn
2605 : 08              >            php         ;save status
2606 : 08              >            php         ;use stack to retrieve status
2607 : 68              >            pla
                       >            cmp_flag ~fn
2608 : c97f            >            cmp #(~fn|$34)&$ff
                       >
260a : d0fe            >            bne *       ;trap
260c : 28              >            plp         ;restore status
                        
260d : ca                       dex
260e : e07f                     cpx #$7f
                                tst_x $7e,~fzc
2610 : 08              >            php         ;save flags
2611 : 08              >            php
2612 : e07e            >            cpx #$7e     ;test result
2614 : d0fe            >            bne *       ;trap
2616 : 68              >            pla         ;load status
                       >            cmp_flag ~fzc
AS65 Assembler for R6502 [1.42].                                     Page   87
--------------------------------- verify.asm ---------------------------------

2617 : c9fc            >            cmp #(~fzc|$34)&$ff
                       >
2619 : d0fe            >            bne *       ;trap
261b : 28              >            plp         ;restore status
                        
                        
                        ; CPY - zp / abs / #
                                set_y $80,0
                       >            load_flag 0
261c : a904            >            lda #0|4
                       >
261e : 48              >            pha         ;use stack to load status
261f : a080            >            ldy #$80     ;precharge accu
2621 : 28              >            plp
                        
2622 : c40e                     cpy zp7f
                                tst_stat fc
2624 : 08              >            php         ;save status
2625 : 08              >            php         ;use stack to retrieve status
2626 : 68              >            pla
                       >            cmp_flag fc
2627 : c935            >            cmp #(fc|$34)&$ff
                       >
2629 : d0fe            >            bne *       ;trap
262b : 28              >            plp         ;restore status
                        
262c : 88                       dey
262d : c40e                     cpy zp7f
                                tst_stat fzc
262f : 08              >            php         ;save status
2630 : 08              >            php         ;use stack to retrieve status
2631 : 68              >            pla
                       >            cmp_flag fzc
2632 : c937            >            cmp #(fzc|$34)&$ff
                       >
2634 : d0fe            >            bne *       ;trap
2636 : 28              >            plp         ;restore status
                        
2637 : 88                       dey
2638 : c40e                     cpy zp7f
                                tst_y $7e,fn
263a : 08              >            php         ;save flags
263b : 08              >            php
263c : c07e            >            cpy #$7e     ;test result
263e : d0fe            >            bne *       ;trap
2640 : 68              >            pla         ;load status
                       >            cmp_flag fn
2641 : c9b4            >            cmp #(fn|$34)&$ff
                       >
2643 : d0fe            >            bne *       ;trap
2645 : 28              >            plp         ;restore status
                        
                                set_y $80,$ff
                       >            load_flag $ff
2646 : a9ff            >            lda #$ff|4
                       >
2648 : 48              >            pha         ;use stack to load status
2649 : a080            >            ldy #$80     ;precharge accu
264b : 28              >            plp
                        
264c : c40e                     cpy zp7f
                                tst_stat ~fnz
AS65 Assembler for R6502 [1.42].                                     Page   88
--------------------------------- verify.asm ---------------------------------

264e : 08              >            php         ;save status
264f : 08              >            php         ;use stack to retrieve status
2650 : 68              >            pla
                       >            cmp_flag ~fnz
2651 : c97d            >            cmp #(~fnz|$34)&$ff
                       >
2653 : d0fe            >            bne *       ;trap
2655 : 28              >            plp         ;restore status
                        
2656 : 88                       dey
2657 : c40e                     cpy zp7f
                                tst_stat ~fn
2659 : 08              >            php         ;save status
265a : 08              >            php         ;use stack to retrieve status
265b : 68              >            pla
                       >            cmp_flag ~fn
265c : c97f            >            cmp #(~fn|$34)&$ff
                       >
265e : d0fe            >            bne *       ;trap
2660 : 28              >            plp         ;restore status
                        
2661 : 88                       dey
2662 : c40e                     cpy zp7f
                                tst_y $7e,~fzc
2664 : 08              >            php         ;save flags
2665 : 08              >            php
2666 : c07e            >            cpy #$7e     ;test result
2668 : d0fe            >            bne *       ;trap
266a : 68              >            pla         ;load status
                       >            cmp_flag ~fzc
266b : c9fc            >            cmp #(~fzc|$34)&$ff
                       >
266d : d0fe            >            bne *       ;trap
266f : 28              >            plp         ;restore status
                        
                        
                                set_y $80,0
                       >            load_flag 0
2670 : a904            >            lda #0|4
                       >
2672 : 48              >            pha         ;use stack to load status
2673 : a080            >            ldy #$80     ;precharge accu
2675 : 28              >            plp
                        
2676 : cc0402                   cpy abs7f
                                tst_stat fc
2679 : 08              >            php         ;save status
267a : 08              >            php         ;use stack to retrieve status
267b : 68              >            pla
                       >            cmp_flag fc
267c : c935            >            cmp #(fc|$34)&$ff
                       >
267e : d0fe            >            bne *       ;trap
2680 : 28              >            plp         ;restore status
                        
2681 : 88                       dey
2682 : cc0402                   cpy abs7f
                                tst_stat fzc
2685 : 08              >            php         ;save status
2686 : 08              >            php         ;use stack to retrieve status
2687 : 68              >            pla
                       >            cmp_flag fzc
AS65 Assembler for R6502 [1.42].                                     Page   89
--------------------------------- verify.asm ---------------------------------

2688 : c937            >            cmp #(fzc|$34)&$ff
                       >
268a : d0fe            >            bne *       ;trap
268c : 28              >            plp         ;restore status
                        
268d : 88                       dey
268e : cc0402                   cpy abs7f
                                tst_y $7e,fn
2691 : 08              >            php         ;save flags
2692 : 08              >            php
2693 : c07e            >            cpy #$7e     ;test result
2695 : d0fe            >            bne *       ;trap
2697 : 68              >            pla         ;load status
                       >            cmp_flag fn
2698 : c9b4            >            cmp #(fn|$34)&$ff
                       >
269a : d0fe            >            bne *       ;trap
269c : 28              >            plp         ;restore status
                        
                                set_y $80,$ff
                       >            load_flag $ff
269d : a9ff            >            lda #$ff|4
                       >
269f : 48              >            pha         ;use stack to load status
26a0 : a080            >            ldy #$80     ;precharge accu
26a2 : 28              >            plp
                        
26a3 : cc0402                   cpy abs7f
                                tst_stat ~fnz
26a6 : 08              >            php         ;save status
26a7 : 08              >            php         ;use stack to retrieve status
26a8 : 68              >            pla
                       >            cmp_flag ~fnz
26a9 : c97d            >            cmp #(~fnz|$34)&$ff
                       >
26ab : d0fe            >            bne *       ;trap
26ad : 28              >            plp         ;restore status
                        
26ae : 88                       dey
26af : cc0402                   cpy abs7f
                                tst_stat ~fn
26b2 : 08              >            php         ;save status
26b3 : 08              >            php         ;use stack to retrieve status
26b4 : 68              >            pla
                       >            cmp_flag ~fn
26b5 : c97f            >            cmp #(~fn|$34)&$ff
                       >
26b7 : d0fe            >            bne *       ;trap
26b9 : 28              >            plp         ;restore status
                        
26ba : 88                       dey
26bb : cc0402                   cpy abs7f
                                tst_y $7e,~fzc
26be : 08              >            php         ;save flags
26bf : 08              >            php
26c0 : c07e            >            cpy #$7e     ;test result
26c2 : d0fe            >            bne *       ;trap
26c4 : 68              >            pla         ;load status
                       >            cmp_flag ~fzc
26c5 : c9fc            >            cmp #(~fzc|$34)&$ff
                       >
26c7 : d0fe            >            bne *       ;trap
AS65 Assembler for R6502 [1.42].                                     Page   90
--------------------------------- verify.asm ---------------------------------

26c9 : 28              >            plp         ;restore status
                        
                        
                                set_y $80,0
                       >            load_flag 0
26ca : a904            >            lda #0|4
                       >
26cc : 48              >            pha         ;use stack to load status
26cd : a080            >            ldy #$80     ;precharge accu
26cf : 28              >            plp
                        
26d0 : c07f                     cpy #$7f
                                tst_stat fc
26d2 : 08              >            php         ;save status
26d3 : 08              >            php         ;use stack to retrieve status
26d4 : 68              >            pla
                       >            cmp_flag fc
26d5 : c935            >            cmp #(fc|$34)&$ff
                       >
26d7 : d0fe            >            bne *       ;trap
26d9 : 28              >            plp         ;restore status
                        
26da : 88                       dey
26db : c07f                     cpy #$7f
                                tst_stat fzc
26dd : 08              >            php         ;save status
26de : 08              >            php         ;use stack to retrieve status
26df : 68              >            pla
                       >            cmp_flag fzc
26e0 : c937            >            cmp #(fzc|$34)&$ff
                       >
26e2 : d0fe            >            bne *       ;trap
26e4 : 28              >            plp         ;restore status
                        
26e5 : 88                       dey
26e6 : c07f                     cpy #$7f
                                tst_y $7e,fn
26e8 : 08              >            php         ;save flags
26e9 : 08              >            php
26ea : c07e            >            cpy #$7e     ;test result
26ec : d0fe            >            bne *       ;trap
26ee : 68              >            pla         ;load status
                       >            cmp_flag fn
26ef : c9b4            >            cmp #(fn|$34)&$ff
                       >
26f1 : d0fe            >            bne *       ;trap
26f3 : 28              >            plp         ;restore status
                        
                                set_y $80,$ff
                       >            load_flag $ff
26f4 : a9ff            >            lda #$ff|4
                       >
26f6 : 48              >            pha         ;use stack to load status
26f7 : a080            >            ldy #$80     ;precharge accu
26f9 : 28              >            plp
                        
26fa : c07f                     cpy #$7f
                                tst_stat ~fnz
26fc : 08              >            php         ;save status
26fd : 08              >            php         ;use stack to retrieve status
26fe : 68              >            pla
                       >            cmp_flag ~fnz
AS65 Assembler for R6502 [1.42].                                     Page   91
--------------------------------- verify.asm ---------------------------------

26ff : c97d            >            cmp #(~fnz|$34)&$ff
                       >
2701 : d0fe            >            bne *       ;trap
2703 : 28              >            plp         ;restore status
                        
2704 : 88                       dey
2705 : c07f                     cpy #$7f
                                tst_stat ~fn
2707 : 08              >            php         ;save status
2708 : 08              >            php         ;use stack to retrieve status
2709 : 68              >            pla
                       >            cmp_flag ~fn
270a : c97f            >            cmp #(~fn|$34)&$ff
                       >
270c : d0fe            >            bne *       ;trap
270e : 28              >            plp         ;restore status
                        
270f : 88                       dey
2710 : c07f                     cpy #$7f
                                tst_y $7e,~fzc
2712 : 08              >            php         ;save flags
2713 : 08              >            php
2714 : c07e            >            cpy #$7e     ;test result
2716 : d0fe            >            bne *       ;trap
2718 : 68              >            pla         ;load status
                       >            cmp_flag ~fzc
2719 : c9fc            >            cmp #(~fzc|$34)&$ff
                       >
271b : d0fe            >            bne *       ;trap
271d : 28              >            plp         ;restore status
                        
                        
                        ; CMP - zp / abs / #
                                set_a $80,0
                       >            load_flag 0
271e : a904            >            lda #0|4
                       >
2720 : 48              >            pha         ;use stack to load status
2721 : a980            >            lda #$80     ;precharge accu
2723 : 28              >            plp
                        
2724 : c50e                     cmp zp7f
                                tst_a $80,fc
2726 : 08              >            php         ;save flags
2727 : 08              >            php
2728 : c980            >            cmp #$80     ;test result
272a : d0fe            >            bne *       ;trap
272c : 68              >            pla         ;load status
                       >            cmp_flag fc
272d : c935            >            cmp #(fc|$34)&$ff
                       >
272f : d0fe            >            bne *       ;trap
2731 : 28              >            plp         ;restore status
                        
                                set_a $7f,0
                       >            load_flag 0
2732 : a904            >            lda #0|4
                       >
2734 : 48              >            pha         ;use stack to load status
2735 : a97f            >            lda #$7f     ;precharge accu
2737 : 28              >            plp
                        
AS65 Assembler for R6502 [1.42].                                     Page   92
--------------------------------- verify.asm ---------------------------------

2738 : c50e                     cmp zp7f
                                tst_a $7f,fzc
273a : 08              >            php         ;save flags
273b : 08              >            php
273c : c97f            >            cmp #$7f     ;test result
273e : d0fe            >            bne *       ;trap
2740 : 68              >            pla         ;load status
                       >            cmp_flag fzc
2741 : c937            >            cmp #(fzc|$34)&$ff
                       >
2743 : d0fe            >            bne *       ;trap
2745 : 28              >            plp         ;restore status
                        
                                set_a $7e,0
                       >            load_flag 0
2746 : a904            >            lda #0|4
                       >
2748 : 48              >            pha         ;use stack to load status
2749 : a97e            >            lda #$7e     ;precharge accu
274b : 28              >            plp
                        
274c : c50e                     cmp zp7f
                                tst_a $7e,fn
274e : 08              >            php         ;save flags
274f : 08              >            php
2750 : c97e            >            cmp #$7e     ;test result
2752 : d0fe            >            bne *       ;trap
2754 : 68              >            pla         ;load status
                       >            cmp_flag fn
2755 : c9b4            >            cmp #(fn|$34)&$ff
                       >
2757 : d0fe            >            bne *       ;trap
2759 : 28              >            plp         ;restore status
                        
                                set_a $80,$ff
                       >            load_flag $ff
275a : a9ff            >            lda #$ff|4
                       >
275c : 48              >            pha         ;use stack to load status
275d : a980            >            lda #$80     ;precharge accu
275f : 28              >            plp
                        
2760 : c50e                     cmp zp7f
                                tst_a $80,~fnz
2762 : 08              >            php         ;save flags
2763 : 08              >            php
2764 : c980            >            cmp #$80     ;test result
2766 : d0fe            >            bne *       ;trap
2768 : 68              >            pla         ;load status
                       >            cmp_flag ~fnz
2769 : c97d            >            cmp #(~fnz|$34)&$ff
                       >
276b : d0fe            >            bne *       ;trap
276d : 28              >            plp         ;restore status
                        
                                set_a $7f,$ff
                       >            load_flag $ff
276e : a9ff            >            lda #$ff|4
                       >
2770 : 48              >            pha         ;use stack to load status
2771 : a97f            >            lda #$7f     ;precharge accu
2773 : 28              >            plp
AS65 Assembler for R6502 [1.42].                                     Page   93
--------------------------------- verify.asm ---------------------------------

                        
2774 : c50e                     cmp zp7f
                                tst_a $7f,~fn
2776 : 08              >            php         ;save flags
2777 : 08              >            php
2778 : c97f            >            cmp #$7f     ;test result
277a : d0fe            >            bne *       ;trap
277c : 68              >            pla         ;load status
                       >            cmp_flag ~fn
277d : c97f            >            cmp #(~fn|$34)&$ff
                       >
277f : d0fe            >            bne *       ;trap
2781 : 28              >            plp         ;restore status
                        
                                set_a $7e,$ff
                       >            load_flag $ff
2782 : a9ff            >            lda #$ff|4
                       >
2784 : 48              >            pha         ;use stack to load status
2785 : a97e            >            lda #$7e     ;precharge accu
2787 : 28              >            plp
                        
2788 : c50e                     cmp zp7f
                                tst_a $7e,~fzc
278a : 08              >            php         ;save flags
278b : 08              >            php
278c : c97e            >            cmp #$7e     ;test result
278e : d0fe            >            bne *       ;trap
2790 : 68              >            pla         ;load status
                       >            cmp_flag ~fzc
2791 : c9fc            >            cmp #(~fzc|$34)&$ff
                       >
2793 : d0fe            >            bne *       ;trap
2795 : 28              >            plp         ;restore status
                        
                        
                                set_a $80,0
                       >            load_flag 0
2796 : a904            >            lda #0|4
                       >
2798 : 48              >            pha         ;use stack to load status
2799 : a980            >            lda #$80     ;precharge accu
279b : 28              >            plp
                        
279c : cd0402                   cmp abs7f
                                tst_a $80,fc
279f : 08              >            php         ;save flags
27a0 : 08              >            php
27a1 : c980            >            cmp #$80     ;test result
27a3 : d0fe            >            bne *       ;trap
27a5 : 68              >            pla         ;load status
                       >            cmp_flag fc
27a6 : c935            >            cmp #(fc|$34)&$ff
                       >
27a8 : d0fe            >            bne *       ;trap
27aa : 28              >            plp         ;restore status
                        
                                set_a $7f,0
                       >            load_flag 0
27ab : a904            >            lda #0|4
                       >
27ad : 48              >            pha         ;use stack to load status
AS65 Assembler for R6502 [1.42].                                     Page   94
--------------------------------- verify.asm ---------------------------------

27ae : a97f            >            lda #$7f     ;precharge accu
27b0 : 28              >            plp
                        
27b1 : cd0402                   cmp abs7f
                                tst_a $7f,fzc
27b4 : 08              >            php         ;save flags
27b5 : 08              >            php
27b6 : c97f            >            cmp #$7f     ;test result
27b8 : d0fe            >            bne *       ;trap
27ba : 68              >            pla         ;load status
                       >            cmp_flag fzc
27bb : c937            >            cmp #(fzc|$34)&$ff
                       >
27bd : d0fe            >            bne *       ;trap
27bf : 28              >            plp         ;restore status
                        
                                set_a $7e,0
                       >            load_flag 0
27c0 : a904            >            lda #0|4
                       >
27c2 : 48              >            pha         ;use stack to load status
27c3 : a97e            >            lda #$7e     ;precharge accu
27c5 : 28              >            plp
                        
27c6 : cd0402                   cmp abs7f
                                tst_a $7e,fn
27c9 : 08              >            php         ;save flags
27ca : 08              >            php
27cb : c97e            >            cmp #$7e     ;test result
27cd : d0fe            >            bne *       ;trap
27cf : 68              >            pla         ;load status
                       >            cmp_flag fn
27d0 : c9b4            >            cmp #(fn|$34)&$ff
                       >
27d2 : d0fe            >            bne *       ;trap
27d4 : 28              >            plp         ;restore status
                        
                                set_a $80,$ff
                       >            load_flag $ff
27d5 : a9ff            >            lda #$ff|4
                       >
27d7 : 48              >            pha         ;use stack to load status
27d8 : a980            >            lda #$80     ;precharge accu
27da : 28              >            plp
                        
27db : cd0402                   cmp abs7f
                                tst_a $80,~fnz
27de : 08              >            php         ;save flags
27df : 08              >            php
27e0 : c980            >            cmp #$80     ;test result
27e2 : d0fe            >            bne *       ;trap
27e4 : 68              >            pla         ;load status
                       >            cmp_flag ~fnz
27e5 : c97d            >            cmp #(~fnz|$34)&$ff
                       >
27e7 : d0fe            >            bne *       ;trap
27e9 : 28              >            plp         ;restore status
                        
                                set_a $7f,$ff
                       >            load_flag $ff
27ea : a9ff            >            lda #$ff|4
                       >
AS65 Assembler for R6502 [1.42].                                     Page   95
--------------------------------- verify.asm ---------------------------------

27ec : 48              >            pha         ;use stack to load status
27ed : a97f            >            lda #$7f     ;precharge accu
27ef : 28              >            plp
                        
27f0 : cd0402                   cmp abs7f
                                tst_a $7f,~fn
27f3 : 08              >            php         ;save flags
27f4 : 08              >            php
27f5 : c97f            >            cmp #$7f     ;test result
27f7 : d0fe            >            bne *       ;trap
27f9 : 68              >            pla         ;load status
                       >            cmp_flag ~fn
27fa : c97f            >            cmp #(~fn|$34)&$ff
                       >
27fc : d0fe            >            bne *       ;trap
27fe : 28              >            plp         ;restore status
                        
                                set_a $7e,$ff
                       >            load_flag $ff
27ff : a9ff            >            lda #$ff|4
                       >
2801 : 48              >            pha         ;use stack to load status
2802 : a97e            >            lda #$7e     ;precharge accu
2804 : 28              >            plp
                        
2805 : cd0402                   cmp abs7f
                                tst_a $7e,~fzc
2808 : 08              >            php         ;save flags
2809 : 08              >            php
280a : c97e            >            cmp #$7e     ;test result
280c : d0fe            >            bne *       ;trap
280e : 68              >            pla         ;load status
                       >            cmp_flag ~fzc
280f : c9fc            >            cmp #(~fzc|$34)&$ff
                       >
2811 : d0fe            >            bne *       ;trap
2813 : 28              >            plp         ;restore status
                        
                        
                                set_a $80,0
                       >            load_flag 0
2814 : a904            >            lda #0|4
                       >
2816 : 48              >            pha         ;use stack to load status
2817 : a980            >            lda #$80     ;precharge accu
2819 : 28              >            plp
                        
281a : c97f                     cmp #$7f
                                tst_a $80,fc
281c : 08              >            php         ;save flags
281d : 08              >            php
281e : c980            >            cmp #$80     ;test result
2820 : d0fe            >            bne *       ;trap
2822 : 68              >            pla         ;load status
                       >            cmp_flag fc
2823 : c935            >            cmp #(fc|$34)&$ff
                       >
2825 : d0fe            >            bne *       ;trap
2827 : 28              >            plp         ;restore status
                        
                                set_a $7f,0
                       >            load_flag 0
AS65 Assembler for R6502 [1.42].                                     Page   96
--------------------------------- verify.asm ---------------------------------

2828 : a904            >            lda #0|4
                       >
282a : 48              >            pha         ;use stack to load status
282b : a97f            >            lda #$7f     ;precharge accu
282d : 28              >            plp
                        
282e : c97f                     cmp #$7f
                                tst_a $7f,fzc
2830 : 08              >            php         ;save flags
2831 : 08              >            php
2832 : c97f            >            cmp #$7f     ;test result
2834 : d0fe            >            bne *       ;trap
2836 : 68              >            pla         ;load status
                       >            cmp_flag fzc
2837 : c937            >            cmp #(fzc|$34)&$ff
                       >
2839 : d0fe            >            bne *       ;trap
283b : 28              >            plp         ;restore status
                        
                                set_a $7e,0
                       >            load_flag 0
283c : a904            >            lda #0|4
                       >
283e : 48              >            pha         ;use stack to load status
283f : a97e            >            lda #$7e     ;precharge accu
2841 : 28              >            plp
                        
2842 : c97f                     cmp #$7f
                                tst_a $7e,fn
2844 : 08              >            php         ;save flags
2845 : 08              >            php
2846 : c97e            >            cmp #$7e     ;test result
2848 : d0fe            >            bne *       ;trap
284a : 68              >            pla         ;load status
                       >            cmp_flag fn
284b : c9b4            >            cmp #(fn|$34)&$ff
                       >
284d : d0fe            >            bne *       ;trap
284f : 28              >            plp         ;restore status
                        
                                set_a $80,$ff
                       >            load_flag $ff
2850 : a9ff            >            lda #$ff|4
                       >
2852 : 48              >            pha         ;use stack to load status
2853 : a980            >            lda #$80     ;precharge accu
2855 : 28              >            plp
                        
2856 : c97f                     cmp #$7f
                                tst_a $80,~fnz
2858 : 08              >            php         ;save flags
2859 : 08              >            php
285a : c980            >            cmp #$80     ;test result
285c : d0fe            >            bne *       ;trap
285e : 68              >            pla         ;load status
                       >            cmp_flag ~fnz
285f : c97d            >            cmp #(~fnz|$34)&$ff
                       >
2861 : d0fe            >            bne *       ;trap
2863 : 28              >            plp         ;restore status
                        
                                set_a $7f,$ff
AS65 Assembler for R6502 [1.42].                                     Page   97
--------------------------------- verify.asm ---------------------------------

                       >            load_flag $ff
2864 : a9ff            >            lda #$ff|4
                       >
2866 : 48              >            pha         ;use stack to load status
2867 : a97f            >            lda #$7f     ;precharge accu
2869 : 28              >            plp
                        
286a : c97f                     cmp #$7f
                                tst_a $7f,~fn
286c : 08              >            php         ;save flags
286d : 08              >            php
286e : c97f            >            cmp #$7f     ;test result
2870 : d0fe            >            bne *       ;trap
2872 : 68              >            pla         ;load status
                       >            cmp_flag ~fn
2873 : c97f            >            cmp #(~fn|$34)&$ff
                       >
2875 : d0fe            >            bne *       ;trap
2877 : 28              >            plp         ;restore status
                        
                                set_a $7e,$ff
                       >            load_flag $ff
2878 : a9ff            >            lda #$ff|4
                       >
287a : 48              >            pha         ;use stack to load status
287b : a97e            >            lda #$7e     ;precharge accu
287d : 28              >            plp
                        
287e : c97f                     cmp #$7f
                                tst_a $7e,~fzc
2880 : 08              >            php         ;save flags
2881 : 08              >            php
2882 : c97e            >            cmp #$7e     ;test result
2884 : d0fe            >            bne *       ;trap
2886 : 68              >            pla         ;load status
                       >            cmp_flag ~fzc
2887 : c9fc            >            cmp #(~fzc|$34)&$ff
                       >
2889 : d0fe            >            bne *       ;trap
288b : 28              >            plp         ;restore status
                        
                        
288c : a204                     ldx #4          ;with indexing by X
                                set_a $80,0
                       >            load_flag 0
288e : a904            >            lda #0|4
                       >
2890 : 48              >            pha         ;use stack to load status
2891 : a980            >            lda #$80     ;precharge accu
2893 : 28              >            plp
                        
2894 : d50a                     cmp zp1,x
                                tst_a $80,fc
2896 : 08              >            php         ;save flags
2897 : 08              >            php
2898 : c980            >            cmp #$80     ;test result
289a : d0fe            >            bne *       ;trap
289c : 68              >            pla         ;load status
                       >            cmp_flag fc
289d : c935            >            cmp #(fc|$34)&$ff
                       >
289f : d0fe            >            bne *       ;trap
AS65 Assembler for R6502 [1.42].                                     Page   98
--------------------------------- verify.asm ---------------------------------

28a1 : 28              >            plp         ;restore status
                        
                                set_a $7f,0
                       >            load_flag 0
28a2 : a904            >            lda #0|4
                       >
28a4 : 48              >            pha         ;use stack to load status
28a5 : a97f            >            lda #$7f     ;precharge accu
28a7 : 28              >            plp
                        
28a8 : d50a                     cmp zp1,x
                                tst_a $7f,fzc
28aa : 08              >            php         ;save flags
28ab : 08              >            php
28ac : c97f            >            cmp #$7f     ;test result
28ae : d0fe            >            bne *       ;trap
28b0 : 68              >            pla         ;load status
                       >            cmp_flag fzc
28b1 : c937            >            cmp #(fzc|$34)&$ff
                       >
28b3 : d0fe            >            bne *       ;trap
28b5 : 28              >            plp         ;restore status
                        
                                set_a $7e,0
                       >            load_flag 0
28b6 : a904            >            lda #0|4
                       >
28b8 : 48              >            pha         ;use stack to load status
28b9 : a97e            >            lda #$7e     ;precharge accu
28bb : 28              >            plp
                        
28bc : d50a                     cmp zp1,x
                                tst_a $7e,fn
28be : 08              >            php         ;save flags
28bf : 08              >            php
28c0 : c97e            >            cmp #$7e     ;test result
28c2 : d0fe            >            bne *       ;trap
28c4 : 68              >            pla         ;load status
                       >            cmp_flag fn
28c5 : c9b4            >            cmp #(fn|$34)&$ff
                       >
28c7 : d0fe            >            bne *       ;trap
28c9 : 28              >            plp         ;restore status
                        
                                set_a $80,$ff
                       >            load_flag $ff
28ca : a9ff            >            lda #$ff|4
                       >
28cc : 48              >            pha         ;use stack to load status
28cd : a980            >            lda #$80     ;precharge accu
28cf : 28              >            plp
                        
28d0 : d50a                     cmp zp1,x
                                tst_a $80,~fnz
28d2 : 08              >            php         ;save flags
28d3 : 08              >            php
28d4 : c980            >            cmp #$80     ;test result
28d6 : d0fe            >            bne *       ;trap
28d8 : 68              >            pla         ;load status
                       >            cmp_flag ~fnz
28d9 : c97d            >            cmp #(~fnz|$34)&$ff
                       >
AS65 Assembler for R6502 [1.42].                                     Page   99
--------------------------------- verify.asm ---------------------------------

28db : d0fe            >            bne *       ;trap
28dd : 28              >            plp         ;restore status
                        
                                set_a $7f,$ff
                       >            load_flag $ff
28de : a9ff            >            lda #$ff|4
                       >
28e0 : 48              >            pha         ;use stack to load status
28e1 : a97f            >            lda #$7f     ;precharge accu
28e3 : 28              >            plp
                        
28e4 : d50a                     cmp zp1,x
                                tst_a $7f,~fn
28e6 : 08              >            php         ;save flags
28e7 : 08              >            php
28e8 : c97f            >            cmp #$7f     ;test result
28ea : d0fe            >            bne *       ;trap
28ec : 68              >            pla         ;load status
                       >            cmp_flag ~fn
28ed : c97f            >            cmp #(~fn|$34)&$ff
                       >
28ef : d0fe            >            bne *       ;trap
28f1 : 28              >            plp         ;restore status
                        
                                set_a $7e,$ff
                       >            load_flag $ff
28f2 : a9ff            >            lda #$ff|4
                       >
28f4 : 48              >            pha         ;use stack to load status
28f5 : a97e            >            lda #$7e     ;precharge accu
28f7 : 28              >            plp
                        
28f8 : d50a                     cmp zp1,x
                                tst_a $7e,~fzc
28fa : 08              >            php         ;save flags
28fb : 08              >            php
28fc : c97e            >            cmp #$7e     ;test result
28fe : d0fe            >            bne *       ;trap
2900 : 68              >            pla         ;load status
                       >            cmp_flag ~fzc
2901 : c9fc            >            cmp #(~fzc|$34)&$ff
                       >
2903 : d0fe            >            bne *       ;trap
2905 : 28              >            plp         ;restore status
                        
                        
                                set_a $80,0
                       >            load_flag 0
2906 : a904            >            lda #0|4
                       >
2908 : 48              >            pha         ;use stack to load status
2909 : a980            >            lda #$80     ;precharge accu
290b : 28              >            plp
                        
290c : dd0002                   cmp abs1,x
                                tst_a $80,fc
290f : 08              >            php         ;save flags
2910 : 08              >            php
2911 : c980            >            cmp #$80     ;test result
2913 : d0fe            >            bne *       ;trap
2915 : 68              >            pla         ;load status
                       >            cmp_flag fc
AS65 Assembler for R6502 [1.42].                                     Page  100
--------------------------------- verify.asm ---------------------------------

2916 : c935            >            cmp #(fc|$34)&$ff
                       >
2918 : d0fe            >            bne *       ;trap
291a : 28              >            plp         ;restore status
                        
                                set_a $7f,0
                       >            load_flag 0
291b : a904            >            lda #0|4
                       >
291d : 48              >            pha         ;use stack to load status
291e : a97f            >            lda #$7f     ;precharge accu
2920 : 28              >            plp
                        
2921 : dd0002                   cmp abs1,x
                                tst_a $7f,fzc
2924 : 08              >            php         ;save flags
2925 : 08              >            php
2926 : c97f            >            cmp #$7f     ;test result
2928 : d0fe            >            bne *       ;trap
292a : 68              >            pla         ;load status
                       >            cmp_flag fzc
292b : c937            >            cmp #(fzc|$34)&$ff
                       >
292d : d0fe            >            bne *       ;trap
292f : 28              >            plp         ;restore status
                        
                                set_a $7e,0
                       >            load_flag 0
2930 : a904            >            lda #0|4
                       >
2932 : 48              >            pha         ;use stack to load status
2933 : a97e            >            lda #$7e     ;precharge accu
2935 : 28              >            plp
                        
2936 : dd0002                   cmp abs1,x
                                tst_a $7e,fn
2939 : 08              >            php         ;save flags
293a : 08              >            php
293b : c97e            >            cmp #$7e     ;test result
293d : d0fe            >            bne *       ;trap
293f : 68              >            pla         ;load status
                       >            cmp_flag fn
2940 : c9b4            >            cmp #(fn|$34)&$ff
                       >
2942 : d0fe            >            bne *       ;trap
2944 : 28              >            plp         ;restore status
                        
                                set_a $80,$ff
                       >            load_flag $ff
2945 : a9ff            >            lda #$ff|4
                       >
2947 : 48              >            pha         ;use stack to load status
2948 : a980            >            lda #$80     ;precharge accu
294a : 28              >            plp
                        
294b : dd0002                   cmp abs1,x
                                tst_a $80,~fnz
294e : 08              >            php         ;save flags
294f : 08              >            php
2950 : c980            >            cmp #$80     ;test result
2952 : d0fe            >            bne *       ;trap
2954 : 68              >            pla         ;load status
AS65 Assembler for R6502 [1.42].                                     Page  101
--------------------------------- verify.asm ---------------------------------

                       >            cmp_flag ~fnz
2955 : c97d            >            cmp #(~fnz|$34)&$ff
                       >
2957 : d0fe            >            bne *       ;trap
2959 : 28              >            plp         ;restore status
                        
                                set_a $7f,$ff
                       >            load_flag $ff
295a : a9ff            >            lda #$ff|4
                       >
295c : 48              >            pha         ;use stack to load status
295d : a97f            >            lda #$7f     ;precharge accu
295f : 28              >            plp
                        
2960 : dd0002                   cmp abs1,x
                                tst_a $7f,~fn
2963 : 08              >            php         ;save flags
2964 : 08              >            php
2965 : c97f            >            cmp #$7f     ;test result
2967 : d0fe            >            bne *       ;trap
2969 : 68              >            pla         ;load status
                       >            cmp_flag ~fn
296a : c97f            >            cmp #(~fn|$34)&$ff
                       >
296c : d0fe            >            bne *       ;trap
296e : 28              >            plp         ;restore status
                        
                                set_a $7e,$ff
                       >            load_flag $ff
296f : a9ff            >            lda #$ff|4
                       >
2971 : 48              >            pha         ;use stack to load status
2972 : a97e            >            lda #$7e     ;precharge accu
2974 : 28              >            plp
                        
2975 : dd0002                   cmp abs1,x
                                tst_a $7e,~fzc
2978 : 08              >            php         ;save flags
2979 : 08              >            php
297a : c97e            >            cmp #$7e     ;test result
297c : d0fe            >            bne *       ;trap
297e : 68              >            pla         ;load status
                       >            cmp_flag ~fzc
297f : c9fc            >            cmp #(~fzc|$34)&$ff
                       >
2981 : d0fe            >            bne *       ;trap
2983 : 28              >            plp         ;restore status
                        
                        
2984 : a004                     ldy #4          ;with indexing by Y
2986 : a208                     ldx #8          ;with indexed indirect
                                set_a $80,0
                       >            load_flag 0
2988 : a904            >            lda #0|4
                       >
298a : 48              >            pha         ;use stack to load status
298b : a980            >            lda #$80     ;precharge accu
298d : 28              >            plp
                        
298e : d90002                   cmp abs1,y
                                tst_a $80,fc
2991 : 08              >            php         ;save flags
AS65 Assembler for R6502 [1.42].                                     Page  102
--------------------------------- verify.asm ---------------------------------

2992 : 08              >            php
2993 : c980            >            cmp #$80     ;test result
2995 : d0fe            >            bne *       ;trap
2997 : 68              >            pla         ;load status
                       >            cmp_flag fc
2998 : c935            >            cmp #(fc|$34)&$ff
                       >
299a : d0fe            >            bne *       ;trap
299c : 28              >            plp         ;restore status
                        
                                set_a $7f,0
                       >            load_flag 0
299d : a904            >            lda #0|4
                       >
299f : 48              >            pha         ;use stack to load status
29a0 : a97f            >            lda #$7f     ;precharge accu
29a2 : 28              >            plp
                        
29a3 : d90002                   cmp abs1,y
                                tst_a $7f,fzc
29a6 : 08              >            php         ;save flags
29a7 : 08              >            php
29a8 : c97f            >            cmp #$7f     ;test result
29aa : d0fe            >            bne *       ;trap
29ac : 68              >            pla         ;load status
                       >            cmp_flag fzc
29ad : c937            >            cmp #(fzc|$34)&$ff
                       >
29af : d0fe            >            bne *       ;trap
29b1 : 28              >            plp         ;restore status
                        
                                set_a $7e,0
                       >            load_flag 0
29b2 : a904            >            lda #0|4
                       >
29b4 : 48              >            pha         ;use stack to load status
29b5 : a97e            >            lda #$7e     ;precharge accu
29b7 : 28              >            plp
                        
29b8 : d90002                   cmp abs1,y
                                tst_a $7e,fn
29bb : 08              >            php         ;save flags
29bc : 08              >            php
29bd : c97e            >            cmp #$7e     ;test result
29bf : d0fe            >            bne *       ;trap
29c1 : 68              >            pla         ;load status
                       >            cmp_flag fn
29c2 : c9b4            >            cmp #(fn|$34)&$ff
                       >
29c4 : d0fe            >            bne *       ;trap
29c6 : 28              >            plp         ;restore status
                        
                                set_a $80,$ff
                       >            load_flag $ff
29c7 : a9ff            >            lda #$ff|4
                       >
29c9 : 48              >            pha         ;use stack to load status
29ca : a980            >            lda #$80     ;precharge accu
29cc : 28              >            plp
                        
29cd : d90002                   cmp abs1,y
                                tst_a $80,~fnz
AS65 Assembler for R6502 [1.42].                                     Page  103
--------------------------------- verify.asm ---------------------------------

29d0 : 08              >            php         ;save flags
29d1 : 08              >            php
29d2 : c980            >            cmp #$80     ;test result
29d4 : d0fe            >            bne *       ;trap
29d6 : 68              >            pla         ;load status
                       >            cmp_flag ~fnz
29d7 : c97d            >            cmp #(~fnz|$34)&$ff
                       >
29d9 : d0fe            >            bne *       ;trap
29db : 28              >            plp         ;restore status
                        
                                set_a $7f,$ff
                       >            load_flag $ff
29dc : a9ff            >            lda #$ff|4
                       >
29de : 48              >            pha         ;use stack to load status
29df : a97f            >            lda #$7f     ;precharge accu
29e1 : 28              >            plp
                        
29e2 : d90002                   cmp abs1,y
                                tst_a $7f,~fn
29e5 : 08              >            php         ;save flags
29e6 : 08              >            php
29e7 : c97f            >            cmp #$7f     ;test result
29e9 : d0fe            >            bne *       ;trap
29eb : 68              >            pla         ;load status
                       >            cmp_flag ~fn
29ec : c97f            >            cmp #(~fn|$34)&$ff
                       >
29ee : d0fe            >            bne *       ;trap
29f0 : 28              >            plp         ;restore status
                        
                                set_a $7e,$ff
                       >            load_flag $ff
29f1 : a9ff            >            lda #$ff|4
                       >
29f3 : 48              >            pha         ;use stack to load status
29f4 : a97e            >            lda #$7e     ;precharge accu
29f6 : 28              >            plp
                        
29f7 : d90002                   cmp abs1,y
                                tst_a $7e,~fzc
29fa : 08              >            php         ;save flags
29fb : 08              >            php
29fc : c97e            >            cmp #$7e     ;test result
29fe : d0fe            >            bne *       ;trap
2a00 : 68              >            pla         ;load status
                       >            cmp_flag ~fzc
2a01 : c9fc            >            cmp #(~fzc|$34)&$ff
                       >
2a03 : d0fe            >            bne *       ;trap
2a05 : 28              >            plp         ;restore status
                        
                        
                                set_a $80,0
                       >            load_flag 0
2a06 : a904            >            lda #0|4
                       >
2a08 : 48              >            pha         ;use stack to load status
2a09 : a980            >            lda #$80     ;precharge accu
2a0b : 28              >            plp
                        
AS65 Assembler for R6502 [1.42].                                     Page  104
--------------------------------- verify.asm ---------------------------------

2a0c : c120                     cmp (ind1,x)
                                tst_a $80,fc
2a0e : 08              >            php         ;save flags
2a0f : 08              >            php
2a10 : c980            >            cmp #$80     ;test result
2a12 : d0fe            >            bne *       ;trap
2a14 : 68              >            pla         ;load status
                       >            cmp_flag fc
2a15 : c935            >            cmp #(fc|$34)&$ff
                       >
2a17 : d0fe            >            bne *       ;trap
2a19 : 28              >            plp         ;restore status
                        
                                set_a $7f,0
                       >            load_flag 0
2a1a : a904            >            lda #0|4
                       >
2a1c : 48              >            pha         ;use stack to load status
2a1d : a97f            >            lda #$7f     ;precharge accu
2a1f : 28              >            plp
                        
2a20 : c120                     cmp (ind1,x)
                                tst_a $7f,fzc
2a22 : 08              >            php         ;save flags
2a23 : 08              >            php
2a24 : c97f            >            cmp #$7f     ;test result
2a26 : d0fe            >            bne *       ;trap
2a28 : 68              >            pla         ;load status
                       >            cmp_flag fzc
2a29 : c937            >            cmp #(fzc|$34)&$ff
                       >
2a2b : d0fe            >            bne *       ;trap
2a2d : 28              >            plp         ;restore status
                        
                                set_a $7e,0
                       >            load_flag 0
2a2e : a904            >            lda #0|4
                       >
2a30 : 48              >            pha         ;use stack to load status
2a31 : a97e            >            lda #$7e     ;precharge accu
2a33 : 28              >            plp
                        
2a34 : c120                     cmp (ind1,x)
                                tst_a $7e,fn
2a36 : 08              >            php         ;save flags
2a37 : 08              >            php
2a38 : c97e            >            cmp #$7e     ;test result
2a3a : d0fe            >            bne *       ;trap
2a3c : 68              >            pla         ;load status
                       >            cmp_flag fn
2a3d : c9b4            >            cmp #(fn|$34)&$ff
                       >
2a3f : d0fe            >            bne *       ;trap
2a41 : 28              >            plp         ;restore status
                        
                                set_a $80,$ff
                       >            load_flag $ff
2a42 : a9ff            >            lda #$ff|4
                       >
2a44 : 48              >            pha         ;use stack to load status
2a45 : a980            >            lda #$80     ;precharge accu
2a47 : 28              >            plp
AS65 Assembler for R6502 [1.42].                                     Page  105
--------------------------------- verify.asm ---------------------------------

                        
2a48 : c120                     cmp (ind1,x)
                                tst_a $80,~fnz
2a4a : 08              >            php         ;save flags
2a4b : 08              >            php
2a4c : c980            >            cmp #$80     ;test result
2a4e : d0fe            >            bne *       ;trap
2a50 : 68              >            pla         ;load status
                       >            cmp_flag ~fnz
2a51 : c97d            >            cmp #(~fnz|$34)&$ff
                       >
2a53 : d0fe            >            bne *       ;trap
2a55 : 28              >            plp         ;restore status
                        
                                set_a $7f,$ff
                       >            load_flag $ff
2a56 : a9ff            >            lda #$ff|4
                       >
2a58 : 48              >            pha         ;use stack to load status
2a59 : a97f            >            lda #$7f     ;precharge accu
2a5b : 28              >            plp
                        
2a5c : c120                     cmp (ind1,x)
                                tst_a $7f,~fn
2a5e : 08              >            php         ;save flags
2a5f : 08              >            php
2a60 : c97f            >            cmp #$7f     ;test result
2a62 : d0fe            >            bne *       ;trap
2a64 : 68              >            pla         ;load status
                       >            cmp_flag ~fn
2a65 : c97f            >            cmp #(~fn|$34)&$ff
                       >
2a67 : d0fe            >            bne *       ;trap
2a69 : 28              >            plp         ;restore status
                        
                                set_a $7e,$ff
                       >            load_flag $ff
2a6a : a9ff            >            lda #$ff|4
                       >
2a6c : 48              >            pha         ;use stack to load status
2a6d : a97e            >            lda #$7e     ;precharge accu
2a6f : 28              >            plp
                        
2a70 : c120                     cmp (ind1,x)
                                tst_a $7e,~fzc
2a72 : 08              >            php         ;save flags
2a73 : 08              >            php
2a74 : c97e            >            cmp #$7e     ;test result
2a76 : d0fe            >            bne *       ;trap
2a78 : 68              >            pla         ;load status
                       >            cmp_flag ~fzc
2a79 : c9fc            >            cmp #(~fzc|$34)&$ff
                       >
2a7b : d0fe            >            bne *       ;trap
2a7d : 28              >            plp         ;restore status
                        
                        
                                set_a $80,0
                       >            load_flag 0
2a7e : a904            >            lda #0|4
                       >
2a80 : 48              >            pha         ;use stack to load status
AS65 Assembler for R6502 [1.42].                                     Page  106
--------------------------------- verify.asm ---------------------------------

2a81 : a980            >            lda #$80     ;precharge accu
2a83 : 28              >            plp
                        
2a84 : d120                     cmp (ind1),y
                                tst_a $80,fc
2a86 : 08              >            php         ;save flags
2a87 : 08              >            php
2a88 : c980            >            cmp #$80     ;test result
2a8a : d0fe            >            bne *       ;trap
2a8c : 68              >            pla         ;load status
                       >            cmp_flag fc
2a8d : c935            >            cmp #(fc|$34)&$ff
                       >
2a8f : d0fe            >            bne *       ;trap
2a91 : 28              >            plp         ;restore status
                        
                                set_a $7f,0
                       >            load_flag 0
2a92 : a904            >            lda #0|4
                       >
2a94 : 48              >            pha         ;use stack to load status
2a95 : a97f            >            lda #$7f     ;precharge accu
2a97 : 28              >            plp
                        
2a98 : d120                     cmp (ind1),y
                                tst_a $7f,fzc
2a9a : 08              >            php         ;save flags
2a9b : 08              >            php
2a9c : c97f            >            cmp #$7f     ;test result
2a9e : d0fe            >            bne *       ;trap
2aa0 : 68              >            pla         ;load status
                       >            cmp_flag fzc
2aa1 : c937            >            cmp #(fzc|$34)&$ff
                       >
2aa3 : d0fe            >            bne *       ;trap
2aa5 : 28              >            plp         ;restore status
                        
                                set_a $7e,0
                       >            load_flag 0
2aa6 : a904            >            lda #0|4
                       >
2aa8 : 48              >            pha         ;use stack to load status
2aa9 : a97e            >            lda #$7e     ;precharge accu
2aab : 28              >            plp
                        
2aac : d120                     cmp (ind1),y
                                tst_a $7e,fn
2aae : 08              >            php         ;save flags
2aaf : 08              >            php
2ab0 : c97e            >            cmp #$7e     ;test result
2ab2 : d0fe            >            bne *       ;trap
2ab4 : 68              >            pla         ;load status
                       >            cmp_flag fn
2ab5 : c9b4            >            cmp #(fn|$34)&$ff
                       >
2ab7 : d0fe            >            bne *       ;trap
2ab9 : 28              >            plp         ;restore status
                        
                                set_a $80,$ff
                       >            load_flag $ff
2aba : a9ff            >            lda #$ff|4
                       >
AS65 Assembler for R6502 [1.42].                                     Page  107
--------------------------------- verify.asm ---------------------------------

2abc : 48              >            pha         ;use stack to load status
2abd : a980            >            lda #$80     ;precharge accu
2abf : 28              >            plp
                        
2ac0 : d120                     cmp (ind1),y
                                tst_a $80,~fnz
2ac2 : 08              >            php         ;save flags
2ac3 : 08              >            php
2ac4 : c980            >            cmp #$80     ;test result
2ac6 : d0fe            >            bne *       ;trap
2ac8 : 68              >            pla         ;load status
                       >            cmp_flag ~fnz
2ac9 : c97d            >            cmp #(~fnz|$34)&$ff
                       >
2acb : d0fe            >            bne *       ;trap
2acd : 28              >            plp         ;restore status
                        
                                set_a $7f,$ff
                       >            load_flag $ff
2ace : a9ff            >            lda #$ff|4
                       >
2ad0 : 48              >            pha         ;use stack to load status
2ad1 : a97f            >            lda #$7f     ;precharge accu
2ad3 : 28              >            plp
                        
2ad4 : d120                     cmp (ind1),y
                                tst_a $7f,~fn
2ad6 : 08              >            php         ;save flags
2ad7 : 08              >            php
2ad8 : c97f            >            cmp #$7f     ;test result
2ada : d0fe            >            bne *       ;trap
2adc : 68              >            pla         ;load status
                       >            cmp_flag ~fn
2add : c97f            >            cmp #(~fn|$34)&$ff
                       >
2adf : d0fe            >            bne *       ;trap
2ae1 : 28              >            plp         ;restore status
                        
                                set_a $7e,$ff
                       >            load_flag $ff
2ae2 : a9ff            >            lda #$ff|4
                       >
2ae4 : 48              >            pha         ;use stack to load status
2ae5 : a97e            >            lda #$7e     ;precharge accu
2ae7 : 28              >            plp
                        
2ae8 : d120                     cmp (ind1),y
                                tst_a $7e,~fzc
2aea : 08              >            php         ;save flags
2aeb : 08              >            php
2aec : c97e            >            cmp #$7e     ;test result
2aee : d0fe            >            bne *       ;trap
2af0 : 68              >            pla         ;load status
                       >            cmp_flag ~fzc
2af1 : c9fc            >            cmp #(~fzc|$34)&$ff
                       >
2af3 : d0fe            >            bne *       ;trap
2af5 : 28              >            plp         ;restore status
                        
                        
                        ; testing shifts - ASL LSR ROL ROR all addressing mode
                        ; shifts - accumulator
AS65 Assembler for R6502 [1.42].                                     Page  108
--------------------------------- verify.asm ---------------------------------

2af6 : a203                     ldx #3
2af8 :                  tasl
                                set_ax zp1,0
                       >            load_flag 0
2af8 : a904            >            lda #0|4
                       >
2afa : 48              >            pha         ;use stack to load status
2afb : b50a            >            lda zp1,x    ;precharge accu
2afd : 28              >            plp
                        
2afe : 0a                       asl a
                                tst_ax rASL,fASL,0
2aff : 08              >            php         ;save flags
2b00 : dd0902          >            cmp rASL,x    ;test result
2b03 : d0fe            >            bne *       ;trap
2b05 : 68              >            pla         ;load status
                       >            eor_flag 0
2b06 : 4934            >            eor #(0|$34)
                       >
2b08 : dd1902          >            cmp fASL,x    ;test flags
2b0b : d0fe            >            bne *       ;trap
                        
2b0d : ca                       dex
2b0e : 10e8                     bpl tasl
2b10 : a203                     ldx #3
2b12 :                  tasl1
                                set_ax zp1,$ff
                       >            load_flag $ff
2b12 : a9ff            >            lda #$ff|4
                       >
2b14 : 48              >            pha         ;use stack to load status
2b15 : b50a            >            lda zp1,x    ;precharge accu
2b17 : 28              >            plp
                        
2b18 : 0a                       asl a
                                tst_ax rASL,fASL,$ff-fnzc
2b19 : 08              >            php         ;save flags
2b1a : dd0902          >            cmp rASL,x    ;test result
2b1d : d0fe            >            bne *       ;trap
2b1f : 68              >            pla         ;load status
                       >            eor_flag $ff-fnzc
2b20 : 497c            >            eor #($ff-fnzc|$34)
                       >
2b22 : dd1902          >            cmp fASL,x    ;test flags
2b25 : d0fe            >            bne *       ;trap
                        
2b27 : ca                       dex
2b28 : 10e8                     bpl tasl1
                        
2b2a : a203                     ldx #3
2b2c :                  tlsr
                                set_ax zp1,0
                       >            load_flag 0
2b2c : a904            >            lda #0|4
                       >
2b2e : 48              >            pha         ;use stack to load status
2b2f : b50a            >            lda zp1,x    ;precharge accu
2b31 : 28              >            plp
                        
2b32 : 4a                       lsr a
                                tst_ax rLSR,fLSR,0
2b33 : 08              >            php         ;save flags
AS65 Assembler for R6502 [1.42].                                     Page  109
--------------------------------- verify.asm ---------------------------------

2b34 : dd1102          >            cmp rLSR,x    ;test result
2b37 : d0fe            >            bne *       ;trap
2b39 : 68              >            pla         ;load status
                       >            eor_flag 0
2b3a : 4934            >            eor #(0|$34)
                       >
2b3c : dd2102          >            cmp fLSR,x    ;test flags
2b3f : d0fe            >            bne *       ;trap
                        
2b41 : ca                       dex
2b42 : 10e8                     bpl tlsr
2b44 : a203                     ldx #3
2b46 :                  tlsr1
                                set_ax zp1,$ff
                       >            load_flag $ff
2b46 : a9ff            >            lda #$ff|4
                       >
2b48 : 48              >            pha         ;use stack to load status
2b49 : b50a            >            lda zp1,x    ;precharge accu
2b4b : 28              >            plp
                        
2b4c : 4a                       lsr a
                                tst_ax rLSR,fLSR,$ff-fnzc
2b4d : 08              >            php         ;save flags
2b4e : dd1102          >            cmp rLSR,x    ;test result
2b51 : d0fe            >            bne *       ;trap
2b53 : 68              >            pla         ;load status
                       >            eor_flag $ff-fnzc
2b54 : 497c            >            eor #($ff-fnzc|$34)
                       >
2b56 : dd2102          >            cmp fLSR,x    ;test flags
2b59 : d0fe            >            bne *       ;trap
                        
2b5b : ca                       dex
2b5c : 10e8                     bpl tlsr1
                        
2b5e : a203                     ldx #3
2b60 :                  trol
                                set_ax zp1,0
                       >            load_flag 0
2b60 : a904            >            lda #0|4
                       >
2b62 : 48              >            pha         ;use stack to load status
2b63 : b50a            >            lda zp1,x    ;precharge accu
2b65 : 28              >            plp
                        
2b66 : 2a                       rol a
                                tst_ax rROL,fROL,0
2b67 : 08              >            php         ;save flags
2b68 : dd0902          >            cmp rROL,x    ;test result
2b6b : d0fe            >            bne *       ;trap
2b6d : 68              >            pla         ;load status
                       >            eor_flag 0
2b6e : 4934            >            eor #(0|$34)
                       >
2b70 : dd1902          >            cmp fROL,x    ;test flags
2b73 : d0fe            >            bne *       ;trap
                        
2b75 : ca                       dex
2b76 : 10e8                     bpl trol
2b78 : a203                     ldx #3
2b7a :                  trol1
AS65 Assembler for R6502 [1.42].                                     Page  110
--------------------------------- verify.asm ---------------------------------

                                set_ax zp1,$ff-fc
                       >            load_flag $ff-fc
2b7a : a9fe            >            lda #$ff-fc|4
                       >
2b7c : 48              >            pha         ;use stack to load status
2b7d : b50a            >            lda zp1,x    ;precharge accu
2b7f : 28              >            plp
                        
2b80 : 2a                       rol a
                                tst_ax rROL,fROL,$ff-fnzc
2b81 : 08              >            php         ;save flags
2b82 : dd0902          >            cmp rROL,x    ;test result
2b85 : d0fe            >            bne *       ;trap
2b87 : 68              >            pla         ;load status
                       >            eor_flag $ff-fnzc
2b88 : 497c            >            eor #($ff-fnzc|$34)
                       >
2b8a : dd1902          >            cmp fROL,x    ;test flags
2b8d : d0fe            >            bne *       ;trap
                        
2b8f : ca                       dex
2b90 : 10e8                     bpl trol1
                        
2b92 : a203                     ldx #3
2b94 :                  trolc
                                set_ax zp1,fc
                       >            load_flag fc
2b94 : a905            >            lda #fc|4
                       >
2b96 : 48              >            pha         ;use stack to load status
2b97 : b50a            >            lda zp1,x    ;precharge accu
2b99 : 28              >            plp
                        
2b9a : 2a                       rol a
                                tst_ax rROLc,fROLc,0
2b9b : 08              >            php         ;save flags
2b9c : dd0d02          >            cmp rROLc,x    ;test result
2b9f : d0fe            >            bne *       ;trap
2ba1 : 68              >            pla         ;load status
                       >            eor_flag 0
2ba2 : 4934            >            eor #(0|$34)
                       >
2ba4 : dd1d02          >            cmp fROLc,x    ;test flags
2ba7 : d0fe            >            bne *       ;trap
                        
2ba9 : ca                       dex
2baa : 10e8                     bpl trolc
2bac : a203                     ldx #3
2bae :                  trolc1
                                set_ax zp1,$ff
                       >            load_flag $ff
2bae : a9ff            >            lda #$ff|4
                       >
2bb0 : 48              >            pha         ;use stack to load status
2bb1 : b50a            >            lda zp1,x    ;precharge accu
2bb3 : 28              >            plp
                        
2bb4 : 2a                       rol a
                                tst_ax rROLc,fROLc,$ff-fnzc
2bb5 : 08              >            php         ;save flags
2bb6 : dd0d02          >            cmp rROLc,x    ;test result
2bb9 : d0fe            >            bne *       ;trap
AS65 Assembler for R6502 [1.42].                                     Page  111
--------------------------------- verify.asm ---------------------------------

2bbb : 68              >            pla         ;load status
                       >            eor_flag $ff-fnzc
2bbc : 497c            >            eor #($ff-fnzc|$34)
                       >
2bbe : dd1d02          >            cmp fROLc,x    ;test flags
2bc1 : d0fe            >            bne *       ;trap
                        
2bc3 : ca                       dex
2bc4 : 10e8                     bpl trolc1
                        
2bc6 : a203                     ldx #3
2bc8 :                  tror
                                set_ax zp1,0
                       >            load_flag 0
2bc8 : a904            >            lda #0|4
                       >
2bca : 48              >            pha         ;use stack to load status
2bcb : b50a            >            lda zp1,x    ;precharge accu
2bcd : 28              >            plp
                        
2bce : 6a                       ror a
                                tst_ax rROR,fROR,0
2bcf : 08              >            php         ;save flags
2bd0 : dd1102          >            cmp rROR,x    ;test result
2bd3 : d0fe            >            bne *       ;trap
2bd5 : 68              >            pla         ;load status
                       >            eor_flag 0
2bd6 : 4934            >            eor #(0|$34)
                       >
2bd8 : dd2102          >            cmp fROR,x    ;test flags
2bdb : d0fe            >            bne *       ;trap
                        
2bdd : ca                       dex
2bde : 10e8                     bpl tror
2be0 : a203                     ldx #3
2be2 :                  tror1
                                set_ax zp1,$ff-fc
                       >            load_flag $ff-fc
2be2 : a9fe            >            lda #$ff-fc|4
                       >
2be4 : 48              >            pha         ;use stack to load status
2be5 : b50a            >            lda zp1,x    ;precharge accu
2be7 : 28              >            plp
                        
2be8 : 6a                       ror a
                                tst_ax rROR,fROR,$ff-fnzc
2be9 : 08              >            php         ;save flags
2bea : dd1102          >            cmp rROR,x    ;test result
2bed : d0fe            >            bne *       ;trap
2bef : 68              >            pla         ;load status
                       >            eor_flag $ff-fnzc
2bf0 : 497c            >            eor #($ff-fnzc|$34)
                       >
2bf2 : dd2102          >            cmp fROR,x    ;test flags
2bf5 : d0fe            >            bne *       ;trap
                        
2bf7 : ca                       dex
2bf8 : 10e8                     bpl tror1
                        
2bfa : a203                     ldx #3
2bfc :                  trorc
                                set_ax zp1,fc
AS65 Assembler for R6502 [1.42].                                     Page  112
--------------------------------- verify.asm ---------------------------------

                       >            load_flag fc
2bfc : a905            >            lda #fc|4
                       >
2bfe : 48              >            pha         ;use stack to load status
2bff : b50a            >            lda zp1,x    ;precharge accu
2c01 : 28              >            plp
                        
2c02 : 6a                       ror a
                                tst_ax rRORc,fRORc,0
2c03 : 08              >            php         ;save flags
2c04 : dd1502          >            cmp rRORc,x    ;test result
2c07 : d0fe            >            bne *       ;trap
2c09 : 68              >            pla         ;load status
                       >            eor_flag 0
2c0a : 4934            >            eor #(0|$34)
                       >
2c0c : dd2502          >            cmp fRORc,x    ;test flags
2c0f : d0fe            >            bne *       ;trap
                        
2c11 : ca                       dex
2c12 : 10e8                     bpl trorc
2c14 : a203                     ldx #3
2c16 :                  trorc1
                                set_ax zp1,$ff
                       >            load_flag $ff
2c16 : a9ff            >            lda #$ff|4
                       >
2c18 : 48              >            pha         ;use stack to load status
2c19 : b50a            >            lda zp1,x    ;precharge accu
2c1b : 28              >            plp
                        
2c1c : 6a                       ror a
                                tst_ax rRORc,fRORc,$ff-fnzc
2c1d : 08              >            php         ;save flags
2c1e : dd1502          >            cmp rRORc,x    ;test result
2c21 : d0fe            >            bne *       ;trap
2c23 : 68              >            pla         ;load status
                       >            eor_flag $ff-fnzc
2c24 : 497c            >            eor #($ff-fnzc|$34)
                       >
2c26 : dd2502          >            cmp fRORc,x    ;test flags
2c29 : d0fe            >            bne *       ;trap
                        
2c2b : ca                       dex
2c2c : 10e8                     bpl trorc1
                        
                        ; shifts - zeropage
2c2e : a203                     ldx #3
2c30 :                  tasl2
                                set_z zp1,0
                       >            load_flag 0
2c30 : a904            >            lda #0|4
                       >
2c32 : 48              >            pha         ;use stack to load status
2c33 : b50a            >            lda zp1,x    ;load to zeropage
2c35 : 850f            >            sta zpt
2c37 : 28              >            plp
                        
2c38 : 060f                     asl zpt
                                tst_z rASL,fASL,0
2c3a : 08              >            php         ;save flags
2c3b : a50f            >            lda zpt
AS65 Assembler for R6502 [1.42].                                     Page  113
--------------------------------- verify.asm ---------------------------------

2c3d : dd0902          >            cmp rASL,x    ;test result
2c40 : d0fe            >            bne *       ;trap
2c42 : 68              >            pla         ;load status
                       >            eor_flag 0
2c43 : 4934            >            eor #(0|$34)
                       >
2c45 : dd1902          >            cmp fASL,x    ;test flags
2c48 : d0fe            >            bne *       ;trap
                        
2c4a : ca                       dex
2c4b : 10e3                     bpl tasl2
2c4d : a203                     ldx #3
2c4f :                  tasl3
                                set_z zp1,$ff
                       >            load_flag $ff
2c4f : a9ff            >            lda #$ff|4
                       >
2c51 : 48              >            pha         ;use stack to load status
2c52 : b50a            >            lda zp1,x    ;load to zeropage
2c54 : 850f            >            sta zpt
2c56 : 28              >            plp
                        
2c57 : 060f                     asl zpt
                                tst_z rASL,fASL,$ff-fnzc
2c59 : 08              >            php         ;save flags
2c5a : a50f            >            lda zpt
2c5c : dd0902          >            cmp rASL,x    ;test result
2c5f : d0fe            >            bne *       ;trap
2c61 : 68              >            pla         ;load status
                       >            eor_flag $ff-fnzc
2c62 : 497c            >            eor #($ff-fnzc|$34)
                       >
2c64 : dd1902          >            cmp fASL,x    ;test flags
2c67 : d0fe            >            bne *       ;trap
                        
2c69 : ca                       dex
2c6a : 10e3                     bpl tasl3
                        
2c6c : a203                     ldx #3
2c6e :                  tlsr2
                                set_z zp1,0
                       >            load_flag 0
2c6e : a904            >            lda #0|4
                       >
2c70 : 48              >            pha         ;use stack to load status
2c71 : b50a            >            lda zp1,x    ;load to zeropage
2c73 : 850f            >            sta zpt
2c75 : 28              >            plp
                        
2c76 : 460f                     lsr zpt
                                tst_z rLSR,fLSR,0
2c78 : 08              >            php         ;save flags
2c79 : a50f            >            lda zpt
2c7b : dd1102          >            cmp rLSR,x    ;test result
2c7e : d0fe            >            bne *       ;trap
2c80 : 68              >            pla         ;load status
                       >            eor_flag 0
2c81 : 4934            >            eor #(0|$34)
                       >
2c83 : dd2102          >            cmp fLSR,x    ;test flags
2c86 : d0fe            >            bne *       ;trap
                        
AS65 Assembler for R6502 [1.42].                                     Page  114
--------------------------------- verify.asm ---------------------------------

2c88 : ca                       dex
2c89 : 10e3                     bpl tlsr2
2c8b : a203                     ldx #3
2c8d :                  tlsr3
                                set_z zp1,$ff
                       >            load_flag $ff
2c8d : a9ff            >            lda #$ff|4
                       >
2c8f : 48              >            pha         ;use stack to load status
2c90 : b50a            >            lda zp1,x    ;load to zeropage
2c92 : 850f            >            sta zpt
2c94 : 28              >            plp
                        
2c95 : 460f                     lsr zpt
                                tst_z rLSR,fLSR,$ff-fnzc
2c97 : 08              >            php         ;save flags
2c98 : a50f            >            lda zpt
2c9a : dd1102          >            cmp rLSR,x    ;test result
2c9d : d0fe            >            bne *       ;trap
2c9f : 68              >            pla         ;load status
                       >            eor_flag $ff-fnzc
2ca0 : 497c            >            eor #($ff-fnzc|$34)
                       >
2ca2 : dd2102          >            cmp fLSR,x    ;test flags
2ca5 : d0fe            >            bne *       ;trap
                        
2ca7 : ca                       dex
2ca8 : 10e3                     bpl tlsr3
                        
2caa : a203                     ldx #3
2cac :                  trol2
                                set_z zp1,0
                       >            load_flag 0
2cac : a904            >            lda #0|4
                       >
2cae : 48              >            pha         ;use stack to load status
2caf : b50a            >            lda zp1,x    ;load to zeropage
2cb1 : 850f            >            sta zpt
2cb3 : 28              >            plp
                        
2cb4 : 260f                     rol zpt
                                tst_z rROL,fROL,0
2cb6 : 08              >            php         ;save flags
2cb7 : a50f            >            lda zpt
2cb9 : dd0902          >            cmp rROL,x    ;test result
2cbc : d0fe            >            bne *       ;trap
2cbe : 68              >            pla         ;load status
                       >            eor_flag 0
2cbf : 4934            >            eor #(0|$34)
                       >
2cc1 : dd1902          >            cmp fROL,x    ;test flags
2cc4 : d0fe            >            bne *       ;trap
                        
2cc6 : ca                       dex
2cc7 : 10e3                     bpl trol2
2cc9 : a203                     ldx #3
2ccb :                  trol3
                                set_z zp1,$ff-fc
                       >            load_flag $ff-fc
2ccb : a9fe            >            lda #$ff-fc|4
                       >
2ccd : 48              >            pha         ;use stack to load status
AS65 Assembler for R6502 [1.42].                                     Page  115
--------------------------------- verify.asm ---------------------------------

2cce : b50a            >            lda zp1,x    ;load to zeropage
2cd0 : 850f            >            sta zpt
2cd2 : 28              >            plp
                        
2cd3 : 260f                     rol zpt
                                tst_z rROL,fROL,$ff-fnzc
2cd5 : 08              >            php         ;save flags
2cd6 : a50f            >            lda zpt
2cd8 : dd0902          >            cmp rROL,x    ;test result
2cdb : d0fe            >            bne *       ;trap
2cdd : 68              >            pla         ;load status
                       >            eor_flag $ff-fnzc
2cde : 497c            >            eor #($ff-fnzc|$34)
                       >
2ce0 : dd1902          >            cmp fROL,x    ;test flags
2ce3 : d0fe            >            bne *       ;trap
                        
2ce5 : ca                       dex
2ce6 : 10e3                     bpl trol3
                        
2ce8 : a203                     ldx #3
2cea :                  trolc2
                                set_z zp1,fc
                       >            load_flag fc
2cea : a905            >            lda #fc|4
                       >
2cec : 48              >            pha         ;use stack to load status
2ced : b50a            >            lda zp1,x    ;load to zeropage
2cef : 850f            >            sta zpt
2cf1 : 28              >            plp
                        
2cf2 : 260f                     rol zpt
                                tst_z rROLc,fROLc,0
2cf4 : 08              >            php         ;save flags
2cf5 : a50f            >            lda zpt
2cf7 : dd0d02          >            cmp rROLc,x    ;test result
2cfa : d0fe            >            bne *       ;trap
2cfc : 68              >            pla         ;load status
                       >            eor_flag 0
2cfd : 4934            >            eor #(0|$34)
                       >
2cff : dd1d02          >            cmp fROLc,x    ;test flags
2d02 : d0fe            >            bne *       ;trap
                        
2d04 : ca                       dex
2d05 : 10e3                     bpl trolc2
2d07 : a203                     ldx #3
2d09 :                  trolc3
                                set_z zp1,$ff
                       >            load_flag $ff
2d09 : a9ff            >            lda #$ff|4
                       >
2d0b : 48              >            pha         ;use stack to load status
2d0c : b50a            >            lda zp1,x    ;load to zeropage
2d0e : 850f            >            sta zpt
2d10 : 28              >            plp
                        
2d11 : 260f                     rol zpt
                                tst_z rROLc,fROLc,$ff-fnzc
2d13 : 08              >            php         ;save flags
2d14 : a50f            >            lda zpt
2d16 : dd0d02          >            cmp rROLc,x    ;test result
AS65 Assembler for R6502 [1.42].                                     Page  116
--------------------------------- verify.asm ---------------------------------

2d19 : d0fe            >            bne *       ;trap
2d1b : 68              >            pla         ;load status
                       >            eor_flag $ff-fnzc
2d1c : 497c            >            eor #($ff-fnzc|$34)
                       >
2d1e : dd1d02          >            cmp fROLc,x    ;test flags
2d21 : d0fe            >            bne *       ;trap
                        
2d23 : ca                       dex
2d24 : 10e3                     bpl trolc3
                        
2d26 : a203                     ldx #3
2d28 :                  tror2
                                set_z zp1,0
                       >            load_flag 0
2d28 : a904            >            lda #0|4
                       >
2d2a : 48              >            pha         ;use stack to load status
2d2b : b50a            >            lda zp1,x    ;load to zeropage
2d2d : 850f            >            sta zpt
2d2f : 28              >            plp
                        
2d30 : 660f                     ror zpt
                                tst_z rROR,fROR,0
2d32 : 08              >            php         ;save flags
2d33 : a50f            >            lda zpt
2d35 : dd1102          >            cmp rROR,x    ;test result
2d38 : d0fe            >            bne *       ;trap
2d3a : 68              >            pla         ;load status
                       >            eor_flag 0
2d3b : 4934            >            eor #(0|$34)
                       >
2d3d : dd2102          >            cmp fROR,x    ;test flags
2d40 : d0fe            >            bne *       ;trap
                        
2d42 : ca                       dex
2d43 : 10e3                     bpl tror2
2d45 : a203                     ldx #3
2d47 :                  tror3
                                set_z zp1,$ff-fc
                       >            load_flag $ff-fc
2d47 : a9fe            >            lda #$ff-fc|4
                       >
2d49 : 48              >            pha         ;use stack to load status
2d4a : b50a            >            lda zp1,x    ;load to zeropage
2d4c : 850f            >            sta zpt
2d4e : 28              >            plp
                        
2d4f : 660f                     ror zpt
                                tst_z rROR,fROR,$ff-fnzc
2d51 : 08              >            php         ;save flags
2d52 : a50f            >            lda zpt
2d54 : dd1102          >            cmp rROR,x    ;test result
2d57 : d0fe            >            bne *       ;trap
2d59 : 68              >            pla         ;load status
                       >            eor_flag $ff-fnzc
2d5a : 497c            >            eor #($ff-fnzc|$34)
                       >
2d5c : dd2102          >            cmp fROR,x    ;test flags
2d5f : d0fe            >            bne *       ;trap
                        
2d61 : ca                       dex
AS65 Assembler for R6502 [1.42].                                     Page  117
--------------------------------- verify.asm ---------------------------------

2d62 : 10e3                     bpl tror3
                        
2d64 : a203                     ldx #3
2d66 :                  trorc2
                                set_z zp1,fc
                       >            load_flag fc
2d66 : a905            >            lda #fc|4
                       >
2d68 : 48              >            pha         ;use stack to load status
2d69 : b50a            >            lda zp1,x    ;load to zeropage
2d6b : 850f            >            sta zpt
2d6d : 28              >            plp
                        
2d6e : 660f                     ror zpt
                                tst_z rRORc,fRORc,0
2d70 : 08              >            php         ;save flags
2d71 : a50f            >            lda zpt
2d73 : dd1502          >            cmp rRORc,x    ;test result
2d76 : d0fe            >            bne *       ;trap
2d78 : 68              >            pla         ;load status
                       >            eor_flag 0
2d79 : 4934            >            eor #(0|$34)
                       >
2d7b : dd2502          >            cmp fRORc,x    ;test flags
2d7e : d0fe            >            bne *       ;trap
                        
2d80 : ca                       dex
2d81 : 10e3                     bpl trorc2
2d83 : a203                     ldx #3
2d85 :                  trorc3
                                set_z zp1,$ff
                       >            load_flag $ff
2d85 : a9ff            >            lda #$ff|4
                       >
2d87 : 48              >            pha         ;use stack to load status
2d88 : b50a            >            lda zp1,x    ;load to zeropage
2d8a : 850f            >            sta zpt
2d8c : 28              >            plp
                        
2d8d : 660f                     ror zpt
                                tst_z rRORc,fRORc,$ff-fnzc
2d8f : 08              >            php         ;save flags
2d90 : a50f            >            lda zpt
2d92 : dd1502          >            cmp rRORc,x    ;test result
2d95 : d0fe            >            bne *       ;trap
2d97 : 68              >            pla         ;load status
                       >            eor_flag $ff-fnzc
2d98 : 497c            >            eor #($ff-fnzc|$34)
                       >
2d9a : dd2502          >            cmp fRORc,x    ;test flags
2d9d : d0fe            >            bne *       ;trap
                        
2d9f : ca                       dex
2da0 : 10e3                     bpl trorc3
                        
                        ; shifts - absolute
2da2 : a203                     ldx #3
2da4 :                  tasl4
                                set_abs zp1,0
                       >            load_flag 0
2da4 : a904            >            lda #0|4
                       >
AS65 Assembler for R6502 [1.42].                                     Page  118
--------------------------------- verify.asm ---------------------------------

2da6 : 48              >            pha         ;use stack to load status
2da7 : b50a            >            lda zp1,x    ;load to memory
2da9 : 8d3302          >            sta abst
2dac : 28              >            plp
                        
2dad : 0e3302                   asl abst
                                tst_abs rASL,fASL,0
2db0 : 08              >            php         ;save flags
2db1 : ad3302          >            lda abst
2db4 : dd0902          >            cmp rASL,x    ;test result
2db7 : d0fe            >            bne *       ;trap
2db9 : 68              >            pla         ;load status
                       >            eor_flag 0
2dba : 4934            >            eor #(0|$34)
                       >
2dbc : dd1902          >            cmp fASL,x    ;test flags
2dbf : d0fe            >            bne *       ;trap
                        
2dc1 : ca                       dex
2dc2 : 10e0                     bpl tasl4
2dc4 : a203                     ldx #3
2dc6 :                  tasl5
                                set_abs zp1,$ff
                       >            load_flag $ff
2dc6 : a9ff            >            lda #$ff|4
                       >
2dc8 : 48              >            pha         ;use stack to load status
2dc9 : b50a            >            lda zp1,x    ;load to memory
2dcb : 8d3302          >            sta abst
2dce : 28              >            plp
                        
2dcf : 0e3302                   asl abst
                                tst_abs rASL,fASL,$ff-fnzc
2dd2 : 08              >            php         ;save flags
2dd3 : ad3302          >            lda abst
2dd6 : dd0902          >            cmp rASL,x    ;test result
2dd9 : d0fe            >            bne *       ;trap
2ddb : 68              >            pla         ;load status
                       >            eor_flag $ff-fnzc
2ddc : 497c            >            eor #($ff-fnzc|$34)
                       >
2dde : dd1902          >            cmp fASL,x    ;test flags
2de1 : d0fe            >            bne *       ;trap
                        
2de3 : ca                       dex
2de4 : 10e0                     bpl tasl5
                        
2de6 : a203                     ldx #3
2de8 :                  tlsr4
                                set_abs zp1,0
                       >            load_flag 0
2de8 : a904            >            lda #0|4
                       >
2dea : 48              >            pha         ;use stack to load status
2deb : b50a            >            lda zp1,x    ;load to memory
2ded : 8d3302          >            sta abst
2df0 : 28              >            plp
                        
2df1 : 4e3302                   lsr abst
                                tst_abs rLSR,fLSR,0
2df4 : 08              >            php         ;save flags
2df5 : ad3302          >            lda abst
AS65 Assembler for R6502 [1.42].                                     Page  119
--------------------------------- verify.asm ---------------------------------

2df8 : dd1102          >            cmp rLSR,x    ;test result
2dfb : d0fe            >            bne *       ;trap
2dfd : 68              >            pla         ;load status
                       >            eor_flag 0
2dfe : 4934            >            eor #(0|$34)
                       >
2e00 : dd2102          >            cmp fLSR,x    ;test flags
2e03 : d0fe            >            bne *       ;trap
                        
2e05 : ca                       dex
2e06 : 10e0                     bpl tlsr4
2e08 : a203                     ldx #3
2e0a :                  tlsr5
                                set_abs zp1,$ff
                       >            load_flag $ff
2e0a : a9ff            >            lda #$ff|4
                       >
2e0c : 48              >            pha         ;use stack to load status
2e0d : b50a            >            lda zp1,x    ;load to memory
2e0f : 8d3302          >            sta abst
2e12 : 28              >            plp
                        
2e13 : 4e3302                   lsr abst
                                tst_abs rLSR,fLSR,$ff-fnzc
2e16 : 08              >            php         ;save flags
2e17 : ad3302          >            lda abst
2e1a : dd1102          >            cmp rLSR,x    ;test result
2e1d : d0fe            >            bne *       ;trap
2e1f : 68              >            pla         ;load status
                       >            eor_flag $ff-fnzc
2e20 : 497c            >            eor #($ff-fnzc|$34)
                       >
2e22 : dd2102          >            cmp fLSR,x    ;test flags
2e25 : d0fe            >            bne *       ;trap
                        
2e27 : ca                       dex
2e28 : 10e0                     bpl tlsr5
                        
2e2a : a203                     ldx #3
2e2c :                  trol4
                                set_abs zp1,0
                       >            load_flag 0
2e2c : a904            >            lda #0|4
                       >
2e2e : 48              >            pha         ;use stack to load status
2e2f : b50a            >            lda zp1,x    ;load to memory
2e31 : 8d3302          >            sta abst
2e34 : 28              >            plp
                        
2e35 : 2e3302                   rol abst
                                tst_abs rROL,fROL,0
2e38 : 08              >            php         ;save flags
2e39 : ad3302          >            lda abst
2e3c : dd0902          >            cmp rROL,x    ;test result
2e3f : d0fe            >            bne *       ;trap
2e41 : 68              >            pla         ;load status
                       >            eor_flag 0
2e42 : 4934            >            eor #(0|$34)
                       >
2e44 : dd1902          >            cmp fROL,x    ;test flags
2e47 : d0fe            >            bne *       ;trap
                        
AS65 Assembler for R6502 [1.42].                                     Page  120
--------------------------------- verify.asm ---------------------------------

2e49 : ca                       dex
2e4a : 10e0                     bpl trol4
2e4c : a203                     ldx #3
2e4e :                  trol5
                                set_abs zp1,$ff-fc
                       >            load_flag $ff-fc
2e4e : a9fe            >            lda #$ff-fc|4
                       >
2e50 : 48              >            pha         ;use stack to load status
2e51 : b50a            >            lda zp1,x    ;load to memory
2e53 : 8d3302          >            sta abst
2e56 : 28              >            plp
                        
2e57 : 2e3302                   rol abst
                                tst_abs rROL,fROL,$ff-fnzc
2e5a : 08              >            php         ;save flags
2e5b : ad3302          >            lda abst
2e5e : dd0902          >            cmp rROL,x    ;test result
2e61 : d0fe            >            bne *       ;trap
2e63 : 68              >            pla         ;load status
                       >            eor_flag $ff-fnzc
2e64 : 497c            >            eor #($ff-fnzc|$34)
                       >
2e66 : dd1902          >            cmp fROL,x    ;test flags
2e69 : d0fe            >            bne *       ;trap
                        
2e6b : ca                       dex
2e6c : 10e0                     bpl trol5
                        
2e6e : a203                     ldx #3
2e70 :                  trolc4
                                set_abs zp1,fc
                       >            load_flag fc
2e70 : a905            >            lda #fc|4
                       >
2e72 : 48              >            pha         ;use stack to load status
2e73 : b50a            >            lda zp1,x    ;load to memory
2e75 : 8d3302          >            sta abst
2e78 : 28              >            plp
                        
2e79 : 2e3302                   rol abst
                                tst_abs rROLc,fROLc,0
2e7c : 08              >            php         ;save flags
2e7d : ad3302          >            lda abst
2e80 : dd0d02          >            cmp rROLc,x    ;test result
2e83 : d0fe            >            bne *       ;trap
2e85 : 68              >            pla         ;load status
                       >            eor_flag 0
2e86 : 4934            >            eor #(0|$34)
                       >
2e88 : dd1d02          >            cmp fROLc,x    ;test flags
2e8b : d0fe            >            bne *       ;trap
                        
2e8d : ca                       dex
2e8e : 10e0                     bpl trolc4
2e90 : a203                     ldx #3
2e92 :                  trolc5
                                set_abs zp1,$ff
                       >            load_flag $ff
2e92 : a9ff            >            lda #$ff|4
                       >
2e94 : 48              >            pha         ;use stack to load status
AS65 Assembler for R6502 [1.42].                                     Page  121
--------------------------------- verify.asm ---------------------------------

2e95 : b50a            >            lda zp1,x    ;load to memory
2e97 : 8d3302          >            sta abst
2e9a : 28              >            plp
                        
2e9b : 2e3302                   rol abst
                                tst_abs rROLc,fROLc,$ff-fnzc
2e9e : 08              >            php         ;save flags
2e9f : ad3302          >            lda abst
2ea2 : dd0d02          >            cmp rROLc,x    ;test result
2ea5 : d0fe            >            bne *       ;trap
2ea7 : 68              >            pla         ;load status
                       >            eor_flag $ff-fnzc
2ea8 : 497c            >            eor #($ff-fnzc|$34)
                       >
2eaa : dd1d02          >            cmp fROLc,x    ;test flags
2ead : d0fe            >            bne *       ;trap
                        
2eaf : ca                       dex
2eb0 : 10e0                     bpl trolc5
                        
2eb2 : a203                     ldx #3
2eb4 :                  tror4
                                set_abs zp1,0
                       >            load_flag 0
2eb4 : a904            >            lda #0|4
                       >
2eb6 : 48              >            pha         ;use stack to load status
2eb7 : b50a            >            lda zp1,x    ;load to memory
2eb9 : 8d3302          >            sta abst
2ebc : 28              >            plp
                        
2ebd : 6e3302                   ror abst
                                tst_abs rROR,fROR,0
2ec0 : 08              >            php         ;save flags
2ec1 : ad3302          >            lda abst
2ec4 : dd1102          >            cmp rROR,x    ;test result
2ec7 : d0fe            >            bne *       ;trap
2ec9 : 68              >            pla         ;load status
                       >            eor_flag 0
2eca : 4934            >            eor #(0|$34)
                       >
2ecc : dd2102          >            cmp fROR,x    ;test flags
2ecf : d0fe            >            bne *       ;trap
                        
2ed1 : ca                       dex
2ed2 : 10e0                     bpl tror4
2ed4 : a203                     ldx #3
2ed6 :                  tror5
                                set_abs zp1,$ff-fc
                       >            load_flag $ff-fc
2ed6 : a9fe            >            lda #$ff-fc|4
                       >
2ed8 : 48              >            pha         ;use stack to load status
2ed9 : b50a            >            lda zp1,x    ;load to memory
2edb : 8d3302          >            sta abst
2ede : 28              >            plp
                        
2edf : 6e3302                   ror abst
                                tst_abs rROR,fROR,$ff-fnzc
2ee2 : 08              >            php         ;save flags
2ee3 : ad3302          >            lda abst
2ee6 : dd1102          >            cmp rROR,x    ;test result
AS65 Assembler for R6502 [1.42].                                     Page  122
--------------------------------- verify.asm ---------------------------------

2ee9 : d0fe            >            bne *       ;trap
2eeb : 68              >            pla         ;load status
                       >            eor_flag $ff-fnzc
2eec : 497c            >            eor #($ff-fnzc|$34)
                       >
2eee : dd2102          >            cmp fROR,x    ;test flags
2ef1 : d0fe            >            bne *       ;trap
                        
2ef3 : ca                       dex
2ef4 : 10e0                     bpl tror5
                        
2ef6 : a203                     ldx #3
2ef8 :                  trorc4
                                set_abs zp1,fc
                       >            load_flag fc
2ef8 : a905            >            lda #fc|4
                       >
2efa : 48              >            pha         ;use stack to load status
2efb : b50a            >            lda zp1,x    ;load to memory
2efd : 8d3302          >            sta abst
2f00 : 28              >            plp
                        
2f01 : 6e3302                   ror abst
                                tst_abs rRORc,fRORc,0
2f04 : 08              >            php         ;save flags
2f05 : ad3302          >            lda abst
2f08 : dd1502          >            cmp rRORc,x    ;test result
2f0b : d0fe            >            bne *       ;trap
2f0d : 68              >            pla         ;load status
                       >            eor_flag 0
2f0e : 4934            >            eor #(0|$34)
                       >
2f10 : dd2502          >            cmp fRORc,x    ;test flags
2f13 : d0fe            >            bne *       ;trap
                        
2f15 : ca                       dex
2f16 : 10e0                     bpl trorc4
2f18 : a203                     ldx #3
2f1a :                  trorc5
                                set_abs zp1,$ff
                       >            load_flag $ff
2f1a : a9ff            >            lda #$ff|4
                       >
2f1c : 48              >            pha         ;use stack to load status
2f1d : b50a            >            lda zp1,x    ;load to memory
2f1f : 8d3302          >            sta abst
2f22 : 28              >            plp
                        
2f23 : 6e3302                   ror abst
                                tst_abs rRORc,fRORc,$ff-fnzc
2f26 : 08              >            php         ;save flags
2f27 : ad3302          >            lda abst
2f2a : dd1502          >            cmp rRORc,x    ;test result
2f2d : d0fe            >            bne *       ;trap
2f2f : 68              >            pla         ;load status
                       >            eor_flag $ff-fnzc
2f30 : 497c            >            eor #($ff-fnzc|$34)
                       >
2f32 : dd2502          >            cmp fRORc,x    ;test flags
2f35 : d0fe            >            bne *       ;trap
                        
2f37 : ca                       dex
AS65 Assembler for R6502 [1.42].                                     Page  123
--------------------------------- verify.asm ---------------------------------

2f38 : 10e0                     bpl trorc5
                        
                        ; shifts - zp indexed
2f3a : a203                     ldx #3
2f3c :                  tasl6
                                set_zx zp1,0
                       >            load_flag 0
2f3c : a904            >            lda #0|4
                       >
2f3e : 48              >            pha         ;use stack to load status
2f3f : b50a            >            lda zp1,x    ;load to zeropage
2f41 : 950f            >            sta zpt,x
2f43 : 28              >            plp
                        
2f44 : 160f                     asl zpt,x
                                tst_zx rASL,fASL,0
2f46 : 08              >            php         ;save flags
2f47 : b50f            >            lda zpt,x
2f49 : dd0902          >            cmp rASL,x    ;test result
2f4c : d0fe            >            bne *       ;trap
2f4e : 68              >            pla         ;load status
                       >            eor_flag 0
2f4f : 4934            >            eor #(0|$34)
                       >
2f51 : dd1902          >            cmp fASL,x    ;test flags
2f54 : d0fe            >            bne *       ;trap
                        
2f56 : ca                       dex
2f57 : 10e3                     bpl tasl6
2f59 : a203                     ldx #3
2f5b :                  tasl7
                                set_zx zp1,$ff
                       >            load_flag $ff
2f5b : a9ff            >            lda #$ff|4
                       >
2f5d : 48              >            pha         ;use stack to load status
2f5e : b50a            >            lda zp1,x    ;load to zeropage
2f60 : 950f            >            sta zpt,x
2f62 : 28              >            plp
                        
2f63 : 160f                     asl zpt,x
                                tst_zx rASL,fASL,$ff-fnzc
2f65 : 08              >            php         ;save flags
2f66 : b50f            >            lda zpt,x
2f68 : dd0902          >            cmp rASL,x    ;test result
2f6b : d0fe            >            bne *       ;trap
2f6d : 68              >            pla         ;load status
                       >            eor_flag $ff-fnzc
2f6e : 497c            >            eor #($ff-fnzc|$34)
                       >
2f70 : dd1902          >            cmp fASL,x    ;test flags
2f73 : d0fe            >            bne *       ;trap
                        
2f75 : ca                       dex
2f76 : 10e3                     bpl tasl7
                        
2f78 : a203                     ldx #3
2f7a :                  tlsr6
                                set_zx zp1,0
                       >            load_flag 0
2f7a : a904            >            lda #0|4
                       >
AS65 Assembler for R6502 [1.42].                                     Page  124
--------------------------------- verify.asm ---------------------------------

2f7c : 48              >            pha         ;use stack to load status
2f7d : b50a            >            lda zp1,x    ;load to zeropage
2f7f : 950f            >            sta zpt,x
2f81 : 28              >            plp
                        
2f82 : 560f                     lsr zpt,x
                                tst_zx rLSR,fLSR,0
2f84 : 08              >            php         ;save flags
2f85 : b50f            >            lda zpt,x
2f87 : dd1102          >            cmp rLSR,x    ;test result
2f8a : d0fe            >            bne *       ;trap
2f8c : 68              >            pla         ;load status
                       >            eor_flag 0
2f8d : 4934            >            eor #(0|$34)
                       >
2f8f : dd2102          >            cmp fLSR,x    ;test flags
2f92 : d0fe            >            bne *       ;trap
                        
2f94 : ca                       dex
2f95 : 10e3                     bpl tlsr6
2f97 : a203                     ldx #3
2f99 :                  tlsr7
                                set_zx zp1,$ff
                       >            load_flag $ff
2f99 : a9ff            >            lda #$ff|4
                       >
2f9b : 48              >            pha         ;use stack to load status
2f9c : b50a            >            lda zp1,x    ;load to zeropage
2f9e : 950f            >            sta zpt,x
2fa0 : 28              >            plp
                        
2fa1 : 560f                     lsr zpt,x
                                tst_zx rLSR,fLSR,$ff-fnzc
2fa3 : 08              >            php         ;save flags
2fa4 : b50f            >            lda zpt,x
2fa6 : dd1102          >            cmp rLSR,x    ;test result
2fa9 : d0fe            >            bne *       ;trap
2fab : 68              >            pla         ;load status
                       >            eor_flag $ff-fnzc
2fac : 497c            >            eor #($ff-fnzc|$34)
                       >
2fae : dd2102          >            cmp fLSR,x    ;test flags
2fb1 : d0fe            >            bne *       ;trap
                        
2fb3 : ca                       dex
2fb4 : 10e3                     bpl tlsr7
                        
2fb6 : a203                     ldx #3
2fb8 :                  trol6
                                set_zx zp1,0
                       >            load_flag 0
2fb8 : a904            >            lda #0|4
                       >
2fba : 48              >            pha         ;use stack to load status
2fbb : b50a            >            lda zp1,x    ;load to zeropage
2fbd : 950f            >            sta zpt,x
2fbf : 28              >            plp
                        
2fc0 : 360f                     rol zpt,x
                                tst_zx rROL,fROL,0
2fc2 : 08              >            php         ;save flags
2fc3 : b50f            >            lda zpt,x
AS65 Assembler for R6502 [1.42].                                     Page  125
--------------------------------- verify.asm ---------------------------------

2fc5 : dd0902          >            cmp rROL,x    ;test result
2fc8 : d0fe            >            bne *       ;trap
2fca : 68              >            pla         ;load status
                       >            eor_flag 0
2fcb : 4934            >            eor #(0|$34)
                       >
2fcd : dd1902          >            cmp fROL,x    ;test flags
2fd0 : d0fe            >            bne *       ;trap
                        
2fd2 : ca                       dex
2fd3 : 10e3                     bpl trol6
2fd5 : a203                     ldx #3
2fd7 :                  trol7
                                set_zx zp1,$ff-fc
                       >            load_flag $ff-fc
2fd7 : a9fe            >            lda #$ff-fc|4
                       >
2fd9 : 48              >            pha         ;use stack to load status
2fda : b50a            >            lda zp1,x    ;load to zeropage
2fdc : 950f            >            sta zpt,x
2fde : 28              >            plp
                        
2fdf : 360f                     rol zpt,x
                                tst_zx rROL,fROL,$ff-fnzc
2fe1 : 08              >            php         ;save flags
2fe2 : b50f            >            lda zpt,x
2fe4 : dd0902          >            cmp rROL,x    ;test result
2fe7 : d0fe            >            bne *       ;trap
2fe9 : 68              >            pla         ;load status
                       >            eor_flag $ff-fnzc
2fea : 497c            >            eor #($ff-fnzc|$34)
                       >
2fec : dd1902          >            cmp fROL,x    ;test flags
2fef : d0fe            >            bne *       ;trap
                        
2ff1 : ca                       dex
2ff2 : 10e3                     bpl trol7
                        
2ff4 : a203                     ldx #3
2ff6 :                  trolc6
                                set_zx zp1,fc
                       >            load_flag fc
2ff6 : a905            >            lda #fc|4
                       >
2ff8 : 48              >            pha         ;use stack to load status
2ff9 : b50a            >            lda zp1,x    ;load to zeropage
2ffb : 950f            >            sta zpt,x
2ffd : 28              >            plp
                        
2ffe : 360f                     rol zpt,x
                                tst_zx rROLc,fROLc,0
3000 : 08              >            php         ;save flags
3001 : b50f            >            lda zpt,x
3003 : dd0d02          >            cmp rROLc,x    ;test result
3006 : d0fe            >            bne *       ;trap
3008 : 68              >            pla         ;load status
                       >            eor_flag 0
3009 : 4934            >            eor #(0|$34)
                       >
300b : dd1d02          >            cmp fROLc,x    ;test flags
300e : d0fe            >            bne *       ;trap
                        
AS65 Assembler for R6502 [1.42].                                     Page  126
--------------------------------- verify.asm ---------------------------------

3010 : ca                       dex
3011 : 10e3                     bpl trolc6
3013 : a203                     ldx #3
3015 :                  trolc7
                                set_zx zp1,$ff
                       >            load_flag $ff
3015 : a9ff            >            lda #$ff|4
                       >
3017 : 48              >            pha         ;use stack to load status
3018 : b50a            >            lda zp1,x    ;load to zeropage
301a : 950f            >            sta zpt,x
301c : 28              >            plp
                        
301d : 360f                     rol zpt,x
                                tst_zx rROLc,fROLc,$ff-fnzc
301f : 08              >            php         ;save flags
3020 : b50f            >            lda zpt,x
3022 : dd0d02          >            cmp rROLc,x    ;test result
3025 : d0fe            >            bne *       ;trap
3027 : 68              >            pla         ;load status
                       >            eor_flag $ff-fnzc
3028 : 497c            >            eor #($ff-fnzc|$34)
                       >
302a : dd1d02          >            cmp fROLc,x    ;test flags
302d : d0fe            >            bne *       ;trap
                        
302f : ca                       dex
3030 : 10e3                     bpl trolc7
                        
3032 : a203                     ldx #3
3034 :                  tror6
                                set_zx zp1,0
                       >            load_flag 0
3034 : a904            >            lda #0|4
                       >
3036 : 48              >            pha         ;use stack to load status
3037 : b50a            >            lda zp1,x    ;load to zeropage
3039 : 950f            >            sta zpt,x
303b : 28              >            plp
                        
303c : 760f                     ror zpt,x
                                tst_zx rROR,fROR,0
303e : 08              >            php         ;save flags
303f : b50f            >            lda zpt,x
3041 : dd1102          >            cmp rROR,x    ;test result
3044 : d0fe            >            bne *       ;trap
3046 : 68              >            pla         ;load status
                       >            eor_flag 0
3047 : 4934            >            eor #(0|$34)
                       >
3049 : dd2102          >            cmp fROR,x    ;test flags
304c : d0fe            >            bne *       ;trap
                        
304e : ca                       dex
304f : 10e3                     bpl tror6
3051 : a203                     ldx #3
3053 :                  tror7
                                set_zx zp1,$ff-fc
                       >            load_flag $ff-fc
3053 : a9fe            >            lda #$ff-fc|4
                       >
3055 : 48              >            pha         ;use stack to load status
AS65 Assembler for R6502 [1.42].                                     Page  127
--------------------------------- verify.asm ---------------------------------

3056 : b50a            >            lda zp1,x    ;load to zeropage
3058 : 950f            >            sta zpt,x
305a : 28              >            plp
                        
305b : 760f                     ror zpt,x
                                tst_zx rROR,fROR,$ff-fnzc
305d : 08              >            php         ;save flags
305e : b50f            >            lda zpt,x
3060 : dd1102          >            cmp rROR,x    ;test result
3063 : d0fe            >            bne *       ;trap
3065 : 68              >            pla         ;load status
                       >            eor_flag $ff-fnzc
3066 : 497c            >            eor #($ff-fnzc|$34)
                       >
3068 : dd2102          >            cmp fROR,x    ;test flags
306b : d0fe            >            bne *       ;trap
                        
306d : ca                       dex
306e : 10e3                     bpl tror7
                        
3070 : a203                     ldx #3
3072 :                  trorc6
                                set_zx zp1,fc
                       >            load_flag fc
3072 : a905            >            lda #fc|4
                       >
3074 : 48              >            pha         ;use stack to load status
3075 : b50a            >            lda zp1,x    ;load to zeropage
3077 : 950f            >            sta zpt,x
3079 : 28              >            plp
                        
307a : 760f                     ror zpt,x
                                tst_zx rRORc,fRORc,0
307c : 08              >            php         ;save flags
307d : b50f            >            lda zpt,x
307f : dd1502          >            cmp rRORc,x    ;test result
3082 : d0fe            >            bne *       ;trap
3084 : 68              >            pla         ;load status
                       >            eor_flag 0
3085 : 4934            >            eor #(0|$34)
                       >
3087 : dd2502          >            cmp fRORc,x    ;test flags
308a : d0fe            >            bne *       ;trap
                        
308c : ca                       dex
308d : 10e3                     bpl trorc6
308f : a203                     ldx #3
3091 :                  trorc7
                                set_zx zp1,$ff
                       >            load_flag $ff
3091 : a9ff            >            lda #$ff|4
                       >
3093 : 48              >            pha         ;use stack to load status
3094 : b50a            >            lda zp1,x    ;load to zeropage
3096 : 950f            >            sta zpt,x
3098 : 28              >            plp
                        
3099 : 760f                     ror zpt,x
                                tst_zx rRORc,fRORc,$ff-fnzc
309b : 08              >            php         ;save flags
309c : b50f            >            lda zpt,x
309e : dd1502          >            cmp rRORc,x    ;test result
AS65 Assembler for R6502 [1.42].                                     Page  128
--------------------------------- verify.asm ---------------------------------

30a1 : d0fe            >            bne *       ;trap
30a3 : 68              >            pla         ;load status
                       >            eor_flag $ff-fnzc
30a4 : 497c            >            eor #($ff-fnzc|$34)
                       >
30a6 : dd2502          >            cmp fRORc,x    ;test flags
30a9 : d0fe            >            bne *       ;trap
                        
30ab : ca                       dex
30ac : 10e3                     bpl trorc7
                        
                        ; shifts - abs indexed
30ae : a203                     ldx #3
30b0 :                  tasl8
                                set_absx zp1,0
                       >            load_flag 0
30b0 : a904            >            lda #0|4
                       >
30b2 : 48              >            pha         ;use stack to load status
30b3 : b50a            >            lda zp1,x    ;load to memory
30b5 : 9d3302          >            sta abst,x
30b8 : 28              >            plp
                        
30b9 : 1e3302                   asl abst,x
                                tst_absx rASL,fASL,0
30bc : 08              >            php         ;save flags
30bd : bd3302          >            lda abst,x
30c0 : dd0902          >            cmp rASL,x    ;test result
30c3 : d0fe            >            bne *       ;trap
30c5 : 68              >            pla         ;load status
                       >            eor_flag 0
30c6 : 4934            >            eor #(0|$34)
                       >
30c8 : dd1902          >            cmp fASL,x    ;test flags
30cb : d0fe            >            bne *       ;trap
                        
30cd : ca                       dex
30ce : 10e0                     bpl tasl8
30d0 : a203                     ldx #3
30d2 :                  tasl9
                                set_absx zp1,$ff
                       >            load_flag $ff
30d2 : a9ff            >            lda #$ff|4
                       >
30d4 : 48              >            pha         ;use stack to load status
30d5 : b50a            >            lda zp1,x    ;load to memory
30d7 : 9d3302          >            sta abst,x
30da : 28              >            plp
                        
30db : 1e3302                   asl abst,x
                                tst_absx rASL,fASL,$ff-fnzc
30de : 08              >            php         ;save flags
30df : bd3302          >            lda abst,x
30e2 : dd0902          >            cmp rASL,x    ;test result
30e5 : d0fe            >            bne *       ;trap
30e7 : 68              >            pla         ;load status
                       >            eor_flag $ff-fnzc
30e8 : 497c            >            eor #($ff-fnzc|$34)
                       >
30ea : dd1902          >            cmp fASL,x    ;test flags
30ed : d0fe            >            bne *       ;trap
                        
AS65 Assembler for R6502 [1.42].                                     Page  129
--------------------------------- verify.asm ---------------------------------

30ef : ca                       dex
30f0 : 10e0                     bpl tasl9
                        
30f2 : a203                     ldx #3
30f4 :                  tlsr8
                                set_absx zp1,0
                       >            load_flag 0
30f4 : a904            >            lda #0|4
                       >
30f6 : 48              >            pha         ;use stack to load status
30f7 : b50a            >            lda zp1,x    ;load to memory
30f9 : 9d3302          >            sta abst,x
30fc : 28              >            plp
                        
30fd : 5e3302                   lsr abst,x
                                tst_absx rLSR,fLSR,0
3100 : 08              >            php         ;save flags
3101 : bd3302          >            lda abst,x
3104 : dd1102          >            cmp rLSR,x    ;test result
3107 : d0fe            >            bne *       ;trap
3109 : 68              >            pla         ;load status
                       >            eor_flag 0
310a : 4934            >            eor #(0|$34)
                       >
310c : dd2102          >            cmp fLSR,x    ;test flags
310f : d0fe            >            bne *       ;trap
                        
3111 : ca                       dex
3112 : 10e0                     bpl tlsr8
3114 : a203                     ldx #3
3116 :                  tlsr9
                                set_absx zp1,$ff
                       >            load_flag $ff
3116 : a9ff            >            lda #$ff|4
                       >
3118 : 48              >            pha         ;use stack to load status
3119 : b50a            >            lda zp1,x    ;load to memory
311b : 9d3302          >            sta abst,x
311e : 28              >            plp
                        
311f : 5e3302                   lsr abst,x
                                tst_absx rLSR,fLSR,$ff-fnzc
3122 : 08              >            php         ;save flags
3123 : bd3302          >            lda abst,x
3126 : dd1102          >            cmp rLSR,x    ;test result
3129 : d0fe            >            bne *       ;trap
312b : 68              >            pla         ;load status
                       >            eor_flag $ff-fnzc
312c : 497c            >            eor #($ff-fnzc|$34)
                       >
312e : dd2102          >            cmp fLSR,x    ;test flags
3131 : d0fe            >            bne *       ;trap
                        
3133 : ca                       dex
3134 : 10e0                     bpl tlsr9
                        
3136 : a203                     ldx #3
3138 :                  trol8
                                set_absx zp1,0
                       >            load_flag 0
3138 : a904            >            lda #0|4
                       >
AS65 Assembler for R6502 [1.42].                                     Page  130
--------------------------------- verify.asm ---------------------------------

313a : 48              >            pha         ;use stack to load status
313b : b50a            >            lda zp1,x    ;load to memory
313d : 9d3302          >            sta abst,x
3140 : 28              >            plp
                        
3141 : 3e3302                   rol abst,x
                                tst_absx rROL,fROL,0
3144 : 08              >            php         ;save flags
3145 : bd3302          >            lda abst,x
3148 : dd0902          >            cmp rROL,x    ;test result
314b : d0fe            >            bne *       ;trap
314d : 68              >            pla         ;load status
                       >            eor_flag 0
314e : 4934            >            eor #(0|$34)
                       >
3150 : dd1902          >            cmp fROL,x    ;test flags
3153 : d0fe            >            bne *       ;trap
                        
3155 : ca                       dex
3156 : 10e0                     bpl trol8
3158 : a203                     ldx #3
315a :                  trol9
                                set_absx zp1,$ff-fc
                       >            load_flag $ff-fc
315a : a9fe            >            lda #$ff-fc|4
                       >
315c : 48              >            pha         ;use stack to load status
315d : b50a            >            lda zp1,x    ;load to memory
315f : 9d3302          >            sta abst,x
3162 : 28              >            plp
                        
3163 : 3e3302                   rol abst,x
                                tst_absx rROL,fROL,$ff-fnzc
3166 : 08              >            php         ;save flags
3167 : bd3302          >            lda abst,x
316a : dd0902          >            cmp rROL,x    ;test result
316d : d0fe            >            bne *       ;trap
316f : 68              >            pla         ;load status
                       >            eor_flag $ff-fnzc
3170 : 497c            >            eor #($ff-fnzc|$34)
                       >
3172 : dd1902          >            cmp fROL,x    ;test flags
3175 : d0fe            >            bne *       ;trap
                        
3177 : ca                       dex
3178 : 10e0                     bpl trol9
                        
317a : a203                     ldx #3
317c :                  trolc8
                                set_absx zp1,fc
                       >            load_flag fc
317c : a905            >            lda #fc|4
                       >
317e : 48              >            pha         ;use stack to load status
317f : b50a            >            lda zp1,x    ;load to memory
3181 : 9d3302          >            sta abst,x
3184 : 28              >            plp
                        
3185 : 3e3302                   rol abst,x
                                tst_absx rROLc,fROLc,0
3188 : 08              >            php         ;save flags
3189 : bd3302          >            lda abst,x
AS65 Assembler for R6502 [1.42].                                     Page  131
--------------------------------- verify.asm ---------------------------------

318c : dd0d02          >            cmp rROLc,x    ;test result
318f : d0fe            >            bne *       ;trap
3191 : 68              >            pla         ;load status
                       >            eor_flag 0
3192 : 4934            >            eor #(0|$34)
                       >
3194 : dd1d02          >            cmp fROLc,x    ;test flags
3197 : d0fe            >            bne *       ;trap
                        
3199 : ca                       dex
319a : 10e0                     bpl trolc8
319c : a203                     ldx #3
319e :                  trolc9
                                set_absx zp1,$ff
                       >            load_flag $ff
319e : a9ff            >            lda #$ff|4
                       >
31a0 : 48              >            pha         ;use stack to load status
31a1 : b50a            >            lda zp1,x    ;load to memory
31a3 : 9d3302          >            sta abst,x
31a6 : 28              >            plp
                        
31a7 : 3e3302                   rol abst,x
                                tst_absx rROLc,fROLc,$ff-fnzc
31aa : 08              >            php         ;save flags
31ab : bd3302          >            lda abst,x
31ae : dd0d02          >            cmp rROLc,x    ;test result
31b1 : d0fe            >            bne *       ;trap
31b3 : 68              >            pla         ;load status
                       >            eor_flag $ff-fnzc
31b4 : 497c            >            eor #($ff-fnzc|$34)
                       >
31b6 : dd1d02          >            cmp fROLc,x    ;test flags
31b9 : d0fe            >            bne *       ;trap
                        
31bb : ca                       dex
31bc : 10e0                     bpl trolc9
                        
31be : a203                     ldx #3
31c0 :                  tror8
                                set_absx zp1,0
                       >            load_flag 0
31c0 : a904            >            lda #0|4
                       >
31c2 : 48              >            pha         ;use stack to load status
31c3 : b50a            >            lda zp1,x    ;load to memory
31c5 : 9d3302          >            sta abst,x
31c8 : 28              >            plp
                        
31c9 : 7e3302                   ror abst,x
                                tst_absx rROR,fROR,0
31cc : 08              >            php         ;save flags
31cd : bd3302          >            lda abst,x
31d0 : dd1102          >            cmp rROR,x    ;test result
31d3 : d0fe            >            bne *       ;trap
31d5 : 68              >            pla         ;load status
                       >            eor_flag 0
31d6 : 4934            >            eor #(0|$34)
                       >
31d8 : dd2102          >            cmp fROR,x    ;test flags
31db : d0fe            >            bne *       ;trap
                        
AS65 Assembler for R6502 [1.42].                                     Page  132
--------------------------------- verify.asm ---------------------------------

31dd : ca                       dex
31de : 10e0                     bpl tror8
31e0 : a203                     ldx #3
31e2 :                  tror9
                                set_absx zp1,$ff-fc
                       >            load_flag $ff-fc
31e2 : a9fe            >            lda #$ff-fc|4
                       >
31e4 : 48              >            pha         ;use stack to load status
31e5 : b50a            >            lda zp1,x    ;load to memory
31e7 : 9d3302          >            sta abst,x
31ea : 28              >            plp
                        
31eb : 7e3302                   ror abst,x
                                tst_absx rROR,fROR,$ff-fnzc
31ee : 08              >            php         ;save flags
31ef : bd3302          >            lda abst,x
31f2 : dd1102          >            cmp rROR,x    ;test result
31f5 : d0fe            >            bne *       ;trap
31f7 : 68              >            pla         ;load status
                       >            eor_flag $ff-fnzc
31f8 : 497c            >            eor #($ff-fnzc|$34)
                       >
31fa : dd2102          >            cmp fROR,x    ;test flags
31fd : d0fe            >            bne *       ;trap
                        
31ff : ca                       dex
3200 : 10e0                     bpl tror9
                        
3202 : a203                     ldx #3
3204 :                  trorc8
                                set_absx zp1,fc
                       >            load_flag fc
3204 : a905            >            lda #fc|4
                       >
3206 : 48              >            pha         ;use stack to load status
3207 : b50a            >            lda zp1,x    ;load to memory
3209 : 9d3302          >            sta abst,x
320c : 28              >            plp
                        
320d : 7e3302                   ror abst,x
                                tst_absx rRORc,fRORc,0
3210 : 08              >            php         ;save flags
3211 : bd3302          >            lda abst,x
3214 : dd1502          >            cmp rRORc,x    ;test result
3217 : d0fe            >            bne *       ;trap
3219 : 68              >            pla         ;load status
                       >            eor_flag 0
321a : 4934            >            eor #(0|$34)
                       >
321c : dd2502          >            cmp fRORc,x    ;test flags
321f : d0fe            >            bne *       ;trap
                        
3221 : ca                       dex
3222 : 10e0                     bpl trorc8
3224 : a203                     ldx #3
3226 :                  trorc9
                                set_absx zp1,$ff
                       >            load_flag $ff
3226 : a9ff            >            lda #$ff|4
                       >
3228 : 48              >            pha         ;use stack to load status
AS65 Assembler for R6502 [1.42].                                     Page  133
--------------------------------- verify.asm ---------------------------------

3229 : b50a            >            lda zp1,x    ;load to memory
322b : 9d3302          >            sta abst,x
322e : 28              >            plp
                        
322f : 7e3302                   ror abst,x
                                tst_absx rRORc,fRORc,$ff-fnzc
3232 : 08              >            php         ;save flags
3233 : bd3302          >            lda abst,x
3236 : dd1502          >            cmp rRORc,x    ;test result
3239 : d0fe            >            bne *       ;trap
323b : 68              >            pla         ;load status
                       >            eor_flag $ff-fnzc
323c : 497c            >            eor #($ff-fnzc|$34)
                       >
323e : dd2502          >            cmp fRORc,x    ;test flags
3241 : d0fe            >            bne *       ;trap
                        
3243 : ca                       dex
3244 : 10e0                     bpl trorc9
                        
                        ; testing memory increment/decrement - INC DEC all add
                        ; zeropage
3246 : a200                     ldx #0
3248 : a97e                     lda #$7e
324a : 850f                     sta zpt
324c :                  tinc
                                set_stat 0
                       >            load_flag 0
324c : a904            >            lda #0|4
                       >
324e : 48              >            pha         ;use stack to load status
324f : 28              >            plp
                        
3250 : e60f                     inc zpt
                                tst_z rINC,fINC,0
3252 : 08              >            php         ;save flags
3253 : a50f            >            lda zpt
3255 : dd2902          >            cmp rINC,x    ;test result
3258 : d0fe            >            bne *       ;trap
325a : 68              >            pla         ;load status
                       >            eor_flag 0
325b : 4934            >            eor #(0|$34)
                       >
325d : dd2e02          >            cmp fINC,x    ;test flags
3260 : d0fe            >            bne *       ;trap
                        
3262 : e8                       inx
3263 : e002                     cpx #2
3265 : d004                     bne tinc1
3267 : a9fe                     lda #$fe
3269 : 850f                     sta zpt
326b : e005             tinc1   cpx #5
326d : d0dd                     bne tinc
326f : ca                       dex
3270 : e60f                     inc zpt
3272 :                  tdec
                                set_stat 0
                       >            load_flag 0
3272 : a904            >            lda #0|4
                       >
3274 : 48              >            pha         ;use stack to load status
3275 : 28              >            plp
AS65 Assembler for R6502 [1.42].                                     Page  134
--------------------------------- verify.asm ---------------------------------

                        
3276 : c60f                     dec zpt
                                tst_z rINC,fINC,0
3278 : 08              >            php         ;save flags
3279 : a50f            >            lda zpt
327b : dd2902          >            cmp rINC,x    ;test result
327e : d0fe            >            bne *       ;trap
3280 : 68              >            pla         ;load status
                       >            eor_flag 0
3281 : 4934            >            eor #(0|$34)
                       >
3283 : dd2e02          >            cmp fINC,x    ;test flags
3286 : d0fe            >            bne *       ;trap
                        
3288 : ca                       dex
3289 : 300a                     bmi tdec1
328b : e001                     cpx #1
328d : d0e3                     bne tdec
328f : a981                     lda #$81
3291 : 850f                     sta zpt
3293 : d0dd                     bne tdec
3295 :                  tdec1
3295 : a200                     ldx #0
3297 : a97e                     lda #$7e
3299 : 850f                     sta zpt
329b :                  tinc10
                                set_stat $ff
                       >            load_flag $ff
329b : a9ff            >            lda #$ff|4
                       >
329d : 48              >            pha         ;use stack to load status
329e : 28              >            plp
                        
329f : e60f                     inc zpt
                                tst_z rINC,fINC,$ff-fnz
32a1 : 08              >            php         ;save flags
32a2 : a50f            >            lda zpt
32a4 : dd2902          >            cmp rINC,x    ;test result
32a7 : d0fe            >            bne *       ;trap
32a9 : 68              >            pla         ;load status
                       >            eor_flag $ff-fnz
32aa : 497d            >            eor #($ff-fnz|$34)
                       >
32ac : dd2e02          >            cmp fINC,x    ;test flags
32af : d0fe            >            bne *       ;trap
                        
32b1 : e8                       inx
32b2 : e002                     cpx #2
32b4 : d004                     bne tinc11
32b6 : a9fe                     lda #$fe
32b8 : 850f                     sta zpt
32ba : e005             tinc11  cpx #5
32bc : d0dd                     bne tinc10
32be : ca                       dex
32bf : e60f                     inc zpt
32c1 :                  tdec10
                                set_stat $ff
                       >            load_flag $ff
32c1 : a9ff            >            lda #$ff|4
                       >
32c3 : 48              >            pha         ;use stack to load status
32c4 : 28              >            plp
AS65 Assembler for R6502 [1.42].                                     Page  135
--------------------------------- verify.asm ---------------------------------

                        
32c5 : c60f                     dec zpt
                                tst_z rINC,fINC,$ff-fnz
32c7 : 08              >            php         ;save flags
32c8 : a50f            >            lda zpt
32ca : dd2902          >            cmp rINC,x    ;test result
32cd : d0fe            >            bne *       ;trap
32cf : 68              >            pla         ;load status
                       >            eor_flag $ff-fnz
32d0 : 497d            >            eor #($ff-fnz|$34)
                       >
32d2 : dd2e02          >            cmp fINC,x    ;test flags
32d5 : d0fe            >            bne *       ;trap
                        
32d7 : ca                       dex
32d8 : 300a                     bmi tdec11
32da : e001                     cpx #1
32dc : d0e3                     bne tdec10
32de : a981                     lda #$81
32e0 : 850f                     sta zpt
32e2 : d0dd                     bne tdec10
32e4 :                  tdec11
                        
                        ; absolute memory
32e4 : a200                     ldx #0
32e6 : a97e                     lda #$7e
32e8 : 8d3302                   sta abst
32eb :                  tinc2
                                set_stat 0
                       >            load_flag 0
32eb : a904            >            lda #0|4
                       >
32ed : 48              >            pha         ;use stack to load status
32ee : 28              >            plp
                        
32ef : ee3302                   inc abst
                                tst_abs rINC,fINC,0
32f2 : 08              >            php         ;save flags
32f3 : ad3302          >            lda abst
32f6 : dd2902          >            cmp rINC,x    ;test result
32f9 : d0fe            >            bne *       ;trap
32fb : 68              >            pla         ;load status
                       >            eor_flag 0
32fc : 4934            >            eor #(0|$34)
                       >
32fe : dd2e02          >            cmp fINC,x    ;test flags
3301 : d0fe            >            bne *       ;trap
                        
3303 : e8                       inx
3304 : e002                     cpx #2
3306 : d005                     bne tinc3
3308 : a9fe                     lda #$fe
330a : 8d3302                   sta abst
330d : e005             tinc3   cpx #5
330f : d0da                     bne tinc2
3311 : ca                       dex
3312 : ee3302                   inc abst
3315 :                  tdec2
                                set_stat 0
                       >            load_flag 0
3315 : a904            >            lda #0|4
                       >
AS65 Assembler for R6502 [1.42].                                     Page  136
--------------------------------- verify.asm ---------------------------------

3317 : 48              >            pha         ;use stack to load status
3318 : 28              >            plp
                        
3319 : ce3302                   dec abst
                                tst_abs rINC,fINC,0
331c : 08              >            php         ;save flags
331d : ad3302          >            lda abst
3320 : dd2902          >            cmp rINC,x    ;test result
3323 : d0fe            >            bne *       ;trap
3325 : 68              >            pla         ;load status
                       >            eor_flag 0
3326 : 4934            >            eor #(0|$34)
                       >
3328 : dd2e02          >            cmp fINC,x    ;test flags
332b : d0fe            >            bne *       ;trap
                        
332d : ca                       dex
332e : 300b                     bmi tdec3
3330 : e001                     cpx #1
3332 : d0e1                     bne tdec2
3334 : a981                     lda #$81
3336 : 8d3302                   sta abst
3339 : d0da                     bne tdec2
333b :                  tdec3
333b : a200                     ldx #0
333d : a97e                     lda #$7e
333f : 8d3302                   sta abst
3342 :                  tinc12
                                set_stat $ff
                       >            load_flag $ff
3342 : a9ff            >            lda #$ff|4
                       >
3344 : 48              >            pha         ;use stack to load status
3345 : 28              >            plp
                        
3346 : ee3302                   inc abst
                                tst_abs rINC,fINC,$ff-fnz
3349 : 08              >            php         ;save flags
334a : ad3302          >            lda abst
334d : dd2902          >            cmp rINC,x    ;test result
3350 : d0fe            >            bne *       ;trap
3352 : 68              >            pla         ;load status
                       >            eor_flag $ff-fnz
3353 : 497d            >            eor #($ff-fnz|$34)
                       >
3355 : dd2e02          >            cmp fINC,x    ;test flags
3358 : d0fe            >            bne *       ;trap
                        
335a : e8                       inx
335b : e002                     cpx #2
335d : d005                     bne tinc13
335f : a9fe                     lda #$fe
3361 : 8d3302                   sta abst
3364 : e005             tinc13   cpx #5
3366 : d0da                     bne tinc12
3368 : ca                       dex
3369 : ee3302                   inc abst
336c :                  tdec12
                                set_stat $ff
                       >            load_flag $ff
336c : a9ff            >            lda #$ff|4
                       >
AS65 Assembler for R6502 [1.42].                                     Page  137
--------------------------------- verify.asm ---------------------------------

336e : 48              >            pha         ;use stack to load status
336f : 28              >            plp
                        
3370 : ce3302                   dec abst
                                tst_abs rINC,fINC,$ff-fnz
3373 : 08              >            php         ;save flags
3374 : ad3302          >            lda abst
3377 : dd2902          >            cmp rINC,x    ;test result
337a : d0fe            >            bne *       ;trap
337c : 68              >            pla         ;load status
                       >            eor_flag $ff-fnz
337d : 497d            >            eor #($ff-fnz|$34)
                       >
337f : dd2e02          >            cmp fINC,x    ;test flags
3382 : d0fe            >            bne *       ;trap
                        
3384 : ca                       dex
3385 : 300b                     bmi tdec13
3387 : e001                     cpx #1
3389 : d0e1                     bne tdec12
338b : a981                     lda #$81
338d : 8d3302                   sta abst
3390 : d0da                     bne tdec12
3392 :                  tdec13
                        
                        ; zeropage indexed
3392 : a200                     ldx #0
3394 : a97e                     lda #$7e
3396 : 950f             tinc4   sta zpt,x
                                set_stat 0
                       >            load_flag 0
3398 : a904            >            lda #0|4
                       >
339a : 48              >            pha         ;use stack to load status
339b : 28              >            plp
                        
339c : f60f                     inc zpt,x
                                tst_zx rINC,fINC,0
339e : 08              >            php         ;save flags
339f : b50f            >            lda zpt,x
33a1 : dd2902          >            cmp rINC,x    ;test result
33a4 : d0fe            >            bne *       ;trap
33a6 : 68              >            pla         ;load status
                       >            eor_flag 0
33a7 : 4934            >            eor #(0|$34)
                       >
33a9 : dd2e02          >            cmp fINC,x    ;test flags
33ac : d0fe            >            bne *       ;trap
                        
33ae : b50f                     lda zpt,x
33b0 : e8                       inx
33b1 : e002                     cpx #2
33b3 : d002                     bne tinc5
33b5 : a9fe                     lda #$fe
33b7 : e005             tinc5   cpx #5
33b9 : d0db                     bne tinc4
33bb : ca                       dex
33bc : a902                     lda #2
33be : 950f             tdec4   sta zpt,x
                                set_stat 0
                       >            load_flag 0
33c0 : a904            >            lda #0|4
AS65 Assembler for R6502 [1.42].                                     Page  138
--------------------------------- verify.asm ---------------------------------

                       >
33c2 : 48              >            pha         ;use stack to load status
33c3 : 28              >            plp
                        
33c4 : d60f                     dec zpt,x
                                tst_zx rINC,fINC,0
33c6 : 08              >            php         ;save flags
33c7 : b50f            >            lda zpt,x
33c9 : dd2902          >            cmp rINC,x    ;test result
33cc : d0fe            >            bne *       ;trap
33ce : 68              >            pla         ;load status
                       >            eor_flag 0
33cf : 4934            >            eor #(0|$34)
                       >
33d1 : dd2e02          >            cmp fINC,x    ;test flags
33d4 : d0fe            >            bne *       ;trap
                        
33d6 : b50f                     lda zpt,x
33d8 : ca                       dex
33d9 : 3008                     bmi tdec5
33db : e001                     cpx #1
33dd : d0df                     bne tdec4
33df : a981                     lda #$81
33e1 : d0db                     bne tdec4
33e3 :                  tdec5
33e3 : a200                     ldx #0
33e5 : a97e                     lda #$7e
33e7 : 950f             tinc14  sta zpt,x
                                set_stat $ff
                       >            load_flag $ff
33e9 : a9ff            >            lda #$ff|4
                       >
33eb : 48              >            pha         ;use stack to load status
33ec : 28              >            plp
                        
33ed : f60f                     inc zpt,x
                                tst_zx rINC,fINC,$ff-fnz
33ef : 08              >            php         ;save flags
33f0 : b50f            >            lda zpt,x
33f2 : dd2902          >            cmp rINC,x    ;test result
33f5 : d0fe            >            bne *       ;trap
33f7 : 68              >            pla         ;load status
                       >            eor_flag $ff-fnz
33f8 : 497d            >            eor #($ff-fnz|$34)
                       >
33fa : dd2e02          >            cmp fINC,x    ;test flags
33fd : d0fe            >            bne *       ;trap
                        
33ff : b50f                     lda zpt,x
3401 : e8                       inx
3402 : e002                     cpx #2
3404 : d002                     bne tinc15
3406 : a9fe                     lda #$fe
3408 : e005             tinc15  cpx #5
340a : d0db                     bne tinc14
340c : ca                       dex
340d : a902                     lda #2
340f : 950f             tdec14  sta zpt,x
                                set_stat $ff
                       >            load_flag $ff
3411 : a9ff            >            lda #$ff|4
                       >
AS65 Assembler for R6502 [1.42].                                     Page  139
--------------------------------- verify.asm ---------------------------------

3413 : 48              >            pha         ;use stack to load status
3414 : 28              >            plp
                        
3415 : d60f                     dec zpt,x
                                tst_zx rINC,fINC,$ff-fnz
3417 : 08              >            php         ;save flags
3418 : b50f            >            lda zpt,x
341a : dd2902          >            cmp rINC,x    ;test result
341d : d0fe            >            bne *       ;trap
341f : 68              >            pla         ;load status
                       >            eor_flag $ff-fnz
3420 : 497d            >            eor #($ff-fnz|$34)
                       >
3422 : dd2e02          >            cmp fINC,x    ;test flags
3425 : d0fe            >            bne *       ;trap
                        
3427 : b50f                     lda zpt,x
3429 : ca                       dex
342a : 3008                     bmi tdec15
342c : e001                     cpx #1
342e : d0df                     bne tdec14
3430 : a981                     lda #$81
3432 : d0db                     bne tdec14
3434 :                  tdec15
                        
                        ; memory indexed
3434 : a200                     ldx #0
3436 : a97e                     lda #$7e
3438 : 9d3302           tinc6   sta abst,x
                                set_stat 0
                       >            load_flag 0
343b : a904            >            lda #0|4
                       >
343d : 48              >            pha         ;use stack to load status
343e : 28              >            plp
                        
343f : fe3302                   inc abst,x
                                tst_absx rINC,fINC,0
3442 : 08              >            php         ;save flags
3443 : bd3302          >            lda abst,x
3446 : dd2902          >            cmp rINC,x    ;test result
3449 : d0fe            >            bne *       ;trap
344b : 68              >            pla         ;load status
                       >            eor_flag 0
344c : 4934            >            eor #(0|$34)
                       >
344e : dd2e02          >            cmp fINC,x    ;test flags
3451 : d0fe            >            bne *       ;trap
                        
3453 : bd3302                   lda abst,x
3456 : e8                       inx
3457 : e002                     cpx #2
3459 : d002                     bne tinc7
345b : a9fe                     lda #$fe
345d : e005             tinc7   cpx #5
345f : d0d7                     bne tinc6
3461 : ca                       dex
3462 : a902                     lda #2
3464 : 9d3302           tdec6   sta abst,x
                                set_stat 0
                       >            load_flag 0
3467 : a904            >            lda #0|4
AS65 Assembler for R6502 [1.42].                                     Page  140
--------------------------------- verify.asm ---------------------------------

                       >
3469 : 48              >            pha         ;use stack to load status
346a : 28              >            plp
                        
346b : de3302                   dec abst,x
                                tst_absx rINC,fINC,0
346e : 08              >            php         ;save flags
346f : bd3302          >            lda abst,x
3472 : dd2902          >            cmp rINC,x    ;test result
3475 : d0fe            >            bne *       ;trap
3477 : 68              >            pla         ;load status
                       >            eor_flag 0
3478 : 4934            >            eor #(0|$34)
                       >
347a : dd2e02          >            cmp fINC,x    ;test flags
347d : d0fe            >            bne *       ;trap
                        
347f : bd3302                   lda abst,x
3482 : ca                       dex
3483 : 3008                     bmi tdec7
3485 : e001                     cpx #1
3487 : d0db                     bne tdec6
3489 : a981                     lda #$81
348b : d0d7                     bne tdec6
348d :                  tdec7
348d : a200                     ldx #0
348f : a97e                     lda #$7e
3491 : 9d3302           tinc16  sta abst,x
                                set_stat $ff
                       >            load_flag $ff
3494 : a9ff            >            lda #$ff|4
                       >
3496 : 48              >            pha         ;use stack to load status
3497 : 28              >            plp
                        
3498 : fe3302                   inc abst,x
                                tst_absx rINC,fINC,$ff-fnz
349b : 08              >            php         ;save flags
349c : bd3302          >            lda abst,x
349f : dd2902          >            cmp rINC,x    ;test result
34a2 : d0fe            >            bne *       ;trap
34a4 : 68              >            pla         ;load status
                       >            eor_flag $ff-fnz
34a5 : 497d            >            eor #($ff-fnz|$34)
                       >
34a7 : dd2e02          >            cmp fINC,x    ;test flags
34aa : d0fe            >            bne *       ;trap
                        
34ac : bd3302                   lda abst,x
34af : e8                       inx
34b0 : e002                     cpx #2
34b2 : d002                     bne tinc17
34b4 : a9fe                     lda #$fe
34b6 : e005             tinc17  cpx #5
34b8 : d0d7                     bne tinc16
34ba : ca                       dex
34bb : a902                     lda #2
34bd : 9d3302           tdec16  sta abst,x
                                set_stat $ff
                       >            load_flag $ff
34c0 : a9ff            >            lda #$ff|4
                       >
AS65 Assembler for R6502 [1.42].                                     Page  141
--------------------------------- verify.asm ---------------------------------

34c2 : 48              >            pha         ;use stack to load status
34c3 : 28              >            plp
                        
34c4 : de3302                   dec abst,x
                                tst_absx rINC,fINC,$ff-fnz
34c7 : 08              >            php         ;save flags
34c8 : bd3302          >            lda abst,x
34cb : dd2902          >            cmp rINC,x    ;test result
34ce : d0fe            >            bne *       ;trap
34d0 : 68              >            pla         ;load status
                       >            eor_flag $ff-fnz
34d1 : 497d            >            eor #($ff-fnz|$34)
                       >
34d3 : dd2e02          >            cmp fINC,x    ;test flags
34d6 : d0fe            >            bne *       ;trap
                        
34d8 : bd3302                   lda abst,x
34db : ca                       dex
34dc : 3008                     bmi tdec17
34de : e001                     cpx #1
34e0 : d0db                     bne tdec16
34e2 : a981                     lda #$81
34e4 : d0d7                     bne tdec16
34e6 :                  tdec17
                        
                        ; testing logical instructions - AND EOR ORA all addre
                        ; AND
34e6 : a203                     ldx #3      ;immediate - self modifying code
34e8 : b518             tand    lda zpAN,x
34ea : 8df534                   sta tandi1
                                set_ax  absANa,0
                       >            load_flag 0
34ed : a904            >            lda #0|4
                       >
34ef : 48              >            pha         ;use stack to load status
34f0 : bd4802          >            lda absANa,x    ;precharge accu
34f3 : 28              >            plp
                        
34f5 =                  tandi1  equ *+1     ;target for immediate operand
34f4 : 2963                     and #99
                                tst_ax  absrlo,absflo,0
34f6 : 08              >            php         ;save flags
34f7 : dd5002          >            cmp absrlo,x    ;test result
34fa : d0fe            >            bne *       ;trap
34fc : 68              >            pla         ;load status
                       >            eor_flag 0
34fd : 4934            >            eor #(0|$34)
                       >
34ff : dd5402          >            cmp absflo,x    ;test flags
3502 : d0fe            >            bne *       ;trap
                        
3504 : ca                       dex
3505 : 10e1                     bpl tand
3507 : a203                     ldx #3
3509 : b518             tand1   lda zpAN,x
350b : 8d1635                   sta tandi2
                                set_ax  absANa,$ff
                       >            load_flag $ff
350e : a9ff            >            lda #$ff|4
                       >
3510 : 48              >            pha         ;use stack to load status
3511 : bd4802          >            lda absANa,x    ;precharge accu
AS65 Assembler for R6502 [1.42].                                     Page  142
--------------------------------- verify.asm ---------------------------------

3514 : 28              >            plp
                        
3516 =                  tandi2  equ *+1     ;target for immediate operand
3515 : 2963                     and #99
                                tst_ax  absrlo,absflo,$ff-fnz
3517 : 08              >            php         ;save flags
3518 : dd5002          >            cmp absrlo,x    ;test result
351b : d0fe            >            bne *       ;trap
351d : 68              >            pla         ;load status
                       >            eor_flag $ff-fnz
351e : 497d            >            eor #($ff-fnz|$34)
                       >
3520 : dd5402          >            cmp absflo,x    ;test flags
3523 : d0fe            >            bne *       ;trap
                        
3525 : ca                       dex
3526 : 10e1                     bpl tand1
                        
3528 : a203                     ldx #3      ;zp
352a : b518             tand2    lda zpAN,x
352c : 850f                     sta zpt
                                set_ax  absANa,0
                       >            load_flag 0
352e : a904            >            lda #0|4
                       >
3530 : 48              >            pha         ;use stack to load status
3531 : bd4802          >            lda absANa,x    ;precharge accu
3534 : 28              >            plp
                        
3535 : 250f                     and zpt
                                tst_ax  absrlo,absflo,0
3537 : 08              >            php         ;save flags
3538 : dd5002          >            cmp absrlo,x    ;test result
353b : d0fe            >            bne *       ;trap
353d : 68              >            pla         ;load status
                       >            eor_flag 0
353e : 4934            >            eor #(0|$34)
                       >
3540 : dd5402          >            cmp absflo,x    ;test flags
3543 : d0fe            >            bne *       ;trap
                        
3545 : ca                       dex
3546 : 10e2                     bpl tand2
3548 : a203                     ldx #3
354a : b518             tand3   lda zpAN,x
354c : 850f                     sta zpt
                                set_ax  absANa,$ff
                       >            load_flag $ff
354e : a9ff            >            lda #$ff|4
                       >
3550 : 48              >            pha         ;use stack to load status
3551 : bd4802          >            lda absANa,x    ;precharge accu
3554 : 28              >            plp
                        
3555 : 250f                     and zpt
                                tst_ax  absrlo,absflo,$ff-fnz
3557 : 08              >            php         ;save flags
3558 : dd5002          >            cmp absrlo,x    ;test result
355b : d0fe            >            bne *       ;trap
355d : 68              >            pla         ;load status
                       >            eor_flag $ff-fnz
355e : 497d            >            eor #($ff-fnz|$34)
AS65 Assembler for R6502 [1.42].                                     Page  143
--------------------------------- verify.asm ---------------------------------

                       >
3560 : dd5402          >            cmp absflo,x    ;test flags
3563 : d0fe            >            bne *       ;trap
                        
3565 : ca                       dex
3566 : 10e2                     bpl tand3
                        
3568 : a203                     ldx #3      ;abs
356a : b518             tand4   lda zpAN,x
356c : 8d3302                   sta abst
                                set_ax  absANa,0
                       >            load_flag 0
356f : a904            >            lda #0|4
                       >
3571 : 48              >            pha         ;use stack to load status
3572 : bd4802          >            lda absANa,x    ;precharge accu
3575 : 28              >            plp
                        
3576 : 2d3302                   and abst
                                tst_ax  absrlo,absflo,0
3579 : 08              >            php         ;save flags
357a : dd5002          >            cmp absrlo,x    ;test result
357d : d0fe            >            bne *       ;trap
357f : 68              >            pla         ;load status
                       >            eor_flag 0
3580 : 4934            >            eor #(0|$34)
                       >
3582 : dd5402          >            cmp absflo,x    ;test flags
3585 : d0fe            >            bne *       ;trap
                        
3587 : ca                       dex
3588 : 10e0                     bpl tand4
358a : a203                     ldx #3
358c : b518             tand5   lda zpAN,x
358e : 8d3302                   sta abst
                                set_ax  absANa,$ff
                       >            load_flag $ff
3591 : a9ff            >            lda #$ff|4
                       >
3593 : 48              >            pha         ;use stack to load status
3594 : bd4802          >            lda absANa,x    ;precharge accu
3597 : 28              >            plp
                        
3598 : 2d3302                   and abst
                                tst_ax  absrlo,absflo,$ff-fnz
359b : 08              >            php         ;save flags
359c : dd5002          >            cmp absrlo,x    ;test result
359f : d0fe            >            bne *       ;trap
35a1 : 68              >            pla         ;load status
                       >            eor_flag $ff-fnz
35a2 : 497d            >            eor #($ff-fnz|$34)
                       >
35a4 : dd5402          >            cmp absflo,x    ;test flags
35a7 : d0fe            >            bne *       ;trap
                        
35a9 : ca                       dex
35aa : 1002                     bpl tand6
                        
35ac : a203                     ldx #3      ;zp,x
35ae :                  tand6
                                set_ax  absANa,0
                       >            load_flag 0
AS65 Assembler for R6502 [1.42].                                     Page  144
--------------------------------- verify.asm ---------------------------------

35ae : a904            >            lda #0|4
                       >
35b0 : 48              >            pha         ;use stack to load status
35b1 : bd4802          >            lda absANa,x    ;precharge accu
35b4 : 28              >            plp
                        
35b5 : 3518                     and zpAN,x
                                tst_ax  absrlo,absflo,0
35b7 : 08              >            php         ;save flags
35b8 : dd5002          >            cmp absrlo,x    ;test result
35bb : d0fe            >            bne *       ;trap
35bd : 68              >            pla         ;load status
                       >            eor_flag 0
35be : 4934            >            eor #(0|$34)
                       >
35c0 : dd5402          >            cmp absflo,x    ;test flags
35c3 : d0fe            >            bne *       ;trap
                        
35c5 : ca                       dex
35c6 : 10e6                     bpl tand6
35c8 : a203                     ldx #3
35ca :                  tand7
                                set_ax  absANa,$ff
                       >            load_flag $ff
35ca : a9ff            >            lda #$ff|4
                       >
35cc : 48              >            pha         ;use stack to load status
35cd : bd4802          >            lda absANa,x    ;precharge accu
35d0 : 28              >            plp
                        
35d1 : 3518                     and zpAN,x
                                tst_ax  absrlo,absflo,$ff-fnz
35d3 : 08              >            php         ;save flags
35d4 : dd5002          >            cmp absrlo,x    ;test result
35d7 : d0fe            >            bne *       ;trap
35d9 : 68              >            pla         ;load status
                       >            eor_flag $ff-fnz
35da : 497d            >            eor #($ff-fnz|$34)
                       >
35dc : dd5402          >            cmp absflo,x    ;test flags
35df : d0fe            >            bne *       ;trap
                        
35e1 : ca                       dex
35e2 : 10e6                     bpl tand7
                        
35e4 : a203                     ldx #3      ;abs,x
35e6 :                  tand8
                                set_ax  absANa,0
                       >            load_flag 0
35e6 : a904            >            lda #0|4
                       >
35e8 : 48              >            pha         ;use stack to load status
35e9 : bd4802          >            lda absANa,x    ;precharge accu
35ec : 28              >            plp
                        
35ed : 3d3c02                   and absAN,x
                                tst_ax  absrlo,absflo,0
35f0 : 08              >            php         ;save flags
35f1 : dd5002          >            cmp absrlo,x    ;test result
35f4 : d0fe            >            bne *       ;trap
35f6 : 68              >            pla         ;load status
                       >            eor_flag 0
AS65 Assembler for R6502 [1.42].                                     Page  145
--------------------------------- verify.asm ---------------------------------

35f7 : 4934            >            eor #(0|$34)
                       >
35f9 : dd5402          >            cmp absflo,x    ;test flags
35fc : d0fe            >            bne *       ;trap
                        
35fe : ca                       dex
35ff : 10e5                     bpl tand8
3601 : a203                     ldx #3
3603 :                  tand9
                                set_ax  absANa,$ff
                       >            load_flag $ff
3603 : a9ff            >            lda #$ff|4
                       >
3605 : 48              >            pha         ;use stack to load status
3606 : bd4802          >            lda absANa,x    ;precharge accu
3609 : 28              >            plp
                        
360a : 3d3c02                   and absAN,x
                                tst_ax  absrlo,absflo,$ff-fnz
360d : 08              >            php         ;save flags
360e : dd5002          >            cmp absrlo,x    ;test result
3611 : d0fe            >            bne *       ;trap
3613 : 68              >            pla         ;load status
                       >            eor_flag $ff-fnz
3614 : 497d            >            eor #($ff-fnz|$34)
                       >
3616 : dd5402          >            cmp absflo,x    ;test flags
3619 : d0fe            >            bne *       ;trap
                        
361b : ca                       dex
361c : 10e5                     bpl tand9
                        
361e : a003                     ldy #3      ;abs,y
3620 :                  tand10
                                set_ay  absANa,0
                       >            load_flag 0
3620 : a904            >            lda #0|4
                       >
3622 : 48              >            pha         ;use stack to load status
3623 : b94802          >            lda absANa,y    ;precharge accu
3626 : 28              >            plp
                        
3627 : 393c02                   and absAN,y
                                tst_ay  absrlo,absflo,0
362a : 08              >            php         ;save flags
362b : d95002          >            cmp absrlo,y    ;test result
362e : d0fe            >            bne *       ;trap
3630 : 68              >            pla         ;load status
                       >            eor_flag 0
3631 : 4934            >            eor #(0|$34)
                       >
3633 : d95402          >            cmp absflo,y    ;test flags
3636 : d0fe            >            bne *       ;trap
                        
3638 : 88                       dey
3639 : 10e5                     bpl tand10
363b : a003                     ldy #3
363d :                  tand11
                                set_ay  absANa,$ff
                       >            load_flag $ff
363d : a9ff            >            lda #$ff|4
                       >
AS65 Assembler for R6502 [1.42].                                     Page  146
--------------------------------- verify.asm ---------------------------------

363f : 48              >            pha         ;use stack to load status
3640 : b94802          >            lda absANa,y    ;precharge accu
3643 : 28              >            plp
                        
3644 : 393c02                   and absAN,y
                                tst_ay  absrlo,absflo,$ff-fnz
3647 : 08              >            php         ;save flags
3648 : d95002          >            cmp absrlo,y    ;test result
364b : d0fe            >            bne *       ;trap
364d : 68              >            pla         ;load status
                       >            eor_flag $ff-fnz
364e : 497d            >            eor #($ff-fnz|$34)
                       >
3650 : d95402          >            cmp absflo,y    ;test flags
3653 : d0fe            >            bne *       ;trap
                        
3655 : 88                       dey
3656 : 10e5                     bpl tand11
                        
3658 : a206                     ldx #6      ;(zp,x)
365a : a003                     ldy #3
365c :                  tand12
                                set_ay  absANa,0
                       >            load_flag 0
365c : a904            >            lda #0|4
                       >
365e : 48              >            pha         ;use stack to load status
365f : b94802          >            lda absANa,y    ;precharge accu
3662 : 28              >            plp
                        
3663 : 2136                     and (indAN,x)
                                tst_ay  absrlo,absflo,0
3665 : 08              >            php         ;save flags
3666 : d95002          >            cmp absrlo,y    ;test result
3669 : d0fe            >            bne *       ;trap
366b : 68              >            pla         ;load status
                       >            eor_flag 0
366c : 4934            >            eor #(0|$34)
                       >
366e : d95402          >            cmp absflo,y    ;test flags
3671 : d0fe            >            bne *       ;trap
                        
3673 : ca                       dex
3674 : ca                       dex
3675 : 88                       dey
3676 : 10e4                     bpl tand12
3678 : a206                     ldx #6
367a : a003                     ldy #3
367c :                  tand13
                                set_ay  absANa,$ff
                       >            load_flag $ff
367c : a9ff            >            lda #$ff|4
                       >
367e : 48              >            pha         ;use stack to load status
367f : b94802          >            lda absANa,y    ;precharge accu
3682 : 28              >            plp
                        
3683 : 2136                     and (indAN,x)
                                tst_ay  absrlo,absflo,$ff-fnz
3685 : 08              >            php         ;save flags
3686 : d95002          >            cmp absrlo,y    ;test result
3689 : d0fe            >            bne *       ;trap
AS65 Assembler for R6502 [1.42].                                     Page  147
--------------------------------- verify.asm ---------------------------------

368b : 68              >            pla         ;load status
                       >            eor_flag $ff-fnz
368c : 497d            >            eor #($ff-fnz|$34)
                       >
368e : d95402          >            cmp absflo,y    ;test flags
3691 : d0fe            >            bne *       ;trap
                        
3693 : ca                       dex
3694 : ca                       dex
3695 : 88                       dey
3696 : 10e4                     bpl tand13
                        
3698 : a003                     ldy #3      ;(zp),y
369a :                  tand14
                                set_ay  absANa,0
                       >            load_flag 0
369a : a904            >            lda #0|4
                       >
369c : 48              >            pha         ;use stack to load status
369d : b94802          >            lda absANa,y    ;precharge accu
36a0 : 28              >            plp
                        
36a1 : 3136                     and (indAN),y
                                tst_ay  absrlo,absflo,0
36a3 : 08              >            php         ;save flags
36a4 : d95002          >            cmp absrlo,y    ;test result
36a7 : d0fe            >            bne *       ;trap
36a9 : 68              >            pla         ;load status
                       >            eor_flag 0
36aa : 4934            >            eor #(0|$34)
                       >
36ac : d95402          >            cmp absflo,y    ;test flags
36af : d0fe            >            bne *       ;trap
                        
36b1 : 88                       dey
36b2 : 10e6                     bpl tand14
36b4 : a003                     ldy #3
36b6 :                  tand15
                                set_ay  absANa,$ff
                       >            load_flag $ff
36b6 : a9ff            >            lda #$ff|4
                       >
36b8 : 48              >            pha         ;use stack to load status
36b9 : b94802          >            lda absANa,y    ;precharge accu
36bc : 28              >            plp
                        
36bd : 3136                     and (indAN),y
                                tst_ay  absrlo,absflo,$ff-fnz
36bf : 08              >            php         ;save flags
36c0 : d95002          >            cmp absrlo,y    ;test result
36c3 : d0fe            >            bne *       ;trap
36c5 : 68              >            pla         ;load status
                       >            eor_flag $ff-fnz
36c6 : 497d            >            eor #($ff-fnz|$34)
                       >
36c8 : d95402          >            cmp absflo,y    ;test flags
36cb : d0fe            >            bne *       ;trap
                        
36cd : 88                       dey
36ce : 10e6                     bpl tand15
                        
                        ; EOR
AS65 Assembler for R6502 [1.42].                                     Page  148
--------------------------------- verify.asm ---------------------------------

36d0 : a203                     ldx #3      ;immediate - self modifying code
36d2 : b51c             teor    lda zpEO,x
36d4 : 8ddf36                   sta teori1
                                set_ax  absEOa,0
                       >            load_flag 0
36d7 : a904            >            lda #0|4
                       >
36d9 : 48              >            pha         ;use stack to load status
36da : bd4c02          >            lda absEOa,x    ;precharge accu
36dd : 28              >            plp
                        
36df =                  teori1  equ *+1     ;target for immediate opereor
36de : 4963                     eor #99
                                tst_ax  absrlo,absflo,0
36e0 : 08              >            php         ;save flags
36e1 : dd5002          >            cmp absrlo,x    ;test result
36e4 : d0fe            >            bne *       ;trap
36e6 : 68              >            pla         ;load status
                       >            eor_flag 0
36e7 : 4934            >            eor #(0|$34)
                       >
36e9 : dd5402          >            cmp absflo,x    ;test flags
36ec : d0fe            >            bne *       ;trap
                        
36ee : ca                       dex
36ef : 10e1                     bpl teor
36f1 : a203                     ldx #3
36f3 : b51c             teor1   lda zpEO,x
36f5 : 8d0037                   sta teori2
                                set_ax  absEOa,$ff
                       >            load_flag $ff
36f8 : a9ff            >            lda #$ff|4
                       >
36fa : 48              >            pha         ;use stack to load status
36fb : bd4c02          >            lda absEOa,x    ;precharge accu
36fe : 28              >            plp
                        
3700 =                  teori2  equ *+1     ;target for immediate opereor
36ff : 4963                     eor #99
                                tst_ax  absrlo,absflo,$ff-fnz
3701 : 08              >            php         ;save flags
3702 : dd5002          >            cmp absrlo,x    ;test result
3705 : d0fe            >            bne *       ;trap
3707 : 68              >            pla         ;load status
                       >            eor_flag $ff-fnz
3708 : 497d            >            eor #($ff-fnz|$34)
                       >
370a : dd5402          >            cmp absflo,x    ;test flags
370d : d0fe            >            bne *       ;trap
                        
370f : ca                       dex
3710 : 10e1                     bpl teor1
                        
3712 : a203                     ldx #3      ;zp
3714 : b51c             teor2    lda zpEO,x
3716 : 850f                     sta zpt
                                set_ax  absEOa,0
                       >            load_flag 0
3718 : a904            >            lda #0|4
                       >
371a : 48              >            pha         ;use stack to load status
371b : bd4c02          >            lda absEOa,x    ;precharge accu
AS65 Assembler for R6502 [1.42].                                     Page  149
--------------------------------- verify.asm ---------------------------------

371e : 28              >            plp
                        
371f : 450f                     eor zpt
                                tst_ax  absrlo,absflo,0
3721 : 08              >            php         ;save flags
3722 : dd5002          >            cmp absrlo,x    ;test result
3725 : d0fe            >            bne *       ;trap
3727 : 68              >            pla         ;load status
                       >            eor_flag 0
3728 : 4934            >            eor #(0|$34)
                       >
372a : dd5402          >            cmp absflo,x    ;test flags
372d : d0fe            >            bne *       ;trap
                        
372f : ca                       dex
3730 : 10e2                     bpl teor2
3732 : a203                     ldx #3
3734 : b51c             teor3   lda zpEO,x
3736 : 850f                     sta zpt
                                set_ax  absEOa,$ff
                       >            load_flag $ff
3738 : a9ff            >            lda #$ff|4
                       >
373a : 48              >            pha         ;use stack to load status
373b : bd4c02          >            lda absEOa,x    ;precharge accu
373e : 28              >            plp
                        
373f : 450f                     eor zpt
                                tst_ax  absrlo,absflo,$ff-fnz
3741 : 08              >            php         ;save flags
3742 : dd5002          >            cmp absrlo,x    ;test result
3745 : d0fe            >            bne *       ;trap
3747 : 68              >            pla         ;load status
                       >            eor_flag $ff-fnz
3748 : 497d            >            eor #($ff-fnz|$34)
                       >
374a : dd5402          >            cmp absflo,x    ;test flags
374d : d0fe            >            bne *       ;trap
                        
374f : ca                       dex
3750 : 10e2                     bpl teor3
                        
3752 : a203                     ldx #3      ;abs
3754 : b51c             teor4   lda zpEO,x
3756 : 8d3302                   sta abst
                                set_ax  absEOa,0
                       >            load_flag 0
3759 : a904            >            lda #0|4
                       >
375b : 48              >            pha         ;use stack to load status
375c : bd4c02          >            lda absEOa,x    ;precharge accu
375f : 28              >            plp
                        
3760 : 4d3302                   eor abst
                                tst_ax  absrlo,absflo,0
3763 : 08              >            php         ;save flags
3764 : dd5002          >            cmp absrlo,x    ;test result
3767 : d0fe            >            bne *       ;trap
3769 : 68              >            pla         ;load status
                       >            eor_flag 0
376a : 4934            >            eor #(0|$34)
                       >
AS65 Assembler for R6502 [1.42].                                     Page  150
--------------------------------- verify.asm ---------------------------------

376c : dd5402          >            cmp absflo,x    ;test flags
376f : d0fe            >            bne *       ;trap
                        
3771 : ca                       dex
3772 : 10e0                     bpl teor4
3774 : a203                     ldx #3
3776 : b51c             teor5   lda zpEO,x
3778 : 8d3302                   sta abst
                                set_ax  absEOa,$ff
                       >            load_flag $ff
377b : a9ff            >            lda #$ff|4
                       >
377d : 48              >            pha         ;use stack to load status
377e : bd4c02          >            lda absEOa,x    ;precharge accu
3781 : 28              >            plp
                        
3782 : 4d3302                   eor abst
                                tst_ax  absrlo,absflo,$ff-fnz
3785 : 08              >            php         ;save flags
3786 : dd5002          >            cmp absrlo,x    ;test result
3789 : d0fe            >            bne *       ;trap
378b : 68              >            pla         ;load status
                       >            eor_flag $ff-fnz
378c : 497d            >            eor #($ff-fnz|$34)
                       >
378e : dd5402          >            cmp absflo,x    ;test flags
3791 : d0fe            >            bne *       ;trap
                        
3793 : ca                       dex
3794 : 1002                     bpl teor6
                        
3796 : a203                     ldx #3      ;zp,x
3798 :                  teor6
                                set_ax  absEOa,0
                       >            load_flag 0
3798 : a904            >            lda #0|4
                       >
379a : 48              >            pha         ;use stack to load status
379b : bd4c02          >            lda absEOa,x    ;precharge accu
379e : 28              >            plp
                        
379f : 551c                     eor zpEO,x
                                tst_ax  absrlo,absflo,0
37a1 : 08              >            php         ;save flags
37a2 : dd5002          >            cmp absrlo,x    ;test result
37a5 : d0fe            >            bne *       ;trap
37a7 : 68              >            pla         ;load status
                       >            eor_flag 0
37a8 : 4934            >            eor #(0|$34)
                       >
37aa : dd5402          >            cmp absflo,x    ;test flags
37ad : d0fe            >            bne *       ;trap
                        
37af : ca                       dex
37b0 : 10e6                     bpl teor6
37b2 : a203                     ldx #3
37b4 :                  teor7
                                set_ax  absEOa,$ff
                       >            load_flag $ff
37b4 : a9ff            >            lda #$ff|4
                       >
37b6 : 48              >            pha         ;use stack to load status
AS65 Assembler for R6502 [1.42].                                     Page  151
--------------------------------- verify.asm ---------------------------------

37b7 : bd4c02          >            lda absEOa,x    ;precharge accu
37ba : 28              >            plp
                        
37bb : 551c                     eor zpEO,x
                                tst_ax  absrlo,absflo,$ff-fnz
37bd : 08              >            php         ;save flags
37be : dd5002          >            cmp absrlo,x    ;test result
37c1 : d0fe            >            bne *       ;trap
37c3 : 68              >            pla         ;load status
                       >            eor_flag $ff-fnz
37c4 : 497d            >            eor #($ff-fnz|$34)
                       >
37c6 : dd5402          >            cmp absflo,x    ;test flags
37c9 : d0fe            >            bne *       ;trap
                        
37cb : ca                       dex
37cc : 10e6                     bpl teor7
                        
37ce : a203                     ldx #3      ;abs,x
37d0 :                  teor8
                                set_ax  absEOa,0
                       >            load_flag 0
37d0 : a904            >            lda #0|4
                       >
37d2 : 48              >            pha         ;use stack to load status
37d3 : bd4c02          >            lda absEOa,x    ;precharge accu
37d6 : 28              >            plp
                        
37d7 : 5d4002                   eor absEO,x
                                tst_ax  absrlo,absflo,0
37da : 08              >            php         ;save flags
37db : dd5002          >            cmp absrlo,x    ;test result
37de : d0fe            >            bne *       ;trap
37e0 : 68              >            pla         ;load status
                       >            eor_flag 0
37e1 : 4934            >            eor #(0|$34)
                       >
37e3 : dd5402          >            cmp absflo,x    ;test flags
37e6 : d0fe            >            bne *       ;trap
                        
37e8 : ca                       dex
37e9 : 10e5                     bpl teor8
37eb : a203                     ldx #3
37ed :                  teor9
                                set_ax  absEOa,$ff
                       >            load_flag $ff
37ed : a9ff            >            lda #$ff|4
                       >
37ef : 48              >            pha         ;use stack to load status
37f0 : bd4c02          >            lda absEOa,x    ;precharge accu
37f3 : 28              >            plp
                        
37f4 : 5d4002                   eor absEO,x
                                tst_ax  absrlo,absflo,$ff-fnz
37f7 : 08              >            php         ;save flags
37f8 : dd5002          >            cmp absrlo,x    ;test result
37fb : d0fe            >            bne *       ;trap
37fd : 68              >            pla         ;load status
                       >            eor_flag $ff-fnz
37fe : 497d            >            eor #($ff-fnz|$34)
                       >
3800 : dd5402          >            cmp absflo,x    ;test flags
AS65 Assembler for R6502 [1.42].                                     Page  152
--------------------------------- verify.asm ---------------------------------

3803 : d0fe            >            bne *       ;trap
                        
3805 : ca                       dex
3806 : 10e5                     bpl teor9
                        
3808 : a003                     ldy #3      ;abs,y
380a :                  teor10
                                set_ay  absEOa,0
                       >            load_flag 0
380a : a904            >            lda #0|4
                       >
380c : 48              >            pha         ;use stack to load status
380d : b94c02          >            lda absEOa,y    ;precharge accu
3810 : 28              >            plp
                        
3811 : 594002                   eor absEO,y
                                tst_ay  absrlo,absflo,0
3814 : 08              >            php         ;save flags
3815 : d95002          >            cmp absrlo,y    ;test result
3818 : d0fe            >            bne *       ;trap
381a : 68              >            pla         ;load status
                       >            eor_flag 0
381b : 4934            >            eor #(0|$34)
                       >
381d : d95402          >            cmp absflo,y    ;test flags
3820 : d0fe            >            bne *       ;trap
                        
3822 : 88                       dey
3823 : 10e5                     bpl teor10
3825 : a003                     ldy #3
3827 :                  teor11
                                set_ay  absEOa,$ff
                       >            load_flag $ff
3827 : a9ff            >            lda #$ff|4
                       >
3829 : 48              >            pha         ;use stack to load status
382a : b94c02          >            lda absEOa,y    ;precharge accu
382d : 28              >            plp
                        
382e : 594002                   eor absEO,y
                                tst_ay  absrlo,absflo,$ff-fnz
3831 : 08              >            php         ;save flags
3832 : d95002          >            cmp absrlo,y    ;test result
3835 : d0fe            >            bne *       ;trap
3837 : 68              >            pla         ;load status
                       >            eor_flag $ff-fnz
3838 : 497d            >            eor #($ff-fnz|$34)
                       >
383a : d95402          >            cmp absflo,y    ;test flags
383d : d0fe            >            bne *       ;trap
                        
383f : 88                       dey
3840 : 10e5                     bpl teor11
                        
3842 : a206                     ldx #6      ;(zp,x)
3844 : a003                     ldy #3
3846 :                  teor12
                                set_ay  absEOa,0
                       >            load_flag 0
3846 : a904            >            lda #0|4
                       >
3848 : 48              >            pha         ;use stack to load status
AS65 Assembler for R6502 [1.42].                                     Page  153
--------------------------------- verify.asm ---------------------------------

3849 : b94c02          >            lda absEOa,y    ;precharge accu
384c : 28              >            plp
                        
384d : 413e                     eor (indEO,x)
                                tst_ay  absrlo,absflo,0
384f : 08              >            php         ;save flags
3850 : d95002          >            cmp absrlo,y    ;test result
3853 : d0fe            >            bne *       ;trap
3855 : 68              >            pla         ;load status
                       >            eor_flag 0
3856 : 4934            >            eor #(0|$34)
                       >
3858 : d95402          >            cmp absflo,y    ;test flags
385b : d0fe            >            bne *       ;trap
                        
385d : ca                       dex
385e : ca                       dex
385f : 88                       dey
3860 : 10e4                     bpl teor12
3862 : a206                     ldx #6
3864 : a003                     ldy #3
3866 :                  teor13
                                set_ay  absEOa,$ff
                       >            load_flag $ff
3866 : a9ff            >            lda #$ff|4
                       >
3868 : 48              >            pha         ;use stack to load status
3869 : b94c02          >            lda absEOa,y    ;precharge accu
386c : 28              >            plp
                        
386d : 413e                     eor (indEO,x)
                                tst_ay  absrlo,absflo,$ff-fnz
386f : 08              >            php         ;save flags
3870 : d95002          >            cmp absrlo,y    ;test result
3873 : d0fe            >            bne *       ;trap
3875 : 68              >            pla         ;load status
                       >            eor_flag $ff-fnz
3876 : 497d            >            eor #($ff-fnz|$34)
                       >
3878 : d95402          >            cmp absflo,y    ;test flags
387b : d0fe            >            bne *       ;trap
                        
387d : ca                       dex
387e : ca                       dex
387f : 88                       dey
3880 : 10e4                     bpl teor13
                        
3882 : a003                     ldy #3      ;(zp),y
3884 :                  teor14
                                set_ay  absEOa,0
                       >            load_flag 0
3884 : a904            >            lda #0|4
                       >
3886 : 48              >            pha         ;use stack to load status
3887 : b94c02          >            lda absEOa,y    ;precharge accu
388a : 28              >            plp
                        
388b : 513e                     eor (indEO),y
                                tst_ay  absrlo,absflo,0
388d : 08              >            php         ;save flags
388e : d95002          >            cmp absrlo,y    ;test result
3891 : d0fe            >            bne *       ;trap
AS65 Assembler for R6502 [1.42].                                     Page  154
--------------------------------- verify.asm ---------------------------------

3893 : 68              >            pla         ;load status
                       >            eor_flag 0
3894 : 4934            >            eor #(0|$34)
                       >
3896 : d95402          >            cmp absflo,y    ;test flags
3899 : d0fe            >            bne *       ;trap
                        
389b : 88                       dey
389c : 10e6                     bpl teor14
389e : a003                     ldy #3
38a0 :                  teor15
                                set_ay  absEOa,$ff
                       >            load_flag $ff
38a0 : a9ff            >            lda #$ff|4
                       >
38a2 : 48              >            pha         ;use stack to load status
38a3 : b94c02          >            lda absEOa,y    ;precharge accu
38a6 : 28              >            plp
                        
38a7 : 513e                     eor (indEO),y
                                tst_ay  absrlo,absflo,$ff-fnz
38a9 : 08              >            php         ;save flags
38aa : d95002          >            cmp absrlo,y    ;test result
38ad : d0fe            >            bne *       ;trap
38af : 68              >            pla         ;load status
                       >            eor_flag $ff-fnz
38b0 : 497d            >            eor #($ff-fnz|$34)
                       >
38b2 : d95402          >            cmp absflo,y    ;test flags
38b5 : d0fe            >            bne *       ;trap
                        
38b7 : 88                       dey
38b8 : 10e6                     bpl teor15
                        
                        ; OR
38ba : a203                     ldx #3      ;immediate - self modifying code
38bc : b514             tora    lda zpOR,x
38be : 8dc938                   sta torai1
                                set_ax  absORa,0
                       >            load_flag 0
38c1 : a904            >            lda #0|4
                       >
38c3 : 48              >            pha         ;use stack to load status
38c4 : bd4402          >            lda absORa,x    ;precharge accu
38c7 : 28              >            plp
                        
38c9 =                  torai1  equ *+1     ;target for immediate operora
38c8 : 0963                     ora #99
                                tst_ax  absrlo,absflo,0
38ca : 08              >            php         ;save flags
38cb : dd5002          >            cmp absrlo,x    ;test result
38ce : d0fe            >            bne *       ;trap
38d0 : 68              >            pla         ;load status
                       >            eor_flag 0
38d1 : 4934            >            eor #(0|$34)
                       >
38d3 : dd5402          >            cmp absflo,x    ;test flags
38d6 : d0fe            >            bne *       ;trap
                        
38d8 : ca                       dex
38d9 : 10e1                     bpl tora
38db : a203                     ldx #3
AS65 Assembler for R6502 [1.42].                                     Page  155
--------------------------------- verify.asm ---------------------------------

38dd : b514             tora1   lda zpOR,x
38df : 8dea38                   sta torai2
                                set_ax  absORa,$ff
                       >            load_flag $ff
38e2 : a9ff            >            lda #$ff|4
                       >
38e4 : 48              >            pha         ;use stack to load status
38e5 : bd4402          >            lda absORa,x    ;precharge accu
38e8 : 28              >            plp
                        
38ea =                  torai2  equ *+1     ;target for immediate operora
38e9 : 0963                     ora #99
                                tst_ax  absrlo,absflo,$ff-fnz
38eb : 08              >            php         ;save flags
38ec : dd5002          >            cmp absrlo,x    ;test result
38ef : d0fe            >            bne *       ;trap
38f1 : 68              >            pla         ;load status
                       >            eor_flag $ff-fnz
38f2 : 497d            >            eor #($ff-fnz|$34)
                       >
38f4 : dd5402          >            cmp absflo,x    ;test flags
38f7 : d0fe            >            bne *       ;trap
                        
38f9 : ca                       dex
38fa : 10e1                     bpl tora1
                        
38fc : a203                     ldx #3      ;zp
38fe : b514             tora2    lda zpOR,x
3900 : 850f                     sta zpt
                                set_ax  absORa,0
                       >            load_flag 0
3902 : a904            >            lda #0|4
                       >
3904 : 48              >            pha         ;use stack to load status
3905 : bd4402          >            lda absORa,x    ;precharge accu
3908 : 28              >            plp
                        
3909 : 050f                     ora zpt
                                tst_ax  absrlo,absflo,0
390b : 08              >            php         ;save flags
390c : dd5002          >            cmp absrlo,x    ;test result
390f : d0fe            >            bne *       ;trap
3911 : 68              >            pla         ;load status
                       >            eor_flag 0
3912 : 4934            >            eor #(0|$34)
                       >
3914 : dd5402          >            cmp absflo,x    ;test flags
3917 : d0fe            >            bne *       ;trap
                        
3919 : ca                       dex
391a : 10e2                     bpl tora2
391c : a203                     ldx #3
391e : b514             tora3   lda zpOR,x
3920 : 850f                     sta zpt
                                set_ax  absORa,$ff
                       >            load_flag $ff
3922 : a9ff            >            lda #$ff|4
                       >
3924 : 48              >            pha         ;use stack to load status
3925 : bd4402          >            lda absORa,x    ;precharge accu
3928 : 28              >            plp
                        
AS65 Assembler for R6502 [1.42].                                     Page  156
--------------------------------- verify.asm ---------------------------------

3929 : 050f                     ora zpt
                                tst_ax  absrlo,absflo,$ff-fnz
392b : 08              >            php         ;save flags
392c : dd5002          >            cmp absrlo,x    ;test result
392f : d0fe            >            bne *       ;trap
3931 : 68              >            pla         ;load status
                       >            eor_flag $ff-fnz
3932 : 497d            >            eor #($ff-fnz|$34)
                       >
3934 : dd5402          >            cmp absflo,x    ;test flags
3937 : d0fe            >            bne *       ;trap
                        
3939 : ca                       dex
393a : 10e2                     bpl tora3
                        
393c : a203                     ldx #3      ;abs
393e : b514             tora4   lda zpOR,x
3940 : 8d3302                   sta abst
                                set_ax  absORa,0
                       >            load_flag 0
3943 : a904            >            lda #0|4
                       >
3945 : 48              >            pha         ;use stack to load status
3946 : bd4402          >            lda absORa,x    ;precharge accu
3949 : 28              >            plp
                        
394a : 0d3302                   ora abst
                                tst_ax  absrlo,absflo,0
394d : 08              >            php         ;save flags
394e : dd5002          >            cmp absrlo,x    ;test result
3951 : d0fe            >            bne *       ;trap
3953 : 68              >            pla         ;load status
                       >            eor_flag 0
3954 : 4934            >            eor #(0|$34)
                       >
3956 : dd5402          >            cmp absflo,x    ;test flags
3959 : d0fe            >            bne *       ;trap
                        
395b : ca                       dex
395c : 10e0                     bpl tora4
395e : a203                     ldx #3
3960 : b514             tora5   lda zpOR,x
3962 : 8d3302                   sta abst
                                set_ax  absORa,$ff
                       >            load_flag $ff
3965 : a9ff            >            lda #$ff|4
                       >
3967 : 48              >            pha         ;use stack to load status
3968 : bd4402          >            lda absORa,x    ;precharge accu
396b : 28              >            plp
                        
396c : 0d3302                   ora abst
                                tst_ax  absrlo,absflo,$ff-fnz
396f : 08              >            php         ;save flags
3970 : dd5002          >            cmp absrlo,x    ;test result
3973 : d0fe            >            bne *       ;trap
3975 : 68              >            pla         ;load status
                       >            eor_flag $ff-fnz
3976 : 497d            >            eor #($ff-fnz|$34)
                       >
3978 : dd5402          >            cmp absflo,x    ;test flags
397b : d0fe            >            bne *       ;trap
AS65 Assembler for R6502 [1.42].                                     Page  157
--------------------------------- verify.asm ---------------------------------

                        
397d : ca                       dex
397e : 1002                     bpl tora6
                        
3980 : a203                     ldx #3      ;zp,x
3982 :                  tora6
                                set_ax  absORa,0
                       >            load_flag 0
3982 : a904            >            lda #0|4
                       >
3984 : 48              >            pha         ;use stack to load status
3985 : bd4402          >            lda absORa,x    ;precharge accu
3988 : 28              >            plp
                        
3989 : 1514                     ora zpOR,x
                                tst_ax  absrlo,absflo,0
398b : 08              >            php         ;save flags
398c : dd5002          >            cmp absrlo,x    ;test result
398f : d0fe            >            bne *       ;trap
3991 : 68              >            pla         ;load status
                       >            eor_flag 0
3992 : 4934            >            eor #(0|$34)
                       >
3994 : dd5402          >            cmp absflo,x    ;test flags
3997 : d0fe            >            bne *       ;trap
                        
3999 : ca                       dex
399a : 10e6                     bpl tora6
399c : a203                     ldx #3
399e :                  tora7
                                set_ax  absORa,$ff
                       >            load_flag $ff
399e : a9ff            >            lda #$ff|4
                       >
39a0 : 48              >            pha         ;use stack to load status
39a1 : bd4402          >            lda absORa,x    ;precharge accu
39a4 : 28              >            plp
                        
39a5 : 1514                     ora zpOR,x
                                tst_ax  absrlo,absflo,$ff-fnz
39a7 : 08              >            php         ;save flags
39a8 : dd5002          >            cmp absrlo,x    ;test result
39ab : d0fe            >            bne *       ;trap
39ad : 68              >            pla         ;load status
                       >            eor_flag $ff-fnz
39ae : 497d            >            eor #($ff-fnz|$34)
                       >
39b0 : dd5402          >            cmp absflo,x    ;test flags
39b3 : d0fe            >            bne *       ;trap
                        
39b5 : ca                       dex
39b6 : 10e6                     bpl tora7
                        
39b8 : a203                     ldx #3      ;abs,x
39ba :                  tora8
                                set_ax  absORa,0
                       >            load_flag 0
39ba : a904            >            lda #0|4
                       >
39bc : 48              >            pha         ;use stack to load status
39bd : bd4402          >            lda absORa,x    ;precharge accu
39c0 : 28              >            plp
AS65 Assembler for R6502 [1.42].                                     Page  158
--------------------------------- verify.asm ---------------------------------

                        
39c1 : 1d3802                   ora absOR,x
                                tst_ax  absrlo,absflo,0
39c4 : 08              >            php         ;save flags
39c5 : dd5002          >            cmp absrlo,x    ;test result
39c8 : d0fe            >            bne *       ;trap
39ca : 68              >            pla         ;load status
                       >            eor_flag 0
39cb : 4934            >            eor #(0|$34)
                       >
39cd : dd5402          >            cmp absflo,x    ;test flags
39d0 : d0fe            >            bne *       ;trap
                        
39d2 : ca                       dex
39d3 : 10e5                     bpl tora8
39d5 : a203                     ldx #3
39d7 :                  tora9
                                set_ax  absORa,$ff
                       >            load_flag $ff
39d7 : a9ff            >            lda #$ff|4
                       >
39d9 : 48              >            pha         ;use stack to load status
39da : bd4402          >            lda absORa,x    ;precharge accu
39dd : 28              >            plp
                        
39de : 1d3802                   ora absOR,x
                                tst_ax  absrlo,absflo,$ff-fnz
39e1 : 08              >            php         ;save flags
39e2 : dd5002          >            cmp absrlo,x    ;test result
39e5 : d0fe            >            bne *       ;trap
39e7 : 68              >            pla         ;load status
                       >            eor_flag $ff-fnz
39e8 : 497d            >            eor #($ff-fnz|$34)
                       >
39ea : dd5402          >            cmp absflo,x    ;test flags
39ed : d0fe            >            bne *       ;trap
                        
39ef : ca                       dex
39f0 : 10e5                     bpl tora9
                        
39f2 : a003                     ldy #3      ;abs,y
39f4 :                  tora10
                                set_ay  absORa,0
                       >            load_flag 0
39f4 : a904            >            lda #0|4
                       >
39f6 : 48              >            pha         ;use stack to load status
39f7 : b94402          >            lda absORa,y    ;precharge accu
39fa : 28              >            plp
                        
39fb : 193802                   ora absOR,y
                                tst_ay  absrlo,absflo,0
39fe : 08              >            php         ;save flags
39ff : d95002          >            cmp absrlo,y    ;test result
3a02 : d0fe            >            bne *       ;trap
3a04 : 68              >            pla         ;load status
                       >            eor_flag 0
3a05 : 4934            >            eor #(0|$34)
                       >
3a07 : d95402          >            cmp absflo,y    ;test flags
3a0a : d0fe            >            bne *       ;trap
                        
AS65 Assembler for R6502 [1.42].                                     Page  159
--------------------------------- verify.asm ---------------------------------

3a0c : 88                       dey
3a0d : 10e5                     bpl tora10
3a0f : a003                     ldy #3
3a11 :                  tora11
                                set_ay  absORa,$ff
                       >            load_flag $ff
3a11 : a9ff            >            lda #$ff|4
                       >
3a13 : 48              >            pha         ;use stack to load status
3a14 : b94402          >            lda absORa,y    ;precharge accu
3a17 : 28              >            plp
                        
3a18 : 193802                   ora absOR,y
                                tst_ay  absrlo,absflo,$ff-fnz
3a1b : 08              >            php         ;save flags
3a1c : d95002          >            cmp absrlo,y    ;test result
3a1f : d0fe            >            bne *       ;trap
3a21 : 68              >            pla         ;load status
                       >            eor_flag $ff-fnz
3a22 : 497d            >            eor #($ff-fnz|$34)
                       >
3a24 : d95402          >            cmp absflo,y    ;test flags
3a27 : d0fe            >            bne *       ;trap
                        
3a29 : 88                       dey
3a2a : 10e5                     bpl tora11
                        
3a2c : a206                     ldx #6      ;(zp,x)
3a2e : a003                     ldy #3
3a30 :                  tora12
                                set_ay  absORa,0
                       >            load_flag 0
3a30 : a904            >            lda #0|4
                       >
3a32 : 48              >            pha         ;use stack to load status
3a33 : b94402          >            lda absORa,y    ;precharge accu
3a36 : 28              >            plp
                        
3a37 : 0146                     ora (indOR,x)
                                tst_ay  absrlo,absflo,0
3a39 : 08              >            php         ;save flags
3a3a : d95002          >            cmp absrlo,y    ;test result
3a3d : d0fe            >            bne *       ;trap
3a3f : 68              >            pla         ;load status
                       >            eor_flag 0
3a40 : 4934            >            eor #(0|$34)
                       >
3a42 : d95402          >            cmp absflo,y    ;test flags
3a45 : d0fe            >            bne *       ;trap
                        
3a47 : ca                       dex
3a48 : ca                       dex
3a49 : 88                       dey
3a4a : 10e4                     bpl tora12
3a4c : a206                     ldx #6
3a4e : a003                     ldy #3
3a50 :                  tora13
                                set_ay  absORa,$ff
                       >            load_flag $ff
3a50 : a9ff            >            lda #$ff|4
                       >
3a52 : 48              >            pha         ;use stack to load status
AS65 Assembler for R6502 [1.42].                                     Page  160
--------------------------------- verify.asm ---------------------------------

3a53 : b94402          >            lda absORa,y    ;precharge accu
3a56 : 28              >            plp
                        
3a57 : 0146                     ora (indOR,x)
                                tst_ay  absrlo,absflo,$ff-fnz
3a59 : 08              >            php         ;save flags
3a5a : d95002          >            cmp absrlo,y    ;test result
3a5d : d0fe            >            bne *       ;trap
3a5f : 68              >            pla         ;load status
                       >            eor_flag $ff-fnz
3a60 : 497d            >            eor #($ff-fnz|$34)
                       >
3a62 : d95402          >            cmp absflo,y    ;test flags
3a65 : d0fe            >            bne *       ;trap
                        
3a67 : ca                       dex
3a68 : ca                       dex
3a69 : 88                       dey
3a6a : 10e4                     bpl tora13
                        
3a6c : a003                     ldy #3      ;(zp),y
3a6e :                  tora14
                                set_ay  absORa,0
                       >            load_flag 0
3a6e : a904            >            lda #0|4
                       >
3a70 : 48              >            pha         ;use stack to load status
3a71 : b94402          >            lda absORa,y    ;precharge accu
3a74 : 28              >            plp
                        
3a75 : 1146                     ora (indOR),y
                                tst_ay  absrlo,absflo,0
3a77 : 08              >            php         ;save flags
3a78 : d95002          >            cmp absrlo,y    ;test result
3a7b : d0fe            >            bne *       ;trap
3a7d : 68              >            pla         ;load status
                       >            eor_flag 0
3a7e : 4934            >            eor #(0|$34)
                       >
3a80 : d95402          >            cmp absflo,y    ;test flags
3a83 : d0fe            >            bne *       ;trap
                        
3a85 : 88                       dey
3a86 : 10e6                     bpl tora14
3a88 : a003                     ldy #3
3a8a :                  tora15
                                set_ay  absORa,$ff
                       >            load_flag $ff
3a8a : a9ff            >            lda #$ff|4
                       >
3a8c : 48              >            pha         ;use stack to load status
3a8d : b94402          >            lda absORa,y    ;precharge accu
3a90 : 28              >            plp
                        
3a91 : 1146                     ora (indOR),y
                                tst_ay  absrlo,absflo,$ff-fnz
3a93 : 08              >            php         ;save flags
3a94 : d95002          >            cmp absrlo,y    ;test result
3a97 : d0fe            >            bne *       ;trap
3a99 : 68              >            pla         ;load status
                       >            eor_flag $ff-fnz
3a9a : 497d            >            eor #($ff-fnz|$34)
AS65 Assembler for R6502 [1.42].                                     Page  161
--------------------------------- verify.asm ---------------------------------

                       >
3a9c : d95402          >            cmp absflo,y    ;test flags
3a9f : d0fe            >            bne *       ;trap
                        
3aa1 : 88                       dey
3aa2 : 10e6                     bpl tora15
                            if I_flag = 3
                                cli
                            endif
                        
                        ; full binary add/subtract test
                        ; iterates through all combinations of operands and ca
                        ; uses increments/decrements to predict result & resul
3aa4 : d8                       cld
                        ;        sei
3aa5 : a258                     ldx #ad2        ;for indexed test
3aa7 : a0ff                     ldy #$ff        ;max range
3aa9 : a900                     lda #0          ;start with adding zeroes & no
3aab : 8556                     sta adfc        ;carry in - for diag
3aad : 8557                     sta ad1         ;operand 1 - accumulator
3aaf : 8558                     sta ad2         ;operand 2 - memory or immedia
3ab1 : 8d5802                   sta ada2        ;non zp
3ab4 : 8559                     sta adrl        ;expected result bits 0-7
3ab6 : 855a                     sta adrh        ;expected result bit 8 (carry 
3ab8 : a9ff                     lda #$ff        ;complemented operand 2 for su
3aba : 855c                     sta sb2
3abc : 8d5902                   sta sba2        ;non zp
3abf : a902                     lda #2          ;expected Z-flag
3ac1 : 855b                     sta adrf
3ac3 : 18               tadd    clc             ;test with carry clear
3ac4 : 20313c                   jsr chkadd
3ac7 : e656                     inc adfc        ;now with carry
3ac9 : e659                     inc adrl        ;result +1
3acb : 08                       php             ;save N & Z from low result
3acc : 08                       php
3acd : 68                       pla             ;accu holds expected flags
3ace : 2982                     and #$82        ;mask N & Z
3ad0 : 28                       plp
3ad1 : d002                     bne tadd1
3ad3 : e65a                     inc adrh        ;result bit 8 - carry
3ad5 : 055a             tadd1   ora adrh        ;merge C to expected flags
3ad7 : 855b                     sta adrf        ;save expected flags except ov
3ad9 : 38                       sec             ;test with carry set
3ada : 20313c                   jsr chkadd
3add : c656                     dec adfc        ;same for operand +1 but no ca
3adf : e657                     inc ad1
3ae1 : d0e0                     bne tadd        ;iterate op1
3ae3 : a900                     lda #0          ;preset result to op2 when op1
3ae5 : 855a                     sta adrh
3ae7 : ee5802                   inc ada2
3aea : e658                     inc ad2
3aec : 08                       php             ;save NZ as operand 2 becomes 
3aed : 68                       pla
3aee : 2982                     and #$82        ;mask N00000Z0
3af0 : 855b                     sta adrf        ;no need to check carry as we 
3af2 : c65c                     dec sb2         ;complement subtract operand 2
3af4 : ce5902                   dec sba2
3af7 : a558                     lda ad2
3af9 : 8559                     sta adrl
3afb : d0c6                     bne tadd        ;iterate op2
                        
                         if testingdecimal=1
AS65 Assembler for R6502 [1.42].                                     Page  162
--------------------------------- verify.asm ---------------------------------

                        
                        ; decimal add/subtract test
                        ; *** WARNING - tests documented behavior only! ***
                        ;   only valid BCD operands are tested, N V Z flags ar
                        ; iterates through all valid combinations of operands 
                        ; uses increments/decrements to predict result & carry
                                sed
                        ;        sei
                                ldx #ad2        ;for indexed test
                                ldy #$ff        ;max range
                                lda #$99        ;start with adding 99 to 99 wi
                                sta ad1         ;operand 1 - accumulator
                                sta ad2         ;operand 2 - memory or immedia
                                sta ada2        ;non zp
                                sta adrl        ;expected result bits 0-7
                                lda #1          ;set carry in & out
                                sta adfc        ;carry in - for diag
                                sta adrh        ;expected result bit 8 (carry 
                                lda #0          ;complemented operand 2 for su
                                sta sb2
                                sta sba2        ;non zp
                        tdad    sec             ;test with carry set
                                jsr chkdad
                                dec adfc        ;now with carry clear
                                lda adrl        ;decimal adjust result
                                bne tdad1       ;skip clear carry & preset res
                                dec adrh
                                lda #$99
                                sta adrl
                                bne tdad3
                        tdad1   and #$f         ;lower nibble mask
                                bne tdad2       ;no decimal adjust needed
                                dec adrl        ;decimal adjust (?0-6)
                                dec adrl
                                dec adrl
                                dec adrl
                                dec adrl
                                dec adrl
                        tdad2   dec adrl        ;result -1
                        tdad3   clc             ;test with carry clear
                                jsr chkdad
                                inc adfc        ;same for operand -1 but with 
                                lda ad1         ;decimal adjust operand 1
                                beq tdad5       ;iterate operand 2
                                and #$f         ;lower nibble mask
                                bne tdad4       ;skip decimal adjust
                                dec ad1         ;decimal adjust (?0-6)
                                dec ad1
                                dec ad1
                                dec ad1
                                dec ad1
                                dec ad1
                        tdad4   dec ad1         ;operand 1 -1
                                jmp tdad        ;iterate op1
                        
                        tdad5   lda #$99        ;precharge op1 max
                                sta ad1
                                lda ad2         ;decimal adjust operand 2
                                beq tdad7       ;end of iteration
                                and #$f         ;lower nibble mask
                                bne tdad6       ;skip decimal adjust
                                dec ad2         ;decimal adjust (?0-6)
AS65 Assembler for R6502 [1.42].                                     Page  163
--------------------------------- verify.asm ---------------------------------

                                dec ad2
                                dec ad2
                                dec ad2
                                dec ad2
                                dec ad2
                                inc sb2         ;complemented decimal adjust f
                                inc sb2
                                inc sb2
                                inc sb2
                                inc sb2
                                inc sb2
                        tdad6   dec ad2         ;operand 2 -1
                                inc sb2         ;complemeted operand for subtr
                                lda sb2
                                sta sba2        ;copy as non zp operand
                                lda ad2
                                sta ada2        ;copy as non zp operand
                                sta adrl        ;new result since op1+carry=00
                                inc adrh        ;result carry
                                bne tdad        ;iterate op2
                        tdad7   cld
                        
                         endif
                        
                        ; S U C C E S S **************************************
                        ; -------------
3afd : 4cfd3a                   jmp *           ;if you get here everything we
                        ; -------------
                        ; S U C C E S S **************************************
                        
                        ; core subroutine of the decimal add/subtract test
                        ; *** WARNING - tests documented behavior only! ***
                        ;   only valid BCD operands are tested, N V Z flags ar
                        ; iterates through all valid combinations of operands 
                        ; uses increments/decrements to predict result & carry
3b00 :                  chkdad
                        ; decimal ADC / SBC zp
3b00 : 08                       php             ;save carry for subtract
3b01 : a557                     lda ad1
3b03 : 6558                     adc ad2         ;perform add
3b05 : 08                       php
3b06 : c559                     cmp adrl        ;check result
3b08 : d0fe                     bne *           ;bad result
3b0a : 68                       pla             ;check flags
3b0b : 2901                     and #1          ;mask carry
3b0d : c55a                     cmp adrh
3b0f : d0fe                     bne *           ;bad carry
3b11 : 28                       plp
3b12 : 08                       php             ;save carry for next add
3b13 : a557                     lda ad1
3b15 : e55c                     sbc sb2         ;perform subtract
3b17 : 08                       php
3b18 : c559                     cmp adrl        ;check result
3b1a : d0fe                     bne *           ;bad result
3b1c : 68                       pla             ;check flags
3b1d : 2901                     and #1          ;mask carry
3b1f : c55a                     cmp adrh
3b21 : d0fe                     bne *           ;bad flags
3b23 : 28                       plp
                        ; decimal ADC / SBC abs
3b24 : 08                       php             ;save carry for subtract
3b25 : a557                     lda ad1
AS65 Assembler for R6502 [1.42].                                     Page  164
--------------------------------- verify.asm ---------------------------------

3b27 : 6d5802                   adc ada2        ;perform add
3b2a : 08                       php
3b2b : c559                     cmp adrl        ;check result
3b2d : d0fe                     bne *           ;bad result
3b2f : 68                       pla             ;check flags
3b30 : 2901                     and #1          ;mask carry
3b32 : c55a                     cmp adrh
3b34 : d0fe                     bne *           ;bad carry
3b36 : 28                       plp
3b37 : 08                       php             ;save carry for next add
3b38 : a557                     lda ad1
3b3a : ed5902                   sbc sba2        ;perform subtract
3b3d : 08                       php
3b3e : c559                     cmp adrl        ;check result
3b40 : d0fe                     bne *           ;bad result
3b42 : 68                       pla             ;check flags
3b43 : 2901                     and #1          ;mask carry
3b45 : c55a                     cmp adrh
3b47 : d0fe                     bne *           ;bad carry
3b49 : 28                       plp
                        ; decimal ADC / SBC #
3b4a : 08                       php             ;save carry for subtract
3b4b : a558                     lda ad2
3b4d : 8d533b                   sta chkdadi     ;self modify immediate
3b50 : a557                     lda ad1
3b53 =                  chkdadi = * + 1         ;operand of the immediate ADC
3b52 : 6900                     adc #0          ;perform add
3b54 : 08                       php
3b55 : c559                     cmp adrl        ;check result
3b57 : d0fe                     bne *           ;bad result
3b59 : 68                       pla             ;check flags
3b5a : 2901                     and #1          ;mask carry
3b5c : c55a                     cmp adrh
3b5e : d0fe                     bne *           ;bad carry
3b60 : 28                       plp
3b61 : 08                       php             ;save carry for next add
3b62 : a55c                     lda sb2
3b64 : 8d6a3b                   sta chkdsbi     ;self modify immediate
3b67 : a557                     lda ad1
3b6a =                  chkdsbi = * + 1         ;operand of the immediate SBC
3b69 : e900                     sbc #0          ;perform subtract
3b6b : 08                       php
3b6c : c559                     cmp adrl        ;check result
3b6e : d0fe                     bne *           ;bad result
3b70 : 68                       pla             ;check flags
3b71 : 2901                     and #1          ;mask carry
3b73 : c55a                     cmp adrh
3b75 : d0fe                     bne *           ;bad carry
3b77 : 28                       plp
                        ; decimal ADC / SBC zp,x
3b78 : 08                       php             ;save carry for subtract
3b79 : a557                     lda ad1
3b7b : 7500                     adc 0,x         ;perform add
3b7d : 08                       php
3b7e : c559                     cmp adrl        ;check result
3b80 : d0fe                     bne *           ;bad result
3b82 : 68                       pla             ;check flags
3b83 : 2901                     and #1          ;mask carry
3b85 : c55a                     cmp adrh
3b87 : d0fe                     bne *           ;bad carry
3b89 : 28                       plp
3b8a : 08                       php             ;save carry for next add
AS65 Assembler for R6502 [1.42].                                     Page  165
--------------------------------- verify.asm ---------------------------------

3b8b : a557                     lda ad1
3b8d : f504                     sbc sb2-ad2,x   ;perform subtract
3b8f : 08                       php
3b90 : c559                     cmp adrl        ;check result
3b92 : d0fe                     bne *           ;bad result
3b94 : 68                       pla             ;check flags
3b95 : 2901                     and #1          ;mask carry
3b97 : c55a                     cmp adrh
3b99 : d0fe                     bne *           ;bad carry
3b9b : 28                       plp
                        ; decimal ADC / SBC abs,x
3b9c : 08                       php             ;save carry for subtract
3b9d : a557                     lda ad1
3b9f : 7d0002                   adc ada2-ad2,x  ;perform add
3ba2 : 08                       php
3ba3 : c559                     cmp adrl        ;check result
3ba5 : d0fe                     bne *           ;bad result
3ba7 : 68                       pla             ;check flags
3ba8 : 2901                     and #1          ;mask carry
3baa : c55a                     cmp adrh
3bac : d0fe                     bne *           ;bad carry
3bae : 28                       plp
3baf : 08                       php             ;save carry for next add
3bb0 : a557                     lda ad1
3bb2 : fd0102                   sbc sba2-ad2,x  ;perform subtract
3bb5 : 08                       php
3bb6 : c559                     cmp adrl        ;check result
3bb8 : d0fe                     bne *           ;bad result
3bba : 68                       pla             ;check flags
3bbb : 2901                     and #1          ;mask carry
3bbd : c55a                     cmp adrh
3bbf : d0fe                     bne *           ;bad carry
3bc1 : 28                       plp
                        ; decimal ADC / SBC abs,y
3bc2 : 08                       php             ;save carry for subtract
3bc3 : a557                     lda ad1
3bc5 : 795901                   adc ada2-$ff,y  ;perform add
3bc8 : 08                       php
3bc9 : c559                     cmp adrl        ;check result
3bcb : d0fe                     bne *           ;bad result
3bcd : 68                       pla             ;check flags
3bce : 2901                     and #1          ;mask carry
3bd0 : c55a                     cmp adrh
3bd2 : d0fe                     bne *           ;bad carry
3bd4 : 28                       plp
3bd5 : 08                       php             ;save carry for next add
3bd6 : a557                     lda ad1
3bd8 : f95a01                   sbc sba2-$ff,y  ;perform subtract
3bdb : 08                       php
3bdc : c559                     cmp adrl        ;check result
3bde : d0fe                     bne *           ;bad result
3be0 : 68                       pla             ;check flags
3be1 : 2901                     and #1          ;mask carry
3be3 : c55a                     cmp adrh
3be5 : d0fe                     bne *           ;bad carry
3be7 : 28                       plp
                        ; decimal ADC / SBC (zp,x)
3be8 : 08                       php             ;save carry for subtract
3be9 : a557                     lda ad1
3beb : 61f6                     adc (lo adi2-ad2,x) ;perform add
3bed : 08                       php
3bee : c559                     cmp adrl        ;check result
AS65 Assembler for R6502 [1.42].                                     Page  166
--------------------------------- verify.asm ---------------------------------

3bf0 : d0fe                     bne *           ;bad result
3bf2 : 68                       pla             ;check flags
3bf3 : 2901                     and #1          ;mask carry
3bf5 : c55a                     cmp adrh
3bf7 : d0fe                     bne *           ;bad carry
3bf9 : 28                       plp
3bfa : 08                       php             ;save carry for next add
3bfb : a557                     lda ad1
3bfd : e1f8                     sbc (lo sbi2-ad2,x) ;perform subtract
3bff : 08                       php
3c00 : c559                     cmp adrl        ;check result
3c02 : d0fe                     bne *           ;bad result
3c04 : 68                       pla             ;check flags
3c05 : 2901                     and #1          ;mask carry
3c07 : c55a                     cmp adrh
3c09 : d0fe                     bne *           ;bad carry
3c0b : 28                       plp
                        ; decimal ADC / SBC (abs),y
3c0c : 08                       php             ;save carry for subtract
3c0d : a557                     lda ad1
3c0f : 7152                     adc (adiy2),y   ;perform add
3c11 : 08                       php
3c12 : c559                     cmp adrl        ;check result
3c14 : d0fe                     bne *           ;bad result
3c16 : 68                       pla             ;check flags
3c17 : 2901                     and #1          ;mask carry
3c19 : c55a                     cmp adrh
3c1b : d0fe                     bne *           ;bad carry
3c1d : 28                       plp
3c1e : 08                       php             ;save carry for next add
3c1f : a557                     lda ad1
3c21 : f154                     sbc (sbiy2),y   ;perform subtract
3c23 : 08                       php
3c24 : c559                     cmp adrl        ;check result
3c26 : d0fe                     bne *           ;bad result
3c28 : 68                       pla             ;check flags
3c29 : 2901                     and #1          ;mask carry
3c2b : c55a                     cmp adrh
3c2d : d0fe                     bne *           ;bad carry
3c2f : 28                       plp
3c30 : 60                       rts
                        
                        ; core subroutine of the full binary add/subtract test
                        ; iterates through all combinations of operands and ca
                        ; uses increments/decrements to predict result & resul
3c31 : a55b             chkadd  lda adrf        ;add V-flag if overflow
3c33 : 2983                     and #$83        ;keep N-----ZC / clear V
3c35 : 48                       pha
3c36 : a557                     lda ad1         ;test sign unequal between ope
3c38 : 4558                     eor ad2
3c3a : 300a                     bmi ckad1       ;no overflow possible - operan
3c3c : a557                     lda ad1         ;test sign equal between opera
3c3e : 4559                     eor adrl
3c40 : 1004                     bpl ckad1       ;no overflow occured - operand
3c42 : 68                       pla
3c43 : 0940                     ora #$40        ;set V
3c45 : 48                       pha
3c46 : 68               ckad1   pla
3c47 : 855b                     sta adrf        ;save expected flags
                        ; binary ADC / SBC zp
3c49 : 08                       php             ;save carry for subtract
3c4a : a557                     lda ad1
AS65 Assembler for R6502 [1.42].                                     Page  167
--------------------------------- verify.asm ---------------------------------

3c4c : 6558                     adc ad2         ;perform add
3c4e : 08                       php
3c4f : c559                     cmp adrl        ;check result
3c51 : d0fe                     bne *           ;bad result
3c53 : 68                       pla             ;check flags
3c54 : 29c3                     and #$c3        ;mask NV----ZC
3c56 : c55b                     cmp adrf
3c58 : d0fe                     bne *           ;bad flags
3c5a : 28                       plp
3c5b : 08                       php             ;save carry for next add
3c5c : a557                     lda ad1
3c5e : e55c                     sbc sb2         ;perform subtract
3c60 : 08                       php
3c61 : c559                     cmp adrl        ;check result
3c63 : d0fe                     bne *           ;bad result
3c65 : 68                       pla             ;check flags
3c66 : 29c3                     and #$c3        ;mask NV----ZC
3c68 : c55b                     cmp adrf
3c6a : d0fe                     bne *           ;bad flags
3c6c : 28                       plp
                        ; binary ADC / SBC abs
3c6d : 08                       php             ;save carry for subtract
3c6e : a557                     lda ad1
3c70 : 6d5802                   adc ada2        ;perform add
3c73 : 08                       php
3c74 : c559                     cmp adrl        ;check result
3c76 : d0fe                     bne *           ;bad result
3c78 : 68                       pla             ;check flags
3c79 : 29c3                     and #$c3        ;mask NV----ZC
3c7b : c55b                     cmp adrf
3c7d : d0fe                     bne *           ;bad flags
3c7f : 28                       plp
3c80 : 08                       php             ;save carry for next add
3c81 : a557                     lda ad1
3c83 : ed5902                   sbc sba2        ;perform subtract
3c86 : 08                       php
3c87 : c559                     cmp adrl        ;check result
3c89 : d0fe                     bne *           ;bad result
3c8b : 68                       pla             ;check flags
3c8c : 29c3                     and #$c3        ;mask NV----ZC
3c8e : c55b                     cmp adrf
3c90 : d0fe                     bne *           ;bad flags
3c92 : 28                       plp
                        ; binary ADC / SBC #
3c93 : 08                       php             ;save carry for subtract
3c94 : a558                     lda ad2
3c96 : 8d9c3c                   sta chkadi      ;self modify immediate
3c99 : a557                     lda ad1
3c9c =                  chkadi  = * + 1         ;operand of the immediate ADC
3c9b : 6900                     adc #0          ;perform add
3c9d : 08                       php
3c9e : c559                     cmp adrl        ;check result
3ca0 : d0fe                     bne *           ;bad result
3ca2 : 68                       pla             ;check flags
3ca3 : 29c3                     and #$c3        ;mask NV----ZC
3ca5 : c55b                     cmp adrf
3ca7 : d0fe                     bne *           ;bad flags
3ca9 : 28                       plp
3caa : 08                       php             ;save carry for next add
3cab : a55c                     lda sb2
3cad : 8db33c                   sta chksbi      ;self modify immediate
3cb0 : a557                     lda ad1
AS65 Assembler for R6502 [1.42].                                     Page  168
--------------------------------- verify.asm ---------------------------------

3cb3 =                  chksbi  = * + 1         ;operand of the immediate SBC
3cb2 : e900                     sbc #0          ;perform subtract
3cb4 : 08                       php
3cb5 : c559                     cmp adrl        ;check result
3cb7 : d0fe                     bne *           ;bad result
3cb9 : 68                       pla             ;check flags
3cba : 29c3                     and #$c3        ;mask NV----ZC
3cbc : c55b                     cmp adrf
3cbe : d0fe                     bne *           ;bad flags
3cc0 : 28                       plp
                        ; binary ADC / SBC zp,x
3cc1 : 08                       php             ;save carry for subtract
3cc2 : a557                     lda ad1
3cc4 : 7500                     adc 0,x         ;perform add
3cc6 : 08                       php
3cc7 : c559                     cmp adrl        ;check result
3cc9 : d0fe                     bne *           ;bad result
3ccb : 68                       pla             ;check flags
3ccc : 29c3                     and #$c3        ;mask NV----ZC
3cce : c55b                     cmp adrf
3cd0 : d0fe                     bne *           ;bad flags
3cd2 : 28                       plp
3cd3 : 08                       php             ;save carry for next add
3cd4 : a557                     lda ad1
3cd6 : f504                     sbc sb2-ad2,x   ;perform subtract
3cd8 : 08                       php
3cd9 : c559                     cmp adrl        ;check result
3cdb : d0fe                     bne *           ;bad result
3cdd : 68                       pla             ;check flags
3cde : 29c3                     and #$c3        ;mask NV----ZC
3ce0 : c55b                     cmp adrf
3ce2 : d0fe                     bne *           ;bad flags
3ce4 : 28                       plp
                        ; binary ADC / SBC abs,x
3ce5 : 08                       php             ;save carry for subtract
3ce6 : a557                     lda ad1
3ce8 : 7d0002                   adc ada2-ad2,x  ;perform add
3ceb : 08                       php
3cec : c559                     cmp adrl        ;check result
3cee : d0fe                     bne *           ;bad result
3cf0 : 68                       pla             ;check flags
3cf1 : 29c3                     and #$c3        ;mask NV----ZC
3cf3 : c55b                     cmp adrf
3cf5 : d0fe                     bne *           ;bad flags
3cf7 : 28                       plp
3cf8 : 08                       php             ;save carry for next add
3cf9 : a557                     lda ad1
3cfb : fd0102                   sbc sba2-ad2,x  ;perform subtract
3cfe : 08                       php
3cff : c559                     cmp adrl        ;check result
3d01 : d0fe                     bne *           ;bad result
3d03 : 68                       pla             ;check flags
3d04 : 29c3                     and #$c3        ;mask NV----ZC
3d06 : c55b                     cmp adrf
3d08 : d0fe                     bne *           ;bad flags
3d0a : 28                       plp
                        ; binary ADC / SBC abs,y
3d0b : 08                       php             ;save carry for subtract
3d0c : a557                     lda ad1
3d0e : 795901                   adc ada2-$ff,y  ;perform add
3d11 : 08                       php
3d12 : c559                     cmp adrl        ;check result
AS65 Assembler for R6502 [1.42].                                     Page  169
--------------------------------- verify.asm ---------------------------------

3d14 : d0fe                     bne *           ;bad result
3d16 : 68                       pla             ;check flags
3d17 : 29c3                     and #$c3        ;mask NV----ZC
3d19 : c55b                     cmp adrf
3d1b : d0fe                     bne *           ;bad flags
3d1d : 28                       plp
3d1e : 08                       php             ;save carry for next add
3d1f : a557                     lda ad1
3d21 : f95a01                   sbc sba2-$ff,y  ;perform subtract
3d24 : 08                       php
3d25 : c559                     cmp adrl        ;check result
3d27 : d0fe                     bne *           ;bad result
3d29 : 68                       pla             ;check flags
3d2a : 29c3                     and #$c3        ;mask NV----ZC
3d2c : c55b                     cmp adrf
3d2e : d0fe                     bne *           ;bad flags
3d30 : 28                       plp
                        ; binary ADC / SBC (zp,x)
3d31 : 08                       php             ;save carry for subtract
3d32 : a557                     lda ad1
3d34 : 61f6                     adc (lo adi2-ad2,x) ;perform add
3d36 : 08                       php
3d37 : c559                     cmp adrl        ;check result
3d39 : d0fe                     bne *           ;bad result
3d3b : 68                       pla             ;check flags
3d3c : 29c3                     and #$c3        ;mask NV----ZC
3d3e : c55b                     cmp adrf
3d40 : d0fe                     bne *           ;bad flags
3d42 : 28                       plp
3d43 : 08                       php             ;save carry for next add
3d44 : a557                     lda ad1
3d46 : e1f8                     sbc (lo sbi2-ad2,x) ;perform subtract
3d48 : 08                       php
3d49 : c559                     cmp adrl        ;check result
3d4b : d0fe                     bne *           ;bad result
3d4d : 68                       pla             ;check flags
3d4e : 29c3                     and #$c3        ;mask NV----ZC
3d50 : c55b                     cmp adrf
3d52 : d0fe                     bne *           ;bad flags
3d54 : 28                       plp
                        ; binary ADC / SBC (abs),y
3d55 : 08                       php             ;save carry for subtract
3d56 : a557                     lda ad1
3d58 : 7152                     adc (adiy2),y   ;perform add
3d5a : 08                       php
3d5b : c559                     cmp adrl        ;check result
3d5d : d0fe                     bne *           ;bad result
3d5f : 68                       pla             ;check flags
3d60 : 29c3                     and #$c3        ;mask NV----ZC
3d62 : c55b                     cmp adrf
3d64 : d0fe                     bne *           ;bad flags
3d66 : 28                       plp
3d67 : 08                       php             ;save carry for next add
3d68 : a557                     lda ad1
3d6a : f154                     sbc (sbiy2),y   ;perform subtract
3d6c : 08                       php
3d6d : c559                     cmp adrl        ;check result
3d6f : d0fe                     bne *           ;bad result
3d71 : 68                       pla             ;check flags
3d72 : 29c3                     and #$c3        ;mask NV----ZC
3d74 : c55b                     cmp adrf
3d76 : d0fe                     bne *           ;bad flags
AS65 Assembler for R6502 [1.42].                                     Page  170
--------------------------------- verify.asm ---------------------------------

3d78 : 28                       plp
3d79 : 60                       rts
                        
                        ; target for the jump absolute test
3d7a : 88                       dey
3d7b : 88                       dey
3d7c :                  test_far
3d7c : 08                       php             ;either SP or Y count will fai
3d7d : 88                       dey
3d7e : 88                       dey
3d7f : 88                       dey
3d80 : 28                       plp
3d81 : b0fe                     bcs *           ;flags loaded?
3d83 : 70fe                     bvs *
3d85 : 30fe                     bmi *
3d87 : f0fe                     beq *
3d89 : c946                     cmp #'F'        ;registers loaded?
3d8b : d0fe                     bne *
3d8d : e041                     cpx #'A'
3d8f : d0fe                     bne *
3d91 : c04f                     cpy #('R'-3)
3d93 : d0fe                     bne *
3d95 : 48                       pha             ;save a,x
3d96 : 8a                       txa
3d97 : 48                       pha
3d98 : ba                       tsx
3d99 : e0fd                     cpx #$fd        ;check SP
3d9b : d0fe                     bne *
3d9d : 68                       pla             ;restore x
3d9e : aa                       tax
                                set_stat $ff
                       >            load_flag $ff
3d9f : a9ff            >            lda #$ff|4
                       >
3da1 : 48              >            pha         ;use stack to load status
3da2 : 28              >            plp
                        
3da3 : 68                       pla             ;restore a
3da4 : e8                       inx             ;return registers with modific
3da5 : 49aa                     eor #$aa        ;N=1, V=1, Z=0, C=1
3da7 : 4c8812                   jmp far_ret
                        
                        ; target for the jump indirect test
3daa : b33d             ptr_tst_ind dw test_ind
3dac : d112             ptr_ind_ret dw ind_ret
3dae : 4cae3d                   jmp *           ;runover protection
3db1 : 88                       dey
3db2 : 88                       dey
3db3 :                  test_ind
3db3 : 08                       php             ;either SP or Y count will fai
3db4 : 88                       dey
3db5 : 88                       dey
3db6 : 88                       dey
3db7 : 28                       plp
3db8 : b0fe                     bcs *           ;flags loaded?
3dba : 70fe                     bvs *
3dbc : 30fe                     bmi *
3dbe : f0fe                     beq *
3dc0 : c949                     cmp #'I'        ;registers loaded?
3dc2 : d0fe                     bne *
3dc4 : e04e                     cpx #'N'
3dc6 : d0fe                     bne *
AS65 Assembler for R6502 [1.42].                                     Page  171
--------------------------------- verify.asm ---------------------------------

3dc8 : c041                     cpy #('D'-3)
3dca : d0fe                     bne *
3dcc : 48                       pha             ;save a,x
3dcd : 8a                       txa
3dce : 48                       pha
3dcf : ba                       tsx
3dd0 : e0fd                     cpx #$fd        ;check SP
3dd2 : d0fe                     bne *
3dd4 : 68                       pla             ;restore x
3dd5 : aa                       tax
                                set_stat $ff
                       >            load_flag $ff
3dd6 : a9ff            >            lda #$ff|4
                       >
3dd8 : 48              >            pha         ;use stack to load status
3dd9 : 28              >            plp
                        
3dda : 68                       pla             ;restore a
3ddb : e8                       inx             ;return registers with modific
3ddc : 49aa                     eor #$aa        ;N=1, V=1, Z=0, C=1
3dde : 6cac3d                   jmp (ptr_ind_ret)
3de1 : 4ce13d                   jmp *           ;runover protection
                        
                        ; target for the jump subroutine test
3de4 : 88                       dey
3de5 : 88                       dey
3de6 :                  test_jsr
3de6 : 08                       php             ;either SP or Y count will fai
3de7 : 88                       dey
3de8 : 88                       dey
3de9 : 88                       dey
3dea : 28                       plp
3deb : b0fe                     bcs *           ;flags loaded?
3ded : 70fe                     bvs *
3def : 30fe                     bmi *
3df1 : f0fe                     beq *
3df3 : c94a                     cmp #'J'        ;registers loaded?
3df5 : d0fe                     bne *
3df7 : e053                     cpx #'S'
3df9 : d0fe                     bne *
3dfb : c04f                     cpy #('R'-3)
3dfd : d0fe                     bne *
3dff : 48                       pha             ;save a,x
3e00 : 8a                       txa
3e01 : 48                       pha
3e02 : ba                       tsx             ;sp -4? (return addr,a,x)
3e03 : e0fb                     cpx #$fb
3e05 : d0fe                     bne *
3e07 : adff01                   lda $1ff        ;propper return on stack
3e0a : c912                     cmp #hi(jsr_ret)
3e0c : d0fe                     bne *
3e0e : adfe01                   lda $1fe
3e11 : c9fb                     cmp #lo(jsr_ret)
3e13 : d0fe                     bne *
                                set_stat $ff
                       >            load_flag $ff
3e15 : a9ff            >            lda #$ff|4
                       >
3e17 : 48              >            pha         ;use stack to load status
3e18 : 28              >            plp
                        
3e19 : 68                       pla             ;pull x,a
AS65 Assembler for R6502 [1.42].                                     Page  172
--------------------------------- verify.asm ---------------------------------

3e1a : aa                       tax
3e1b : 68                       pla
3e1c : e8                       inx             ;return registers with modific
3e1d : 49aa                     eor #$aa        ;N=1, V=1, Z=0, C=1
3e1f : 60                       rts
3e20 : 4c203e                   jmp *           ;runover protection
                        
                        ;trap in case of unexpected IRQ, NMI, BRK, RESET - BRK
3e23 :                  nmi_trap
3e23 : 4c233e                   jmp *           ;check stack for conditions at
3e26 :                  res_trap
3e26 : 4c263e                   jmp *           ;unexpected RESET
                        
3e29 : 88                       dey
3e2a : 88                       dey
3e2b :                  irq_trap                ;BRK test or unextpected BRK o
3e2b : 08                       php             ;either SP or Y count will fai
3e2c : 88                       dey
3e2d : 88                       dey
3e2e : 88                       dey
                                ;next 4 traps could be caused by unexpected BR
                                ;check stack for BREAK and originating locatio
                                ;possible jump/branch into weeds (uninitialize
3e2f : c942                     cmp #'B'        ;registers loaded?
3e31 : d0fe                     bne *
3e33 : e052                     cpx #'R'
3e35 : d0fe                     bne *
3e37 : c048                     cpy #('K'-3)
3e39 : d0fe                     bne *
3e3b : 855d                     sta irq_a       ;save registers during break t
3e3d : 865e                     stx irq_x
3e3f : ba                       tsx             ;test break on stack
3e40 : bd0201                   lda $102,x
                                cmp_flag 0      ;break test should have B=1
3e43 : c934            >            cmp #(0      |$34)&$ff
                        
3e45 : d0fe                     bne *           ;trap - no break flag on stack
3e47 : 68                       pla
3e48 : c934                     cmp #$34        ;should have added interrupt d
3e4a : d0fe                     bne *
3e4c : ba                       tsx
3e4d : e0fc                     cpx #$fc        ;sp -3? (return addr, flags)
3e4f : d0fe                     bne *
3e51 : adff01                   lda $1ff        ;propper return on stack
3e54 : c913                     cmp #hi(brk_ret)
3e56 : d0fe                     bne *
3e58 : adfe01                   lda $1fe
3e5b : c926                     cmp #lo(brk_ret)
3e5d : d0fe                     bne *
                                set_stat $ff
                       >            load_flag $ff
3e5f : a9ff            >            lda #$ff|4
                       >
3e61 : 48              >            pha         ;use stack to load status
3e62 : 28              >            plp
                        
3e63 : a65e                     ldx irq_x
3e65 : e8                       inx             ;return registers with modific
3e66 : a55d                     lda irq_a
3e68 : 49aa                     eor #$aa        ;N=1, V=1, Z=0, C=1 but origin
3e6a : 40                       rti
3e6b : 4c6b3e                   jmp *           ;runover protection
AS65 Assembler for R6502 [1.42].                                     Page  173
--------------------------------- verify.asm ---------------------------------

                        
                        ;copy of data to initialize BSS segment
                            if load_data_direct != 1
                        zp_init
                        zp1_    db  $c3,$82,$41,0   ;test patterns for LDx BIT
                        zp7f_   db  $7f             ;test pattern for compare
                        zpt_    ds  5               ;store/modify test area
                        ;logical zeropage operands
                        zpOR_   db  0,$1f,$71,$80   ;test pattern for OR
                        zpAN_   db  $0f,$ff,$7f,$80 ;test pattern for AND
                        zpEO_   db  $ff,$0f,$8f,$8f ;test pattern for EOR
                        ;indirect addressing pointers
                        ind1_   dw  abs1            ;indirect pointer to patte
                                dw  abs1+1
                                dw  abs1+2
                                dw  abs1+3
                                dw  abs7f
                        inw1_   dw  abs1-$f8        ;indirect pointer for wrap
                        indt_   dw  abst            ;indirect pointer to store
                                dw  abst+1
                                dw  abst+2
                                dw  abst+3
                        inwt_   dw  abst-$f8        ;indirect pointer for wrap
                        indAN_  dw  absAN           ;indirect pointer to AND p
                                dw  absAN+1
                                dw  absAN+2
                                dw  absAN+3
                        indEO_  dw  absEO           ;indirect pointer to EOR p
                                dw  absEO+1
                                dw  absEO+2
                                dw  absEO+3
                        indOR_  dw  absOR           ;indirect pointer to OR pa
                                dw  absOR+1
                                dw  absOR+2
                                dw  absOR+3
                        ;add/subtract operand generation and result/flag predi
                        adi2_   dw  ada2            ;indirect pointer to opera
                        sbi2_   dw  sba2            ;indirect pointer to compl
                        adiy2_  dw  ada2-$ff        ;with offset for indirect 
                        sbiy2_  dw  sba2-$ff
                        ;adfc    ds  1               ;carry flag before op
                        ;ad1     ds  1               ;operand 1 - accumulator
                        ;ad2     ds  1               ;operand 2 - memory / imm
                        ;adrl    ds  1               ;expected result bits 0-7
                        ;adrh    ds  1               ;expected result bit 8 (c
                        ;adrf    ds  1               ;expected flags NV0000ZC 
                        ;sb2     ds  1               ;operand 2 complemented f
                        ;break test interrupt save
                        ;irq_a   ds  1               ;a register
                        ;irq_x   ds  1               ;x register
                        zp_end
                            if (zp_end - zp_init) != (zp_bss_end - zp_bss)
                                ;force assembler error if size is different
                                ERROR ERROR ERROR   ;mismatch between bss and 
                            endif
                        data_init
                        abs1_   db  $c3,$82,$41,0   ;test patterns for LDx BIT
                        abs7f_  db  $7f             ;test pattern for compare
                        ;loads
                        fLDx_   db  fn,fn,0,fz      ;expected flags for load
                        ;shifts
                        rASL_                       ;expected result ASL & ROL
AS65 Assembler for R6502 [1.42].                                     Page  174
--------------------------------- verify.asm ---------------------------------

                        rROL_   db  $86,$04,$82,0   ; "
                        rROLc_  db  $87,$05,$83,1   ;expected result ROL +carr
                        rLSR_                       ;expected result LSR & ROR
                        rROR_   db  $61,$41,$20,0   ; "
                        rRORc_  db  $e1,$c1,$a0,$80 ;expected result ROR +carr
                        fASL_                       ;expected flags for shifts
                        fROL_   db  fnc,fc,fn,fz    ;no carry in
                        fROLc_  db  fnc,fc,fn,0     ;carry in
                        fLSR_
                        fROR_   db  fc,0,fc,fz      ;no carry in
                        fRORc_  db  fnc,fn,fnc,fn   ;carry in
                        ;increments (decrements)
                        rINC_   db  $7f,$80,$ff,0,1 ;expected result for INC/D
                        fINC_   db  0,fn,fn,fz,0    ;expected flags for INC/DE
                        abst_   ds  5               ;store/modify test area
                        ;logical memory operand
                        absOR_  db  0,$1f,$71,$80   ;test pattern for OR
                        absAN_  db  $0f,$ff,$7f,$80 ;test pattern for AND
                        absEO_  db  $ff,$0f,$8f,$8f ;test pattern for EOR
                        ;logical accu operand
                        absORa_ db  0,$f1,$1f,0     ;test pattern for OR
                        absANa_ db  $f0,$ff,$ff,$ff ;test pattern for AND
                        absEOa_ db  $ff,$f0,$f0,$0f ;test pattern for EOR
                        ;logical results
                        absrlo_ db  0,$ff,$7f,$80
                        absflo_ db  fz,fn,0,fn
                        ;add/subtract operand copy
                        ;ada2    ds  1               ;operand 2
                        ;sba2    ds  1               ;operand 2 complemented f
                        data_end
                            if (data_end - data_init) != (data_bss_end - data_
                                ;force assembler error if size is different
                                ERROR ERROR ERROR   ;mismatch between bss and 
                            endif
                            endif                   ;end of RAM init data
                        
                            if ROM_vectors = 1
fffa =                          org $fffa       ;vectors
fffa : 233e                     dw  nmi_trap
fffc : 263e                     dw  res_trap
fffe : 2b3e                     dw  irq_trap
                            endif
                        
No errors in pass 2.
